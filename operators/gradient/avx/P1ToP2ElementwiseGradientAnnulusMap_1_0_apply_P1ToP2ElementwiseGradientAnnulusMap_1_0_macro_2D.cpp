/*
* Copyright (c) 2017-2024 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG Operator Generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/































#include "../P1ToP2ElementwiseGradientAnnulusMap_1_0.hpp"

#define FUNC_PREFIX  

namespace hyteg {

namespace operatorgeneration {

void P1ToP2ElementwiseGradientAnnulusMap_1_0::apply_P1ToP2ElementwiseGradientAnnulusMap_1_0_macro_2D( real_t * RESTRICT  _data_dstEdge, real_t * RESTRICT  _data_dstVertex, real_t * RESTRICT  _data_src, real_t macro_vertex_coord_id_0comp0, real_t macro_vertex_coord_id_0comp1, real_t macro_vertex_coord_id_1comp0, real_t macro_vertex_coord_id_1comp1, real_t macro_vertex_coord_id_2comp0, real_t macro_vertex_coord_id_2comp1, int64_t micro_edges_per_macro_edge, real_t micro_edges_per_macro_edge_float, real_t radRayVertex, real_t radRefVertex, real_t rayVertex_0, real_t rayVertex_1, real_t refVertex_0, real_t refVertex_1, real_t thrVertex_0, real_t thrVertex_1 ) const
{
    {
       const real_t tmp_coords_jac_0_GRAY = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t p_affine_const_0_0_GRAY = macro_vertex_coord_id_0comp0;
       const real_t p_affine_const_0_1_GRAY = macro_vertex_coord_id_0comp1;
       const real_t p_affine_const_1_0_GRAY = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_GRAY*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t p_affine_const_1_1_GRAY = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_GRAY*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t p_affine_const_2_0_GRAY = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_GRAY*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t p_affine_const_2_1_GRAY = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_GRAY*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t jac_affine_0_0_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_1_0_GRAY;
       const real_t jac_affine_0_1_GRAY = -p_affine_const_0_0_GRAY + p_affine_const_2_0_GRAY;
       const real_t jac_affine_1_0_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_1_1_GRAY;
       const real_t jac_affine_1_1_GRAY = -p_affine_const_0_1_GRAY + p_affine_const_2_1_GRAY;
       const real_t tmp_coords_jac_1_GRAY = jac_affine_0_0_GRAY*jac_affine_1_1_GRAY - jac_affine_0_1_GRAY*jac_affine_1_0_GRAY;
       const real_t tmp_coords_jac_2_GRAY = 1.0 / (tmp_coords_jac_1_GRAY);
       const real_t jac_affine_inv_0_0_GRAY = jac_affine_1_1_GRAY*tmp_coords_jac_2_GRAY;
       const real_t jac_affine_inv_0_1_GRAY = -jac_affine_0_1_GRAY*tmp_coords_jac_2_GRAY;
       const real_t jac_affine_inv_1_0_GRAY = -jac_affine_1_0_GRAY*tmp_coords_jac_2_GRAY;
       const real_t jac_affine_inv_1_1_GRAY = jac_affine_0_0_GRAY*tmp_coords_jac_2_GRAY;
       const real_t abs_det_jac_affine_GRAY = abs(tmp_coords_jac_1_GRAY);
       const real_t tmp_blending_op_0 = -rayVertex_0 + thrVertex_0;
       const real_t tmp_blending_op_10 = -rayVertex_1 + thrVertex_1;
       const real_t tmp_blending_op_11 = (-radRayVertex + radRefVertex)*1.0 / (-tmp_blending_op_0*(-rayVertex_1 + refVertex_1) + tmp_blending_op_10*(-rayVertex_0 + refVertex_0));
       const real_t tmp_blending_op_12 = tmp_blending_op_11*1.0;
       const real_t tmp_blending_op_16 = -rayVertex_1;
       const real_t tmp_blending_op_17 = -rayVertex_0;
       const real_t tmp_kernel_op_0 = 0.66666666666666663;
       const real_t tmp_kernel_op_1 = 2.6666666666666665;
       const real_t tmp_kernel_op_2 = tmp_kernel_op_0 + tmp_kernel_op_1 - 3.0;
       const real_t tmp_kernel_op_5 = 2.6666666666666665;
       const real_t tmp_kernel_op_6 = 0.66666666666666663;
       const real_t tmp_kernel_op_7 = tmp_kernel_op_5 + tmp_kernel_op_6 - 3.0;
       const real_t tmp_kernel_op_10 = 0.66666666666666663;
       const real_t tmp_kernel_op_11 = 0.66666666666666663;
       const real_t tmp_kernel_op_12 = tmp_kernel_op_10 + tmp_kernel_op_11 - 3.0;
       const real_t tmp_kernel_op_15 = 0.16666666666666674;
       const real_t tmp_kernel_op_16 = 0.16666666666666671;
       const real_t tmp_kernel_op_17 = 0.66666666666666674;
       const real_t tmp_kernel_op_18 = tmp_kernel_op_0 - 1.0;
       const real_t tmp_kernel_op_20 = tmp_kernel_op_5 - 1.0;
       const real_t tmp_kernel_op_22 = tmp_kernel_op_10 - 1.0;
       const real_t tmp_kernel_op_24 = tmp_kernel_op_1 - 1.0;
       const real_t tmp_kernel_op_26 = tmp_kernel_op_6 - 1.0;
       const real_t tmp_kernel_op_28 = tmp_kernel_op_11 - 1.0;
       const real_t tmp_kernel_op_30 = jac_affine_inv_0_0_GRAY*tmp_kernel_op_1;
       const real_t tmp_kernel_op_31 = jac_affine_inv_1_0_GRAY*tmp_kernel_op_0;
       const real_t tmp_kernel_op_32 = jac_affine_inv_0_1_GRAY*tmp_kernel_op_1;
       const real_t tmp_kernel_op_33 = jac_affine_inv_1_1_GRAY*tmp_kernel_op_0;
       const real_t tmp_kernel_op_35 = jac_affine_inv_0_0_GRAY*tmp_kernel_op_6;
       const real_t tmp_kernel_op_36 = jac_affine_inv_1_0_GRAY*tmp_kernel_op_5;
       const real_t tmp_kernel_op_37 = jac_affine_inv_0_1_GRAY*tmp_kernel_op_6;
       const real_t tmp_kernel_op_38 = jac_affine_inv_1_1_GRAY*tmp_kernel_op_5;
       const real_t tmp_kernel_op_40 = jac_affine_inv_0_0_GRAY*tmp_kernel_op_11;
       const real_t tmp_kernel_op_41 = jac_affine_inv_1_0_GRAY*tmp_kernel_op_10;
       const real_t tmp_kernel_op_42 = jac_affine_inv_0_1_GRAY*tmp_kernel_op_11;
       const real_t tmp_kernel_op_43 = jac_affine_inv_1_1_GRAY*tmp_kernel_op_10;
       const real_t tmp_kernel_op_45 = -tmp_kernel_op_0 - 1.333333333333333;
       const real_t tmp_kernel_op_47 = -tmp_kernel_op_5 + 2.666666666666667;
       const real_t tmp_kernel_op_49 = -tmp_kernel_op_10 + 2.666666666666667;
       const real_t tmp_kernel_op_51 = -tmp_kernel_op_1 + 2.666666666666667;
       const real_t tmp_kernel_op_53 = -tmp_kernel_op_6 - 1.333333333333333;
       const real_t tmp_kernel_op_55 = -tmp_kernel_op_11 + 2.666666666666667;
       {
          /* FaceType.GRAY */
          for (int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d tmp_blending_op_1 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_1_1);
                const __m256d tmp_blending_op_2 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_2_1);
                const __m256d tmp_blending_op_3 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_1,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_2,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),p_affine_0_1);
                const __m256d tmp_blending_op_4 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_1_0);
                const __m256d tmp_blending_op_5 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_2_0);
                const __m256d tmp_blending_op_6 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_4,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_5,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),p_affine_0_0);
                const __m256d tmp_blending_op_7 = _mm256_mul_pd(tmp_blending_op_6,tmp_blending_op_6);
                const __m256d tmp_blending_op_8 = _mm256_mul_pd(tmp_blending_op_3,tmp_blending_op_3);
                const __m256d tmp_blending_op_9 = _mm256_add_pd(tmp_blending_op_7,tmp_blending_op_8);
                const __m256d tmp_blending_op_13 = _mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_sqrt_pd(tmp_blending_op_9)),_mm256_set_pd(tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12));
                const __m256d tmp_blending_op_14 = _mm256_mul_pd(tmp_blending_op_13,tmp_blending_op_3);
                const __m256d tmp_blending_op_15 = _mm256_div_pd(_mm256_sqrt_pd(tmp_blending_op_9),_mm256_mul_pd(tmp_blending_op_9,tmp_blending_op_9));
                const __m256d tmp_blending_op_18 = _mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17),tmp_blending_op_6),_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16),tmp_blending_op_3),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0))),_mm256_set_pd(tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11)),_mm256_set_pd(radRayVertex,radRayVertex,radRayVertex,radRayVertex));
                const __m256d tmp_blending_op_19 = _mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_15,tmp_blending_op_18),_mm256_set_pd(1.0,1.0,1.0,1.0));
                const __m256d tmp_blending_op_20 = _mm256_mul_pd(tmp_blending_op_13,tmp_blending_op_6);
                const __m256d tmp_blending_op_23 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_2,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_1,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_1);
                const __m256d tmp_blending_op_24 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_5,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_4,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_0);
                const __m256d tmp_blending_op_25 = _mm256_mul_pd(tmp_blending_op_24,tmp_blending_op_24);
                const __m256d tmp_blending_op_26 = _mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_23);
                const __m256d tmp_blending_op_27 = _mm256_add_pd(tmp_blending_op_25,tmp_blending_op_26);
                const __m256d tmp_blending_op_28 = _mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_sqrt_pd(tmp_blending_op_27)),_mm256_set_pd(tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12));
                const __m256d tmp_blending_op_29 = _mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_28);
                const __m256d tmp_blending_op_30 = _mm256_div_pd(_mm256_sqrt_pd(tmp_blending_op_27),_mm256_mul_pd(tmp_blending_op_27,tmp_blending_op_27));
                const __m256d tmp_blending_op_31 = _mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17),tmp_blending_op_24),_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16),tmp_blending_op_23),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0))),_mm256_set_pd(tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11)),_mm256_set_pd(radRayVertex,radRayVertex,radRayVertex,radRayVertex));
                const __m256d tmp_blending_op_32 = _mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_30,tmp_blending_op_31),_mm256_set_pd(1.0,1.0,1.0,1.0));
                const __m256d tmp_blending_op_33 = _mm256_mul_pd(tmp_blending_op_24,tmp_blending_op_28);
                const __m256d tmp_blending_op_36 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_1,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_2,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_1);
                const __m256d tmp_blending_op_37 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_4,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_5,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_0);
                const __m256d tmp_blending_op_38 = _mm256_mul_pd(tmp_blending_op_37,tmp_blending_op_37);
                const __m256d tmp_blending_op_39 = _mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_36);
                const __m256d tmp_blending_op_40 = _mm256_add_pd(tmp_blending_op_38,tmp_blending_op_39);
                const __m256d tmp_blending_op_41 = _mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_sqrt_pd(tmp_blending_op_40)),_mm256_set_pd(tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12));
                const __m256d tmp_blending_op_42 = _mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_41);
                const __m256d tmp_blending_op_43 = _mm256_div_pd(_mm256_sqrt_pd(tmp_blending_op_40),_mm256_mul_pd(tmp_blending_op_40,tmp_blending_op_40));
                const __m256d tmp_blending_op_44 = _mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17),tmp_blending_op_37),_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16),tmp_blending_op_36),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0))),_mm256_set_pd(tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11)),_mm256_set_pd(radRayVertex,radRayVertex,radRayVertex,radRayVertex));
                const __m256d tmp_blending_op_45 = _mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_43,tmp_blending_op_44),_mm256_set_pd(1.0,1.0,1.0,1.0));
                const __m256d tmp_blending_op_46 = _mm256_mul_pd(tmp_blending_op_37,tmp_blending_op_41);
                const __m256d jac_blending_1_1_q_2 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_14,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_15,tmp_blending_op_18),tmp_blending_op_7),_mm256_set_pd(1.0,1.0,1.0,1.0)));
                const __m256d jac_blending_1_0_q_2 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_14,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_19,tmp_blending_op_3),tmp_blending_op_6),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_1_q_2 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_20,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_15,tmp_blending_op_18),tmp_blending_op_3),tmp_blending_op_6),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_0_q_2 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_20,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(tmp_blending_op_19,tmp_blending_op_8));
                const __m256d tmp_blending_op_21 = _mm256_add_pd(_mm256_mul_pd(jac_blending_0_0_q_2,jac_blending_1_1_q_2),_mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_2,jac_blending_1_0_q_2),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d tmp_blending_op_22 = _mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),tmp_blending_op_21);
                const __m256d abs_det_jac_blending_q_2 = tmp_blending_op_21;
                const __m256d jac_blending_inv_1_1_q_2 = _mm256_mul_pd(jac_blending_0_0_q_2,tmp_blending_op_22);
                const __m256d jac_blending_inv_0_1_q_2 = _mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_2,tmp_blending_op_22),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0));
                const __m256d jac_blending_1_1_q_1 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_29,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_25,tmp_blending_op_30),tmp_blending_op_31),_mm256_set_pd(1.0,1.0,1.0,1.0)));
                const __m256d jac_blending_1_0_q_1 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_29,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_24),tmp_blending_op_32),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_1_q_1 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_33,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_24),tmp_blending_op_30),tmp_blending_op_31),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_0_q_1 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_33,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(tmp_blending_op_26,tmp_blending_op_32));
                const __m256d tmp_blending_op_34 = _mm256_add_pd(_mm256_mul_pd(jac_blending_0_0_q_1,jac_blending_1_1_q_1),_mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_1,jac_blending_1_0_q_1),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d tmp_blending_op_35 = _mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),tmp_blending_op_34);
                const __m256d abs_det_jac_blending_q_1 = tmp_blending_op_34;
                const __m256d jac_blending_inv_1_1_q_1 = _mm256_mul_pd(jac_blending_0_0_q_1,tmp_blending_op_35);
                const __m256d jac_blending_inv_0_1_q_1 = _mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_1,tmp_blending_op_35),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0));
                const __m256d jac_blending_1_1_q_0 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_42,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_38,tmp_blending_op_43),tmp_blending_op_44),_mm256_set_pd(1.0,1.0,1.0,1.0)));
                const __m256d jac_blending_1_0_q_0 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_42,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_37),tmp_blending_op_45),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_1_q_0 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_37),tmp_blending_op_43),tmp_blending_op_44),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_0_q_0 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_46,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(tmp_blending_op_39,tmp_blending_op_45));
                const __m256d tmp_blending_op_47 = _mm256_add_pd(_mm256_mul_pd(jac_blending_0_0_q_0,jac_blending_1_1_q_0),_mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_0,jac_blending_1_0_q_0),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d tmp_blending_op_48 = _mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),tmp_blending_op_47);
                const __m256d abs_det_jac_blending_q_0 = tmp_blending_op_47;
                const __m256d jac_blending_inv_1_1_q_0 = _mm256_mul_pd(jac_blending_0_0_q_0,tmp_blending_op_48);
                const __m256d jac_blending_inv_0_1_q_0 = _mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_0,tmp_blending_op_48),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))]);
                const __m256d tmp_kernel_op_3 = _mm256_mul_pd(_mm256_mul_pd(abs_det_jac_blending_q_0,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_set_pd(abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY));
                const __m256d tmp_kernel_op_4 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_8 = _mm256_mul_pd(_mm256_mul_pd(abs_det_jac_blending_q_1,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_set_pd(abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY));
                const __m256d tmp_kernel_op_9 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_13 = _mm256_mul_pd(_mm256_mul_pd(abs_det_jac_blending_q_2,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_set_pd(abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY,abs_det_jac_affine_GRAY));
                const __m256d tmp_kernel_op_14 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_19 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY)),_mm256_set_pd(tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY)),_mm256_set_pd(tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18))));
                const __m256d tmp_kernel_op_21 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY)),_mm256_set_pd(tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY)),_mm256_set_pd(tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20))));
                const __m256d tmp_kernel_op_23 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY)),_mm256_set_pd(tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY)),_mm256_set_pd(tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22))));
                const __m256d tmp_kernel_op_25 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY)),_mm256_set_pd(tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY)),_mm256_set_pd(tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24))));
                const __m256d tmp_kernel_op_27 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY)),_mm256_set_pd(tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY)),_mm256_set_pd(tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26))));
                const __m256d tmp_kernel_op_29 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY)),_mm256_set_pd(tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY)),_mm256_set_pd(tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28))));
                const __m256d tmp_kernel_op_34 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_set_pd(tmp_kernel_op_30,tmp_kernel_op_30,tmp_kernel_op_30,tmp_kernel_op_30),_mm256_set_pd(tmp_kernel_op_31,tmp_kernel_op_31,tmp_kernel_op_31,tmp_kernel_op_31))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_set_pd(tmp_kernel_op_32,tmp_kernel_op_32,tmp_kernel_op_32,tmp_kernel_op_32),_mm256_set_pd(tmp_kernel_op_33,tmp_kernel_op_33,tmp_kernel_op_33,tmp_kernel_op_33))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_39 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_set_pd(tmp_kernel_op_35,tmp_kernel_op_35,tmp_kernel_op_35,tmp_kernel_op_35),_mm256_set_pd(tmp_kernel_op_36,tmp_kernel_op_36,tmp_kernel_op_36,tmp_kernel_op_36))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_set_pd(tmp_kernel_op_37,tmp_kernel_op_37,tmp_kernel_op_37,tmp_kernel_op_37),_mm256_set_pd(tmp_kernel_op_38,tmp_kernel_op_38,tmp_kernel_op_38,tmp_kernel_op_38))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_44 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_set_pd(tmp_kernel_op_40,tmp_kernel_op_40,tmp_kernel_op_40,tmp_kernel_op_40),_mm256_set_pd(tmp_kernel_op_41,tmp_kernel_op_41,tmp_kernel_op_41,tmp_kernel_op_41))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_set_pd(tmp_kernel_op_42,tmp_kernel_op_42,tmp_kernel_op_42,tmp_kernel_op_42),_mm256_set_pd(tmp_kernel_op_43,tmp_kernel_op_43,tmp_kernel_op_43,tmp_kernel_op_43))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_46 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_30,tmp_kernel_op_30,tmp_kernel_op_30,tmp_kernel_op_30)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY),_mm256_set_pd(tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_32,tmp_kernel_op_32,tmp_kernel_op_32,tmp_kernel_op_32)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY),_mm256_set_pd(tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_48 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_35,tmp_kernel_op_35,tmp_kernel_op_35,tmp_kernel_op_35)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY),_mm256_set_pd(tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_37,tmp_kernel_op_37,tmp_kernel_op_37,tmp_kernel_op_37)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY),_mm256_set_pd(tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_50 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_40,tmp_kernel_op_40,tmp_kernel_op_40,tmp_kernel_op_40)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY,jac_affine_inv_1_0_GRAY),_mm256_set_pd(tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_42,tmp_kernel_op_42,tmp_kernel_op_42,tmp_kernel_op_42)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY,jac_affine_inv_1_1_GRAY),_mm256_set_pd(tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_52 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_31,tmp_kernel_op_31,tmp_kernel_op_31,tmp_kernel_op_31)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY),_mm256_set_pd(tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_33,tmp_kernel_op_33,tmp_kernel_op_33,tmp_kernel_op_33)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY),_mm256_set_pd(tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_54 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_36,tmp_kernel_op_36,tmp_kernel_op_36,tmp_kernel_op_36)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY),_mm256_set_pd(tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_38,tmp_kernel_op_38,tmp_kernel_op_38,tmp_kernel_op_38)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY),_mm256_set_pd(tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_56 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_41,tmp_kernel_op_41,tmp_kernel_op_41,tmp_kernel_op_41)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY,jac_affine_inv_0_0_GRAY),_mm256_set_pd(tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_kernel_op_43,tmp_kernel_op_43,tmp_kernel_op_43,tmp_kernel_op_43)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY,jac_affine_inv_0_1_GRAY),_mm256_set_pd(tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_14,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_4,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_9,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_14,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_9,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_4,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_4,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_9,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_14,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_19,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_23,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_21,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_21,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_23,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_19,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_19,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_21,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_23,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_25,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_29,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_27,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_27,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_29,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_25,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_25,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_27,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_29,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_34,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_44,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_39,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_39,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_44,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_34,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_34,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_39,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_44,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_46,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_50,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_48,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_48,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_50,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_46,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_46,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_48,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_50,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_52,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_56,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_54,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_54,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_56,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_52,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_52,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_54,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_56,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 < -ctr_1 + micro_edges_per_macro_edge; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0;
                const real_t tmp_blending_op_1 = -p_affine_0_1 + p_affine_1_1;
                const real_t tmp_blending_op_2 = -p_affine_0_1 + p_affine_2_1;
                const real_t tmp_blending_op_3 = p_affine_0_1 + tmp_blending_op_1*0.16666666666666666 + tmp_blending_op_2*0.16666666666666666;
                const real_t tmp_blending_op_4 = -p_affine_0_0 + p_affine_1_0;
                const real_t tmp_blending_op_5 = -p_affine_0_0 + p_affine_2_0;
                const real_t tmp_blending_op_6 = p_affine_0_0 + tmp_blending_op_4*0.16666666666666666 + tmp_blending_op_5*0.16666666666666666;
                const real_t tmp_blending_op_7 = (tmp_blending_op_6*tmp_blending_op_6);
                const real_t tmp_blending_op_8 = (tmp_blending_op_3*tmp_blending_op_3);
                const real_t tmp_blending_op_9 = tmp_blending_op_7 + tmp_blending_op_8;
                const real_t tmp_blending_op_13 = tmp_blending_op_12*pow(tmp_blending_op_9, -0.50000000000000000);
                const real_t tmp_blending_op_14 = tmp_blending_op_13*tmp_blending_op_3;
                const real_t tmp_blending_op_15 = pow(tmp_blending_op_9, -1.5000000000000000);
                const real_t tmp_blending_op_18 = radRayVertex + tmp_blending_op_11*(-tmp_blending_op_0*(tmp_blending_op_16 + tmp_blending_op_3) + tmp_blending_op_10*(tmp_blending_op_17 + tmp_blending_op_6));
                const real_t tmp_blending_op_19 = tmp_blending_op_15*tmp_blending_op_18*1.0;
                const real_t tmp_blending_op_20 = tmp_blending_op_13*tmp_blending_op_6;
                const real_t tmp_blending_op_23 = p_affine_0_1 + tmp_blending_op_1*0.66666666666666663 + tmp_blending_op_2*0.16666666666666666;
                const real_t tmp_blending_op_24 = p_affine_0_0 + tmp_blending_op_4*0.66666666666666663 + tmp_blending_op_5*0.16666666666666666;
                const real_t tmp_blending_op_25 = (tmp_blending_op_24*tmp_blending_op_24);
                const real_t tmp_blending_op_26 = (tmp_blending_op_23*tmp_blending_op_23);
                const real_t tmp_blending_op_27 = tmp_blending_op_25 + tmp_blending_op_26;
                const real_t tmp_blending_op_28 = tmp_blending_op_12*pow(tmp_blending_op_27, -0.50000000000000000);
                const real_t tmp_blending_op_29 = tmp_blending_op_23*tmp_blending_op_28;
                const real_t tmp_blending_op_30 = pow(tmp_blending_op_27, -1.5000000000000000);
                const real_t tmp_blending_op_31 = radRayVertex + tmp_blending_op_11*(-tmp_blending_op_0*(tmp_blending_op_16 + tmp_blending_op_23) + tmp_blending_op_10*(tmp_blending_op_17 + tmp_blending_op_24));
                const real_t tmp_blending_op_32 = tmp_blending_op_30*tmp_blending_op_31*1.0;
                const real_t tmp_blending_op_33 = tmp_blending_op_24*tmp_blending_op_28;
                const real_t tmp_blending_op_36 = p_affine_0_1 + tmp_blending_op_1*0.16666666666666666 + tmp_blending_op_2*0.66666666666666663;
                const real_t tmp_blending_op_37 = p_affine_0_0 + tmp_blending_op_4*0.16666666666666666 + tmp_blending_op_5*0.66666666666666663;
                const real_t tmp_blending_op_38 = (tmp_blending_op_37*tmp_blending_op_37);
                const real_t tmp_blending_op_39 = (tmp_blending_op_36*tmp_blending_op_36);
                const real_t tmp_blending_op_40 = tmp_blending_op_38 + tmp_blending_op_39;
                const real_t tmp_blending_op_41 = tmp_blending_op_12*pow(tmp_blending_op_40, -0.50000000000000000);
                const real_t tmp_blending_op_42 = tmp_blending_op_36*tmp_blending_op_41;
                const real_t tmp_blending_op_43 = pow(tmp_blending_op_40, -1.5000000000000000);
                const real_t tmp_blending_op_44 = radRayVertex + tmp_blending_op_11*(-tmp_blending_op_0*(tmp_blending_op_16 + tmp_blending_op_36) + tmp_blending_op_10*(tmp_blending_op_17 + tmp_blending_op_37));
                const real_t tmp_blending_op_45 = tmp_blending_op_43*tmp_blending_op_44*1.0;
                const real_t tmp_blending_op_46 = tmp_blending_op_37*tmp_blending_op_41;
                const real_t jac_blending_1_1_q_2 = -tmp_blending_op_0*tmp_blending_op_14 + tmp_blending_op_15*tmp_blending_op_18*tmp_blending_op_7*1.0;
                const real_t jac_blending_1_0_q_2 = tmp_blending_op_10*tmp_blending_op_14 - tmp_blending_op_19*tmp_blending_op_3*tmp_blending_op_6;
                const real_t jac_blending_0_1_q_2 = -tmp_blending_op_0*tmp_blending_op_20 - tmp_blending_op_15*tmp_blending_op_18*tmp_blending_op_3*tmp_blending_op_6;
                const real_t jac_blending_0_0_q_2 = tmp_blending_op_10*tmp_blending_op_20 + tmp_blending_op_19*tmp_blending_op_8;
                const real_t tmp_blending_op_21 = jac_blending_0_0_q_2*jac_blending_1_1_q_2 - jac_blending_0_1_q_2*jac_blending_1_0_q_2;
                const real_t tmp_blending_op_22 = 1.0 / (tmp_blending_op_21);
                const real_t abs_det_jac_blending_q_2 = tmp_blending_op_21;
                const real_t jac_blending_inv_1_1_q_2 = jac_blending_0_0_q_2*tmp_blending_op_22;
                const real_t jac_blending_inv_0_1_q_2 = -jac_blending_0_1_q_2*tmp_blending_op_22;
                const real_t jac_blending_1_1_q_1 = -tmp_blending_op_0*tmp_blending_op_29 + tmp_blending_op_25*tmp_blending_op_30*tmp_blending_op_31*1.0;
                const real_t jac_blending_1_0_q_1 = tmp_blending_op_10*tmp_blending_op_29 - tmp_blending_op_23*tmp_blending_op_24*tmp_blending_op_32;
                const real_t jac_blending_0_1_q_1 = -tmp_blending_op_0*tmp_blending_op_33 - tmp_blending_op_23*tmp_blending_op_24*tmp_blending_op_30*tmp_blending_op_31;
                const real_t jac_blending_0_0_q_1 = tmp_blending_op_10*tmp_blending_op_33 + tmp_blending_op_26*tmp_blending_op_32;
                const real_t tmp_blending_op_34 = jac_blending_0_0_q_1*jac_blending_1_1_q_1 - jac_blending_0_1_q_1*jac_blending_1_0_q_1;
                const real_t tmp_blending_op_35 = 1.0 / (tmp_blending_op_34);
                const real_t abs_det_jac_blending_q_1 = tmp_blending_op_34;
                const real_t jac_blending_inv_1_1_q_1 = jac_blending_0_0_q_1*tmp_blending_op_35;
                const real_t jac_blending_inv_0_1_q_1 = -jac_blending_0_1_q_1*tmp_blending_op_35;
                const real_t jac_blending_1_1_q_0 = -tmp_blending_op_0*tmp_blending_op_42 + tmp_blending_op_38*tmp_blending_op_43*tmp_blending_op_44*1.0;
                const real_t jac_blending_1_0_q_0 = tmp_blending_op_10*tmp_blending_op_42 - tmp_blending_op_36*tmp_blending_op_37*tmp_blending_op_45;
                const real_t jac_blending_0_1_q_0 = -tmp_blending_op_0*tmp_blending_op_46 - tmp_blending_op_36*tmp_blending_op_37*tmp_blending_op_43*tmp_blending_op_44;
                const real_t jac_blending_0_0_q_0 = tmp_blending_op_10*tmp_blending_op_46 + tmp_blending_op_39*tmp_blending_op_45;
                const real_t tmp_blending_op_47 = jac_blending_0_0_q_0*jac_blending_1_1_q_0 - jac_blending_0_1_q_0*jac_blending_1_0_q_0;
                const real_t tmp_blending_op_48 = 1.0 / (tmp_blending_op_47);
                const real_t abs_det_jac_blending_q_0 = tmp_blending_op_47;
                const real_t jac_blending_inv_1_1_q_0 = jac_blending_0_0_q_0*tmp_blending_op_48;
                const real_t jac_blending_inv_0_1_q_0 = -jac_blending_0_1_q_0*tmp_blending_op_48;
                const real_t src_dof_0 = _data_src[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2))];
                const real_t src_dof_1 = _data_src[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1];
                const real_t src_dof_2 = _data_src[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))];
                const real_t tmp_kernel_op_3 = abs_det_jac_affine_GRAY*abs_det_jac_blending_q_0*0.16666666666666666;
                const real_t tmp_kernel_op_4 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(jac_affine_inv_0_0_GRAY*tmp_kernel_op_2 + jac_affine_inv_1_0_GRAY*tmp_kernel_op_2) - jac_blending_inv_1_1_q_0*(jac_affine_inv_0_1_GRAY*tmp_kernel_op_2 + jac_affine_inv_1_1_GRAY*tmp_kernel_op_2));
                const real_t tmp_kernel_op_8 = abs_det_jac_affine_GRAY*abs_det_jac_blending_q_1*0.16666666666666666;
                const real_t tmp_kernel_op_9 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(jac_affine_inv_0_0_GRAY*tmp_kernel_op_7 + jac_affine_inv_1_0_GRAY*tmp_kernel_op_7) - jac_blending_inv_1_1_q_1*(jac_affine_inv_0_1_GRAY*tmp_kernel_op_7 + jac_affine_inv_1_1_GRAY*tmp_kernel_op_7));
                const real_t tmp_kernel_op_13 = abs_det_jac_affine_GRAY*abs_det_jac_blending_q_2*0.16666666666666666;
                const real_t tmp_kernel_op_14 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(jac_affine_inv_0_0_GRAY*tmp_kernel_op_12 + jac_affine_inv_1_0_GRAY*tmp_kernel_op_12) - jac_blending_inv_1_1_q_2*(jac_affine_inv_0_1_GRAY*tmp_kernel_op_12 + jac_affine_inv_1_1_GRAY*tmp_kernel_op_12));
                const real_t tmp_kernel_op_19 = tmp_kernel_op_3*(-jac_affine_inv_0_0_GRAY*jac_blending_inv_0_1_q_0*tmp_kernel_op_18 - jac_affine_inv_0_1_GRAY*jac_blending_inv_1_1_q_0*tmp_kernel_op_18);
                const real_t tmp_kernel_op_21 = tmp_kernel_op_8*(-jac_affine_inv_0_0_GRAY*jac_blending_inv_0_1_q_1*tmp_kernel_op_20 - jac_affine_inv_0_1_GRAY*jac_blending_inv_1_1_q_1*tmp_kernel_op_20);
                const real_t tmp_kernel_op_23 = tmp_kernel_op_13*(-jac_affine_inv_0_0_GRAY*jac_blending_inv_0_1_q_2*tmp_kernel_op_22 - jac_affine_inv_0_1_GRAY*jac_blending_inv_1_1_q_2*tmp_kernel_op_22);
                const real_t tmp_kernel_op_25 = tmp_kernel_op_3*(-jac_affine_inv_1_0_GRAY*jac_blending_inv_0_1_q_0*tmp_kernel_op_24 - jac_affine_inv_1_1_GRAY*jac_blending_inv_1_1_q_0*tmp_kernel_op_24);
                const real_t tmp_kernel_op_27 = tmp_kernel_op_8*(-jac_affine_inv_1_0_GRAY*jac_blending_inv_0_1_q_1*tmp_kernel_op_26 - jac_affine_inv_1_1_GRAY*jac_blending_inv_1_1_q_1*tmp_kernel_op_26);
                const real_t tmp_kernel_op_29 = tmp_kernel_op_13*(-jac_affine_inv_1_0_GRAY*jac_blending_inv_0_1_q_2*tmp_kernel_op_28 - jac_affine_inv_1_1_GRAY*jac_blending_inv_1_1_q_2*tmp_kernel_op_28);
                const real_t tmp_kernel_op_34 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(tmp_kernel_op_30 + tmp_kernel_op_31) - jac_blending_inv_1_1_q_0*(tmp_kernel_op_32 + tmp_kernel_op_33));
                const real_t tmp_kernel_op_39 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(tmp_kernel_op_35 + tmp_kernel_op_36) - jac_blending_inv_1_1_q_1*(tmp_kernel_op_37 + tmp_kernel_op_38));
                const real_t tmp_kernel_op_44 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(tmp_kernel_op_40 + tmp_kernel_op_41) - jac_blending_inv_1_1_q_2*(tmp_kernel_op_42 + tmp_kernel_op_43));
                const real_t tmp_kernel_op_46 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(jac_affine_inv_1_0_GRAY*tmp_kernel_op_45 - tmp_kernel_op_30) - jac_blending_inv_1_1_q_0*(jac_affine_inv_1_1_GRAY*tmp_kernel_op_45 - tmp_kernel_op_32));
                const real_t tmp_kernel_op_48 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(jac_affine_inv_1_0_GRAY*tmp_kernel_op_47 - tmp_kernel_op_35) - jac_blending_inv_1_1_q_1*(jac_affine_inv_1_1_GRAY*tmp_kernel_op_47 - tmp_kernel_op_37));
                const real_t tmp_kernel_op_50 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(jac_affine_inv_1_0_GRAY*tmp_kernel_op_49 - tmp_kernel_op_40) - jac_blending_inv_1_1_q_2*(jac_affine_inv_1_1_GRAY*tmp_kernel_op_49 - tmp_kernel_op_42));
                const real_t tmp_kernel_op_52 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(jac_affine_inv_0_0_GRAY*tmp_kernel_op_51 - tmp_kernel_op_31) - jac_blending_inv_1_1_q_0*(jac_affine_inv_0_1_GRAY*tmp_kernel_op_51 - tmp_kernel_op_33));
                const real_t tmp_kernel_op_54 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(jac_affine_inv_0_0_GRAY*tmp_kernel_op_53 - tmp_kernel_op_36) - jac_blending_inv_1_1_q_1*(jac_affine_inv_0_1_GRAY*tmp_kernel_op_53 - tmp_kernel_op_38));
                const real_t tmp_kernel_op_56 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(jac_affine_inv_0_0_GRAY*tmp_kernel_op_55 - tmp_kernel_op_41) - jac_blending_inv_1_1_q_2*(jac_affine_inv_0_1_GRAY*tmp_kernel_op_55 - tmp_kernel_op_43));
                const real_t elMatVec_0 = src_dof_0*(tmp_kernel_op_14*tmp_kernel_op_17 + tmp_kernel_op_15*tmp_kernel_op_4 + tmp_kernel_op_16*tmp_kernel_op_9) + src_dof_1*(tmp_kernel_op_14*0.16666666666666666 + tmp_kernel_op_4*0.16666666666666666 + tmp_kernel_op_9*0.66666666666666663) + src_dof_2*(tmp_kernel_op_14*0.16666666666666666 + tmp_kernel_op_4*0.66666666666666663 + tmp_kernel_op_9*0.16666666666666666);
                const real_t elMatVec_1 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_19 + tmp_kernel_op_16*tmp_kernel_op_21 + tmp_kernel_op_17*tmp_kernel_op_23) + src_dof_1*(tmp_kernel_op_19*0.16666666666666666 + tmp_kernel_op_21*0.66666666666666663 + tmp_kernel_op_23*0.16666666666666666) + src_dof_2*(tmp_kernel_op_19*0.66666666666666663 + tmp_kernel_op_21*0.16666666666666666 + tmp_kernel_op_23*0.16666666666666666);
                const real_t elMatVec_2 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_25 + tmp_kernel_op_16*tmp_kernel_op_27 + tmp_kernel_op_17*tmp_kernel_op_29) + src_dof_1*(tmp_kernel_op_25*0.16666666666666666 + tmp_kernel_op_27*0.66666666666666663 + tmp_kernel_op_29*0.16666666666666666) + src_dof_2*(tmp_kernel_op_25*0.66666666666666663 + tmp_kernel_op_27*0.16666666666666666 + tmp_kernel_op_29*0.16666666666666666);
                const real_t elMatVec_3 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_34 + tmp_kernel_op_16*tmp_kernel_op_39 + tmp_kernel_op_17*tmp_kernel_op_44) + src_dof_1*(tmp_kernel_op_34*0.16666666666666666 + tmp_kernel_op_39*0.66666666666666663 + tmp_kernel_op_44*0.16666666666666666) + src_dof_2*(tmp_kernel_op_34*0.66666666666666663 + tmp_kernel_op_39*0.16666666666666666 + tmp_kernel_op_44*0.16666666666666666);
                const real_t elMatVec_4 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_46 + tmp_kernel_op_16*tmp_kernel_op_48 + tmp_kernel_op_17*tmp_kernel_op_50) + src_dof_1*(tmp_kernel_op_46*0.16666666666666666 + tmp_kernel_op_48*0.66666666666666663 + tmp_kernel_op_50*0.16666666666666666) + src_dof_2*(tmp_kernel_op_46*0.66666666666666663 + tmp_kernel_op_48*0.16666666666666666 + tmp_kernel_op_50*0.16666666666666666);
                const real_t elMatVec_5 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_52 + tmp_kernel_op_16*tmp_kernel_op_54 + tmp_kernel_op_17*tmp_kernel_op_56) + src_dof_1*(tmp_kernel_op_52*0.16666666666666666 + tmp_kernel_op_54*0.66666666666666663 + tmp_kernel_op_56*0.16666666666666666) + src_dof_2*(tmp_kernel_op_52*0.66666666666666663 + tmp_kernel_op_54*0.16666666666666666 + tmp_kernel_op_56*0.16666666666666666);
                _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2))] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2))];
                _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))];
                _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))] = elMatVec_3 + _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))];
                _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))];
                _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2))];
             }
          }
       }
       const real_t tmp_coords_jac_0_BLUE = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t tmp_coords_jac_1_BLUE = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_BLUE*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t tmp_coords_jac_2_BLUE = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_BLUE*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t tmp_coords_jac_3_BLUE = tmp_coords_jac_0_BLUE*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t tmp_coords_jac_4_BLUE = tmp_coords_jac_0_BLUE*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t p_affine_const_0_0_BLUE = tmp_coords_jac_1_BLUE;
       const real_t p_affine_const_0_1_BLUE = tmp_coords_jac_2_BLUE;
       const real_t p_affine_const_1_0_BLUE = macro_vertex_coord_id_0comp0 + tmp_coords_jac_3_BLUE;
       const real_t p_affine_const_1_1_BLUE = macro_vertex_coord_id_0comp1 + tmp_coords_jac_4_BLUE;
       const real_t p_affine_const_2_0_BLUE = tmp_coords_jac_1_BLUE + tmp_coords_jac_3_BLUE;
       const real_t p_affine_const_2_1_BLUE = tmp_coords_jac_2_BLUE + tmp_coords_jac_4_BLUE;
       const real_t jac_affine_0_0_BLUE = -p_affine_const_0_0_BLUE + p_affine_const_1_0_BLUE;
       const real_t jac_affine_0_1_BLUE = -p_affine_const_0_0_BLUE + p_affine_const_2_0_BLUE;
       const real_t jac_affine_1_0_BLUE = -p_affine_const_0_1_BLUE + p_affine_const_1_1_BLUE;
       const real_t jac_affine_1_1_BLUE = -p_affine_const_0_1_BLUE + p_affine_const_2_1_BLUE;
       const real_t tmp_coords_jac_5_BLUE = jac_affine_0_0_BLUE*jac_affine_1_1_BLUE - jac_affine_0_1_BLUE*jac_affine_1_0_BLUE;
       const real_t tmp_coords_jac_6_BLUE = 1.0 / (tmp_coords_jac_5_BLUE);
       const real_t jac_affine_inv_0_0_BLUE = jac_affine_1_1_BLUE*tmp_coords_jac_6_BLUE;
       const real_t jac_affine_inv_0_1_BLUE = -jac_affine_0_1_BLUE*tmp_coords_jac_6_BLUE;
       const real_t jac_affine_inv_1_0_BLUE = -jac_affine_1_0_BLUE*tmp_coords_jac_6_BLUE;
       const real_t jac_affine_inv_1_1_BLUE = jac_affine_0_0_BLUE*tmp_coords_jac_6_BLUE;
       const real_t abs_det_jac_affine_BLUE = abs(tmp_coords_jac_5_BLUE);
       const real_t tmp_moved_constant_0 = jac_affine_inv_0_0_BLUE*tmp_kernel_op_1;
       const real_t tmp_moved_constant_1 = jac_affine_inv_1_0_BLUE*tmp_kernel_op_0;
       const real_t tmp_moved_constant_2 = jac_affine_inv_0_1_BLUE*tmp_kernel_op_1;
       const real_t tmp_moved_constant_3 = jac_affine_inv_1_1_BLUE*tmp_kernel_op_0;
       const real_t tmp_moved_constant_4 = jac_affine_inv_0_0_BLUE*tmp_kernel_op_6;
       const real_t tmp_moved_constant_5 = jac_affine_inv_1_0_BLUE*tmp_kernel_op_5;
       const real_t tmp_moved_constant_6 = jac_affine_inv_0_1_BLUE*tmp_kernel_op_6;
       const real_t tmp_moved_constant_7 = jac_affine_inv_1_1_BLUE*tmp_kernel_op_5;
       const real_t tmp_moved_constant_8 = jac_affine_inv_0_0_BLUE*tmp_kernel_op_11;
       const real_t tmp_moved_constant_9 = jac_affine_inv_1_0_BLUE*tmp_kernel_op_10;
       const real_t tmp_moved_constant_10 = jac_affine_inv_0_1_BLUE*tmp_kernel_op_11;
       const real_t tmp_moved_constant_11 = jac_affine_inv_1_1_BLUE*tmp_kernel_op_10;
       {
          /* FaceType.BLUE */
          for (int64_t ctr_1 = 0; ctr_1 < micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d tmp_blending_op_1 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_1_1);
                const __m256d tmp_blending_op_2 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_2_1);
                const __m256d tmp_blending_op_3 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_1,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_2,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),p_affine_0_1);
                const __m256d tmp_blending_op_4 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_1_0);
                const __m256d tmp_blending_op_5 = _mm256_add_pd(_mm256_mul_pd(p_affine_0_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),p_affine_2_0);
                const __m256d tmp_blending_op_6 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_4,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_5,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),p_affine_0_0);
                const __m256d tmp_blending_op_7 = _mm256_mul_pd(tmp_blending_op_6,tmp_blending_op_6);
                const __m256d tmp_blending_op_8 = _mm256_mul_pd(tmp_blending_op_3,tmp_blending_op_3);
                const __m256d tmp_blending_op_9 = _mm256_add_pd(tmp_blending_op_7,tmp_blending_op_8);
                const __m256d tmp_blending_op_13 = _mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_sqrt_pd(tmp_blending_op_9)),_mm256_set_pd(tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12));
                const __m256d tmp_blending_op_14 = _mm256_mul_pd(tmp_blending_op_13,tmp_blending_op_3);
                const __m256d tmp_blending_op_15 = _mm256_div_pd(_mm256_sqrt_pd(tmp_blending_op_9),_mm256_mul_pd(tmp_blending_op_9,tmp_blending_op_9));
                const __m256d tmp_blending_op_18 = _mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17),tmp_blending_op_6),_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16),tmp_blending_op_3),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0))),_mm256_set_pd(tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11)),_mm256_set_pd(radRayVertex,radRayVertex,radRayVertex,radRayVertex));
                const __m256d tmp_blending_op_19 = _mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_15,tmp_blending_op_18),_mm256_set_pd(1.0,1.0,1.0,1.0));
                const __m256d tmp_blending_op_20 = _mm256_mul_pd(tmp_blending_op_13,tmp_blending_op_6);
                const __m256d tmp_blending_op_23 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_2,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_1,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_1);
                const __m256d tmp_blending_op_24 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_5,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_4,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_0);
                const __m256d tmp_blending_op_25 = _mm256_mul_pd(tmp_blending_op_24,tmp_blending_op_24);
                const __m256d tmp_blending_op_26 = _mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_23);
                const __m256d tmp_blending_op_27 = _mm256_add_pd(tmp_blending_op_25,tmp_blending_op_26);
                const __m256d tmp_blending_op_28 = _mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_sqrt_pd(tmp_blending_op_27)),_mm256_set_pd(tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12));
                const __m256d tmp_blending_op_29 = _mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_28);
                const __m256d tmp_blending_op_30 = _mm256_div_pd(_mm256_sqrt_pd(tmp_blending_op_27),_mm256_mul_pd(tmp_blending_op_27,tmp_blending_op_27));
                const __m256d tmp_blending_op_31 = _mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17),tmp_blending_op_24),_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16),tmp_blending_op_23),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0))),_mm256_set_pd(tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11)),_mm256_set_pd(radRayVertex,radRayVertex,radRayVertex,radRayVertex));
                const __m256d tmp_blending_op_32 = _mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_30,tmp_blending_op_31),_mm256_set_pd(1.0,1.0,1.0,1.0));
                const __m256d tmp_blending_op_33 = _mm256_mul_pd(tmp_blending_op_24,tmp_blending_op_28);
                const __m256d tmp_blending_op_36 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_1,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_2,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_1);
                const __m256d tmp_blending_op_37 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_blending_op_4,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_blending_op_5,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))),p_affine_0_0);
                const __m256d tmp_blending_op_38 = _mm256_mul_pd(tmp_blending_op_37,tmp_blending_op_37);
                const __m256d tmp_blending_op_39 = _mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_36);
                const __m256d tmp_blending_op_40 = _mm256_add_pd(tmp_blending_op_38,tmp_blending_op_39);
                const __m256d tmp_blending_op_41 = _mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_sqrt_pd(tmp_blending_op_40)),_mm256_set_pd(tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12,tmp_blending_op_12));
                const __m256d tmp_blending_op_42 = _mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_41);
                const __m256d tmp_blending_op_43 = _mm256_div_pd(_mm256_sqrt_pd(tmp_blending_op_40),_mm256_mul_pd(tmp_blending_op_40,tmp_blending_op_40));
                const __m256d tmp_blending_op_44 = _mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17,tmp_blending_op_17),tmp_blending_op_37),_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16,tmp_blending_op_16),tmp_blending_op_36),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0))),_mm256_set_pd(tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11,tmp_blending_op_11)),_mm256_set_pd(radRayVertex,radRayVertex,radRayVertex,radRayVertex));
                const __m256d tmp_blending_op_45 = _mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_43,tmp_blending_op_44),_mm256_set_pd(1.0,1.0,1.0,1.0));
                const __m256d tmp_blending_op_46 = _mm256_mul_pd(tmp_blending_op_37,tmp_blending_op_41);
                const __m256d jac_blending_1_1_q_2 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_14,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_15,tmp_blending_op_18),tmp_blending_op_7),_mm256_set_pd(1.0,1.0,1.0,1.0)));
                const __m256d jac_blending_1_0_q_2 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_14,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_19,tmp_blending_op_3),tmp_blending_op_6),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_1_q_2 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_20,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_15,tmp_blending_op_18),tmp_blending_op_3),tmp_blending_op_6),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_0_q_2 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_20,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(tmp_blending_op_19,tmp_blending_op_8));
                const __m256d tmp_blending_op_21 = _mm256_add_pd(_mm256_mul_pd(jac_blending_0_0_q_2,jac_blending_1_1_q_2),_mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_2,jac_blending_1_0_q_2),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d tmp_blending_op_22 = _mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),tmp_blending_op_21);
                const __m256d abs_det_jac_blending_q_2 = tmp_blending_op_21;
                const __m256d jac_blending_inv_1_1_q_2 = _mm256_mul_pd(jac_blending_0_0_q_2,tmp_blending_op_22);
                const __m256d jac_blending_inv_0_1_q_2 = _mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_2,tmp_blending_op_22),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0));
                const __m256d jac_blending_1_1_q_1 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_29,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_25,tmp_blending_op_30),tmp_blending_op_31),_mm256_set_pd(1.0,1.0,1.0,1.0)));
                const __m256d jac_blending_1_0_q_1 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_29,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_24),tmp_blending_op_32),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_1_q_1 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_33,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_23,tmp_blending_op_24),tmp_blending_op_30),tmp_blending_op_31),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_0_q_1 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_33,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(tmp_blending_op_26,tmp_blending_op_32));
                const __m256d tmp_blending_op_34 = _mm256_add_pd(_mm256_mul_pd(jac_blending_0_0_q_1,jac_blending_1_1_q_1),_mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_1,jac_blending_1_0_q_1),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d tmp_blending_op_35 = _mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),tmp_blending_op_34);
                const __m256d abs_det_jac_blending_q_1 = tmp_blending_op_34;
                const __m256d jac_blending_inv_1_1_q_1 = _mm256_mul_pd(jac_blending_0_0_q_1,tmp_blending_op_35);
                const __m256d jac_blending_inv_0_1_q_1 = _mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_1,tmp_blending_op_35),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0));
                const __m256d jac_blending_1_1_q_0 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_42,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_38,tmp_blending_op_43),tmp_blending_op_44),_mm256_set_pd(1.0,1.0,1.0,1.0)));
                const __m256d jac_blending_1_0_q_0 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_42,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_37),tmp_blending_op_45),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_1_q_0 = _mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0,tmp_blending_op_0)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_blending_op_36,tmp_blending_op_37),tmp_blending_op_43),tmp_blending_op_44),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d jac_blending_0_0_q_0 = _mm256_add_pd(_mm256_mul_pd(tmp_blending_op_46,_mm256_set_pd(tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10,tmp_blending_op_10)),_mm256_mul_pd(tmp_blending_op_39,tmp_blending_op_45));
                const __m256d tmp_blending_op_47 = _mm256_add_pd(_mm256_mul_pd(jac_blending_0_0_q_0,jac_blending_1_1_q_0),_mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_0,jac_blending_1_0_q_0),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                const __m256d tmp_blending_op_48 = _mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),tmp_blending_op_47);
                const __m256d abs_det_jac_blending_q_0 = tmp_blending_op_47;
                const __m256d jac_blending_inv_1_1_q_0 = _mm256_mul_pd(jac_blending_0_0_q_0,tmp_blending_op_48);
                const __m256d jac_blending_inv_0_1_q_0 = _mm256_mul_pd(_mm256_mul_pd(jac_blending_0_1_q_0,tmp_blending_op_48),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 1]);
                const __m256d tmp_kernel_op_3 = _mm256_mul_pd(_mm256_mul_pd(abs_det_jac_blending_q_0,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_set_pd(abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE));
                const __m256d tmp_kernel_op_4 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE),_mm256_set_pd(tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2,tmp_kernel_op_2)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_8 = _mm256_mul_pd(_mm256_mul_pd(abs_det_jac_blending_q_1,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_set_pd(abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE));
                const __m256d tmp_kernel_op_9 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE),_mm256_set_pd(tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7,tmp_kernel_op_7)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_13 = _mm256_mul_pd(_mm256_mul_pd(abs_det_jac_blending_q_2,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_set_pd(abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE,abs_det_jac_affine_BLUE));
                const __m256d tmp_kernel_op_14 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE),_mm256_set_pd(tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12,tmp_kernel_op_12)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_19 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE)),_mm256_set_pd(tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE)),_mm256_set_pd(tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18,tmp_kernel_op_18))));
                const __m256d tmp_kernel_op_21 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE)),_mm256_set_pd(tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE)),_mm256_set_pd(tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20,tmp_kernel_op_20))));
                const __m256d tmp_kernel_op_23 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE)),_mm256_set_pd(tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE)),_mm256_set_pd(tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22,tmp_kernel_op_22))));
                const __m256d tmp_kernel_op_25 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE)),_mm256_set_pd(tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE)),_mm256_set_pd(tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24,tmp_kernel_op_24))));
                const __m256d tmp_kernel_op_27 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE)),_mm256_set_pd(tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE)),_mm256_set_pd(tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26,tmp_kernel_op_26))));
                const __m256d tmp_kernel_op_29 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE)),_mm256_set_pd(tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28)),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE)),_mm256_set_pd(tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28,tmp_kernel_op_28))));
                const __m256d tmp_kernel_op_34 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_set_pd(tmp_moved_constant_0,tmp_moved_constant_0,tmp_moved_constant_0,tmp_moved_constant_0),_mm256_set_pd(tmp_moved_constant_1,tmp_moved_constant_1,tmp_moved_constant_1,tmp_moved_constant_1))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_set_pd(tmp_moved_constant_2,tmp_moved_constant_2,tmp_moved_constant_2,tmp_moved_constant_2),_mm256_set_pd(tmp_moved_constant_3,tmp_moved_constant_3,tmp_moved_constant_3,tmp_moved_constant_3))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_39 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_set_pd(tmp_moved_constant_4,tmp_moved_constant_4,tmp_moved_constant_4,tmp_moved_constant_4),_mm256_set_pd(tmp_moved_constant_5,tmp_moved_constant_5,tmp_moved_constant_5,tmp_moved_constant_5))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_set_pd(tmp_moved_constant_6,tmp_moved_constant_6,tmp_moved_constant_6,tmp_moved_constant_6),_mm256_set_pd(tmp_moved_constant_7,tmp_moved_constant_7,tmp_moved_constant_7,tmp_moved_constant_7))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_44 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_set_pd(tmp_moved_constant_10,tmp_moved_constant_10,tmp_moved_constant_10,tmp_moved_constant_10),_mm256_set_pd(tmp_moved_constant_11,tmp_moved_constant_11,tmp_moved_constant_11,tmp_moved_constant_11))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_set_pd(tmp_moved_constant_8,tmp_moved_constant_8,tmp_moved_constant_8,tmp_moved_constant_8),_mm256_set_pd(tmp_moved_constant_9,tmp_moved_constant_9,tmp_moved_constant_9,tmp_moved_constant_9))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_46 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_0,tmp_moved_constant_0,tmp_moved_constant_0,tmp_moved_constant_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE),_mm256_set_pd(tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_2,tmp_moved_constant_2,tmp_moved_constant_2,tmp_moved_constant_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE),_mm256_set_pd(tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45,tmp_kernel_op_45)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_48 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_4,tmp_moved_constant_4,tmp_moved_constant_4,tmp_moved_constant_4)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE),_mm256_set_pd(tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_6,tmp_moved_constant_6,tmp_moved_constant_6,tmp_moved_constant_6)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE),_mm256_set_pd(tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47,tmp_kernel_op_47)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_50 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_10,tmp_moved_constant_10,tmp_moved_constant_10,tmp_moved_constant_10)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE,jac_affine_inv_1_1_BLUE),_mm256_set_pd(tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_8,tmp_moved_constant_8,tmp_moved_constant_8,tmp_moved_constant_8)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE,jac_affine_inv_1_0_BLUE),_mm256_set_pd(tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49,tmp_kernel_op_49)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_52 = _mm256_mul_pd(tmp_kernel_op_3,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_1,tmp_moved_constant_1,tmp_moved_constant_1,tmp_moved_constant_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE),_mm256_set_pd(tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_0,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_3,tmp_moved_constant_3,tmp_moved_constant_3,tmp_moved_constant_3)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE),_mm256_set_pd(tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51,tmp_kernel_op_51)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_54 = _mm256_mul_pd(tmp_kernel_op_8,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_5,tmp_moved_constant_5,tmp_moved_constant_5,tmp_moved_constant_5)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE),_mm256_set_pd(tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_7,tmp_moved_constant_7,tmp_moved_constant_7,tmp_moved_constant_7)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE),_mm256_set_pd(tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53,tmp_kernel_op_53)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d tmp_kernel_op_56 = _mm256_mul_pd(tmp_kernel_op_13,_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_1_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_11,tmp_moved_constant_11,tmp_moved_constant_11,tmp_moved_constant_11)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE,jac_affine_inv_0_1_BLUE),_mm256_set_pd(tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_mul_pd(jac_blending_inv_0_1_q_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(tmp_moved_constant_9,tmp_moved_constant_9,tmp_moved_constant_9,tmp_moved_constant_9)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE,jac_affine_inv_0_0_BLUE),_mm256_set_pd(tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55,tmp_kernel_op_55)))),_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))));
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_14,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_4,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_9,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_14,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_9,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_4,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_4,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_9,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_14,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_19,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_23,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_21,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_21,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_23,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_19,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_19,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_21,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_23,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_25,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_29,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_27,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_27,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_29,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_25,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_25,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_27,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_29,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_34,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_44,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_39,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_39,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_44,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_34,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_34,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_39,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_44,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_46,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_50,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_48,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_48,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_50,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_46,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_46,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_48,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_50,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(src_dof_1,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_52,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_56,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_54,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663)))),_mm256_mul_pd(src_dof_2,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_54,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666)),_mm256_mul_pd(tmp_kernel_op_56,_mm256_set_pd(0.16666666666666666,0.16666666666666666,0.16666666666666666,0.16666666666666666))),_mm256_mul_pd(tmp_kernel_op_52,_mm256_set_pd(0.66666666666666663,0.66666666666666663,0.66666666666666663,0.66666666666666663))))),_mm256_mul_pd(src_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_kernel_op_52,_mm256_set_pd(tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15,tmp_kernel_op_15)),_mm256_mul_pd(tmp_kernel_op_54,_mm256_set_pd(tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16,tmp_kernel_op_16))),_mm256_mul_pd(tmp_kernel_op_56,_mm256_set_pd(tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17,tmp_kernel_op_17)))));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2)) + 1],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0;
                const real_t tmp_blending_op_1 = -p_affine_0_1 + p_affine_1_1;
                const real_t tmp_blending_op_2 = -p_affine_0_1 + p_affine_2_1;
                const real_t tmp_blending_op_3 = p_affine_0_1 + tmp_blending_op_1*0.16666666666666666 + tmp_blending_op_2*0.16666666666666666;
                const real_t tmp_blending_op_4 = -p_affine_0_0 + p_affine_1_0;
                const real_t tmp_blending_op_5 = -p_affine_0_0 + p_affine_2_0;
                const real_t tmp_blending_op_6 = p_affine_0_0 + tmp_blending_op_4*0.16666666666666666 + tmp_blending_op_5*0.16666666666666666;
                const real_t tmp_blending_op_7 = (tmp_blending_op_6*tmp_blending_op_6);
                const real_t tmp_blending_op_8 = (tmp_blending_op_3*tmp_blending_op_3);
                const real_t tmp_blending_op_9 = tmp_blending_op_7 + tmp_blending_op_8;
                const real_t tmp_blending_op_13 = tmp_blending_op_12*pow(tmp_blending_op_9, -0.50000000000000000);
                const real_t tmp_blending_op_14 = tmp_blending_op_13*tmp_blending_op_3;
                const real_t tmp_blending_op_15 = pow(tmp_blending_op_9, -1.5000000000000000);
                const real_t tmp_blending_op_18 = radRayVertex + tmp_blending_op_11*(-tmp_blending_op_0*(tmp_blending_op_16 + tmp_blending_op_3) + tmp_blending_op_10*(tmp_blending_op_17 + tmp_blending_op_6));
                const real_t tmp_blending_op_19 = tmp_blending_op_15*tmp_blending_op_18*1.0;
                const real_t tmp_blending_op_20 = tmp_blending_op_13*tmp_blending_op_6;
                const real_t tmp_blending_op_23 = p_affine_0_1 + tmp_blending_op_1*0.66666666666666663 + tmp_blending_op_2*0.16666666666666666;
                const real_t tmp_blending_op_24 = p_affine_0_0 + tmp_blending_op_4*0.66666666666666663 + tmp_blending_op_5*0.16666666666666666;
                const real_t tmp_blending_op_25 = (tmp_blending_op_24*tmp_blending_op_24);
                const real_t tmp_blending_op_26 = (tmp_blending_op_23*tmp_blending_op_23);
                const real_t tmp_blending_op_27 = tmp_blending_op_25 + tmp_blending_op_26;
                const real_t tmp_blending_op_28 = tmp_blending_op_12*pow(tmp_blending_op_27, -0.50000000000000000);
                const real_t tmp_blending_op_29 = tmp_blending_op_23*tmp_blending_op_28;
                const real_t tmp_blending_op_30 = pow(tmp_blending_op_27, -1.5000000000000000);
                const real_t tmp_blending_op_31 = radRayVertex + tmp_blending_op_11*(-tmp_blending_op_0*(tmp_blending_op_16 + tmp_blending_op_23) + tmp_blending_op_10*(tmp_blending_op_17 + tmp_blending_op_24));
                const real_t tmp_blending_op_32 = tmp_blending_op_30*tmp_blending_op_31*1.0;
                const real_t tmp_blending_op_33 = tmp_blending_op_24*tmp_blending_op_28;
                const real_t tmp_blending_op_36 = p_affine_0_1 + tmp_blending_op_1*0.16666666666666666 + tmp_blending_op_2*0.66666666666666663;
                const real_t tmp_blending_op_37 = p_affine_0_0 + tmp_blending_op_4*0.16666666666666666 + tmp_blending_op_5*0.66666666666666663;
                const real_t tmp_blending_op_38 = (tmp_blending_op_37*tmp_blending_op_37);
                const real_t tmp_blending_op_39 = (tmp_blending_op_36*tmp_blending_op_36);
                const real_t tmp_blending_op_40 = tmp_blending_op_38 + tmp_blending_op_39;
                const real_t tmp_blending_op_41 = tmp_blending_op_12*pow(tmp_blending_op_40, -0.50000000000000000);
                const real_t tmp_blending_op_42 = tmp_blending_op_36*tmp_blending_op_41;
                const real_t tmp_blending_op_43 = pow(tmp_blending_op_40, -1.5000000000000000);
                const real_t tmp_blending_op_44 = radRayVertex + tmp_blending_op_11*(-tmp_blending_op_0*(tmp_blending_op_16 + tmp_blending_op_36) + tmp_blending_op_10*(tmp_blending_op_17 + tmp_blending_op_37));
                const real_t tmp_blending_op_45 = tmp_blending_op_43*tmp_blending_op_44*1.0;
                const real_t tmp_blending_op_46 = tmp_blending_op_37*tmp_blending_op_41;
                const real_t jac_blending_1_1_q_2 = -tmp_blending_op_0*tmp_blending_op_14 + tmp_blending_op_15*tmp_blending_op_18*tmp_blending_op_7*1.0;
                const real_t jac_blending_1_0_q_2 = tmp_blending_op_10*tmp_blending_op_14 - tmp_blending_op_19*tmp_blending_op_3*tmp_blending_op_6;
                const real_t jac_blending_0_1_q_2 = -tmp_blending_op_0*tmp_blending_op_20 - tmp_blending_op_15*tmp_blending_op_18*tmp_blending_op_3*tmp_blending_op_6;
                const real_t jac_blending_0_0_q_2 = tmp_blending_op_10*tmp_blending_op_20 + tmp_blending_op_19*tmp_blending_op_8;
                const real_t tmp_blending_op_21 = jac_blending_0_0_q_2*jac_blending_1_1_q_2 - jac_blending_0_1_q_2*jac_blending_1_0_q_2;
                const real_t tmp_blending_op_22 = 1.0 / (tmp_blending_op_21);
                const real_t abs_det_jac_blending_q_2 = tmp_blending_op_21;
                const real_t jac_blending_inv_1_1_q_2 = jac_blending_0_0_q_2*tmp_blending_op_22;
                const real_t jac_blending_inv_0_1_q_2 = -jac_blending_0_1_q_2*tmp_blending_op_22;
                const real_t jac_blending_1_1_q_1 = -tmp_blending_op_0*tmp_blending_op_29 + tmp_blending_op_25*tmp_blending_op_30*tmp_blending_op_31*1.0;
                const real_t jac_blending_1_0_q_1 = tmp_blending_op_10*tmp_blending_op_29 - tmp_blending_op_23*tmp_blending_op_24*tmp_blending_op_32;
                const real_t jac_blending_0_1_q_1 = -tmp_blending_op_0*tmp_blending_op_33 - tmp_blending_op_23*tmp_blending_op_24*tmp_blending_op_30*tmp_blending_op_31;
                const real_t jac_blending_0_0_q_1 = tmp_blending_op_10*tmp_blending_op_33 + tmp_blending_op_26*tmp_blending_op_32;
                const real_t tmp_blending_op_34 = jac_blending_0_0_q_1*jac_blending_1_1_q_1 - jac_blending_0_1_q_1*jac_blending_1_0_q_1;
                const real_t tmp_blending_op_35 = 1.0 / (tmp_blending_op_34);
                const real_t abs_det_jac_blending_q_1 = tmp_blending_op_34;
                const real_t jac_blending_inv_1_1_q_1 = jac_blending_0_0_q_1*tmp_blending_op_35;
                const real_t jac_blending_inv_0_1_q_1 = -jac_blending_0_1_q_1*tmp_blending_op_35;
                const real_t jac_blending_1_1_q_0 = -tmp_blending_op_0*tmp_blending_op_42 + tmp_blending_op_38*tmp_blending_op_43*tmp_blending_op_44*1.0;
                const real_t jac_blending_1_0_q_0 = tmp_blending_op_10*tmp_blending_op_42 - tmp_blending_op_36*tmp_blending_op_37*tmp_blending_op_45;
                const real_t jac_blending_0_1_q_0 = -tmp_blending_op_0*tmp_blending_op_46 - tmp_blending_op_36*tmp_blending_op_37*tmp_blending_op_43*tmp_blending_op_44;
                const real_t jac_blending_0_0_q_0 = tmp_blending_op_10*tmp_blending_op_46 + tmp_blending_op_39*tmp_blending_op_45;
                const real_t tmp_blending_op_47 = jac_blending_0_0_q_0*jac_blending_1_1_q_0 - jac_blending_0_1_q_0*jac_blending_1_0_q_0;
                const real_t tmp_blending_op_48 = 1.0 / (tmp_blending_op_47);
                const real_t abs_det_jac_blending_q_0 = tmp_blending_op_47;
                const real_t jac_blending_inv_1_1_q_0 = jac_blending_0_0_q_0*tmp_blending_op_48;
                const real_t jac_blending_inv_0_1_q_0 = -jac_blending_0_1_q_0*tmp_blending_op_48;
                const real_t src_dof_0 = _data_src[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1];
                const real_t src_dof_1 = _data_src[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))];
                const real_t src_dof_2 = _data_src[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 1];
                const real_t tmp_kernel_op_3 = abs_det_jac_affine_BLUE*abs_det_jac_blending_q_0*0.16666666666666666;
                const real_t tmp_kernel_op_4 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(jac_affine_inv_0_0_BLUE*tmp_kernel_op_2 + jac_affine_inv_1_0_BLUE*tmp_kernel_op_2) - jac_blending_inv_1_1_q_0*(jac_affine_inv_0_1_BLUE*tmp_kernel_op_2 + jac_affine_inv_1_1_BLUE*tmp_kernel_op_2));
                const real_t tmp_kernel_op_8 = abs_det_jac_affine_BLUE*abs_det_jac_blending_q_1*0.16666666666666666;
                const real_t tmp_kernel_op_9 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(jac_affine_inv_0_0_BLUE*tmp_kernel_op_7 + jac_affine_inv_1_0_BLUE*tmp_kernel_op_7) - jac_blending_inv_1_1_q_1*(jac_affine_inv_0_1_BLUE*tmp_kernel_op_7 + jac_affine_inv_1_1_BLUE*tmp_kernel_op_7));
                const real_t tmp_kernel_op_13 = abs_det_jac_affine_BLUE*abs_det_jac_blending_q_2*0.16666666666666666;
                const real_t tmp_kernel_op_14 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(jac_affine_inv_0_0_BLUE*tmp_kernel_op_12 + jac_affine_inv_1_0_BLUE*tmp_kernel_op_12) - jac_blending_inv_1_1_q_2*(jac_affine_inv_0_1_BLUE*tmp_kernel_op_12 + jac_affine_inv_1_1_BLUE*tmp_kernel_op_12));
                const real_t tmp_kernel_op_19 = tmp_kernel_op_3*(-jac_affine_inv_0_0_BLUE*jac_blending_inv_0_1_q_0*tmp_kernel_op_18 - jac_affine_inv_0_1_BLUE*jac_blending_inv_1_1_q_0*tmp_kernel_op_18);
                const real_t tmp_kernel_op_21 = tmp_kernel_op_8*(-jac_affine_inv_0_0_BLUE*jac_blending_inv_0_1_q_1*tmp_kernel_op_20 - jac_affine_inv_0_1_BLUE*jac_blending_inv_1_1_q_1*tmp_kernel_op_20);
                const real_t tmp_kernel_op_23 = tmp_kernel_op_13*(-jac_affine_inv_0_0_BLUE*jac_blending_inv_0_1_q_2*tmp_kernel_op_22 - jac_affine_inv_0_1_BLUE*jac_blending_inv_1_1_q_2*tmp_kernel_op_22);
                const real_t tmp_kernel_op_25 = tmp_kernel_op_3*(-jac_affine_inv_1_0_BLUE*jac_blending_inv_0_1_q_0*tmp_kernel_op_24 - jac_affine_inv_1_1_BLUE*jac_blending_inv_1_1_q_0*tmp_kernel_op_24);
                const real_t tmp_kernel_op_27 = tmp_kernel_op_8*(-jac_affine_inv_1_0_BLUE*jac_blending_inv_0_1_q_1*tmp_kernel_op_26 - jac_affine_inv_1_1_BLUE*jac_blending_inv_1_1_q_1*tmp_kernel_op_26);
                const real_t tmp_kernel_op_29 = tmp_kernel_op_13*(-jac_affine_inv_1_0_BLUE*jac_blending_inv_0_1_q_2*tmp_kernel_op_28 - jac_affine_inv_1_1_BLUE*jac_blending_inv_1_1_q_2*tmp_kernel_op_28);
                const real_t tmp_kernel_op_34 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(tmp_moved_constant_0 + tmp_moved_constant_1) - jac_blending_inv_1_1_q_0*(tmp_moved_constant_2 + tmp_moved_constant_3));
                const real_t tmp_kernel_op_39 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(tmp_moved_constant_4 + tmp_moved_constant_5) - jac_blending_inv_1_1_q_1*(tmp_moved_constant_6 + tmp_moved_constant_7));
                const real_t tmp_kernel_op_44 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(tmp_moved_constant_8 + tmp_moved_constant_9) - jac_blending_inv_1_1_q_2*(tmp_moved_constant_10 + tmp_moved_constant_11));
                const real_t tmp_kernel_op_46 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(jac_affine_inv_1_0_BLUE*tmp_kernel_op_45 - tmp_moved_constant_0) - jac_blending_inv_1_1_q_0*(jac_affine_inv_1_1_BLUE*tmp_kernel_op_45 - tmp_moved_constant_2));
                const real_t tmp_kernel_op_48 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(jac_affine_inv_1_0_BLUE*tmp_kernel_op_47 - tmp_moved_constant_4) - jac_blending_inv_1_1_q_1*(jac_affine_inv_1_1_BLUE*tmp_kernel_op_47 - tmp_moved_constant_6));
                const real_t tmp_kernel_op_50 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(jac_affine_inv_1_0_BLUE*tmp_kernel_op_49 - tmp_moved_constant_8) - jac_blending_inv_1_1_q_2*(jac_affine_inv_1_1_BLUE*tmp_kernel_op_49 - tmp_moved_constant_10));
                const real_t tmp_kernel_op_52 = tmp_kernel_op_3*(-jac_blending_inv_0_1_q_0*(jac_affine_inv_0_0_BLUE*tmp_kernel_op_51 - tmp_moved_constant_1) - jac_blending_inv_1_1_q_0*(jac_affine_inv_0_1_BLUE*tmp_kernel_op_51 - tmp_moved_constant_3));
                const real_t tmp_kernel_op_54 = tmp_kernel_op_8*(-jac_blending_inv_0_1_q_1*(jac_affine_inv_0_0_BLUE*tmp_kernel_op_53 - tmp_moved_constant_5) - jac_blending_inv_1_1_q_1*(jac_affine_inv_0_1_BLUE*tmp_kernel_op_53 - tmp_moved_constant_7));
                const real_t tmp_kernel_op_56 = tmp_kernel_op_13*(-jac_blending_inv_0_1_q_2*(jac_affine_inv_0_0_BLUE*tmp_kernel_op_55 - tmp_moved_constant_9) - jac_blending_inv_1_1_q_2*(jac_affine_inv_0_1_BLUE*tmp_kernel_op_55 - tmp_moved_constant_11));
                const real_t elMatVec_0 = src_dof_0*(tmp_kernel_op_14*tmp_kernel_op_17 + tmp_kernel_op_15*tmp_kernel_op_4 + tmp_kernel_op_16*tmp_kernel_op_9) + src_dof_1*(tmp_kernel_op_14*0.16666666666666666 + tmp_kernel_op_4*0.16666666666666666 + tmp_kernel_op_9*0.66666666666666663) + src_dof_2*(tmp_kernel_op_14*0.16666666666666666 + tmp_kernel_op_4*0.66666666666666663 + tmp_kernel_op_9*0.16666666666666666);
                const real_t elMatVec_1 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_19 + tmp_kernel_op_16*tmp_kernel_op_21 + tmp_kernel_op_17*tmp_kernel_op_23) + src_dof_1*(tmp_kernel_op_19*0.16666666666666666 + tmp_kernel_op_21*0.66666666666666663 + tmp_kernel_op_23*0.16666666666666666) + src_dof_2*(tmp_kernel_op_19*0.66666666666666663 + tmp_kernel_op_21*0.16666666666666666 + tmp_kernel_op_23*0.16666666666666666);
                const real_t elMatVec_2 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_25 + tmp_kernel_op_16*tmp_kernel_op_27 + tmp_kernel_op_17*tmp_kernel_op_29) + src_dof_1*(tmp_kernel_op_25*0.16666666666666666 + tmp_kernel_op_27*0.66666666666666663 + tmp_kernel_op_29*0.16666666666666666) + src_dof_2*(tmp_kernel_op_25*0.66666666666666663 + tmp_kernel_op_27*0.16666666666666666 + tmp_kernel_op_29*0.16666666666666666);
                const real_t elMatVec_3 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_34 + tmp_kernel_op_16*tmp_kernel_op_39 + tmp_kernel_op_17*tmp_kernel_op_44) + src_dof_1*(tmp_kernel_op_34*0.16666666666666666 + tmp_kernel_op_39*0.66666666666666663 + tmp_kernel_op_44*0.16666666666666666) + src_dof_2*(tmp_kernel_op_34*0.66666666666666663 + tmp_kernel_op_39*0.16666666666666666 + tmp_kernel_op_44*0.16666666666666666);
                const real_t elMatVec_4 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_46 + tmp_kernel_op_16*tmp_kernel_op_48 + tmp_kernel_op_17*tmp_kernel_op_50) + src_dof_1*(tmp_kernel_op_46*0.16666666666666666 + tmp_kernel_op_48*0.66666666666666663 + tmp_kernel_op_50*0.16666666666666666) + src_dof_2*(tmp_kernel_op_46*0.66666666666666663 + tmp_kernel_op_48*0.16666666666666666 + tmp_kernel_op_50*0.16666666666666666);
                const real_t elMatVec_5 = src_dof_0*(tmp_kernel_op_15*tmp_kernel_op_52 + tmp_kernel_op_16*tmp_kernel_op_54 + tmp_kernel_op_17*tmp_kernel_op_56) + src_dof_1*(tmp_kernel_op_52*0.16666666666666666 + tmp_kernel_op_54*0.66666666666666663 + tmp_kernel_op_56*0.16666666666666666) + src_dof_2*(tmp_kernel_op_52*0.66666666666666663 + tmp_kernel_op_54*0.16666666666666666 + tmp_kernel_op_56*0.16666666666666666);
                _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 1];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))] = elMatVec_3 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2))];
                _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2)) + 1] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)) / (2))];
             }
          }
       }
    }
}
} // namespace operatorgeneration

} // namespace hyteg
