/*
* Copyright (c) 2017-2024 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG Operator Generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/

































#include "../P2VectorToP1ElementwiseFrozenVelocityP1DensityParametricP2Map.hpp"

#define FUNC_PREFIX  

namespace hyteg {

namespace operatorgeneration {

void P2VectorToP1ElementwiseFrozenVelocityP1DensityParametricP2Map::apply_P2VectorToP1ElementwiseFrozenVelocityP1DensityParametricP2Map_macro_3D( real_t * RESTRICT  _data_dst, real_t * RESTRICT  _data_rho, real_t * RESTRICT  _data_src_edge_0, real_t * RESTRICT  _data_src_edge_1, real_t * RESTRICT  _data_src_edge_2, real_t * RESTRICT  _data_src_vertex_0, real_t * RESTRICT  _data_src_vertex_1, real_t * RESTRICT  _data_src_vertex_2, real_t abs_det_jac_blending, real_t jac_blending_inv_0_0, real_t jac_blending_inv_0_1, real_t jac_blending_inv_0_2, real_t jac_blending_inv_1_0, real_t jac_blending_inv_1_1, real_t jac_blending_inv_1_2, real_t jac_blending_inv_2_0, real_t jac_blending_inv_2_1, real_t jac_blending_inv_2_2, real_t macro_vertex_coord_id_0comp0, real_t macro_vertex_coord_id_0comp1, real_t macro_vertex_coord_id_0comp2, real_t macro_vertex_coord_id_1comp0, real_t macro_vertex_coord_id_1comp1, real_t macro_vertex_coord_id_1comp2, real_t macro_vertex_coord_id_2comp0, real_t macro_vertex_coord_id_2comp1, real_t macro_vertex_coord_id_2comp2, real_t macro_vertex_coord_id_3comp0, real_t macro_vertex_coord_id_3comp1, real_t macro_vertex_coord_id_3comp2, int64_t micro_edges_per_macro_edge, real_t micro_edges_per_macro_edge_float ) const
{
    {
       const real_t _data_q_w [] = {-0.1333333333333333, 0.074999999999999983, 0.074999999999999983, 0.074999999999999983, 0.074999999999999983};
   
       const real_t _data_q_p_0 [] = {0.25, 0.16666666666666666, 0.16666666666666666, 0.5, 0.16666666666666666};
   
       const real_t _data_q_p_1 [] = {0.25, 0.16666666666666666, 0.5, 0.16666666666666666, 0.16666666666666666};
   
       const real_t _data_q_p_2 [] = {0.25, 0.5, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666};
   
       const real_t tmp_coords_jac_0_WHITE_UP = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t p_affine_const_0_0_WHITE_UP = macro_vertex_coord_id_0comp0;
       const real_t p_affine_const_0_1_WHITE_UP = macro_vertex_coord_id_0comp1;
       const real_t p_affine_const_0_2_WHITE_UP = macro_vertex_coord_id_0comp2;
       const real_t p_affine_const_1_0_WHITE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t p_affine_const_1_1_WHITE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t p_affine_const_1_2_WHITE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2);
       const real_t p_affine_const_2_0_WHITE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t p_affine_const_2_1_WHITE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t p_affine_const_2_2_WHITE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2);
       const real_t p_affine_const_3_0_WHITE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0);
       const real_t p_affine_const_3_1_WHITE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1);
       const real_t p_affine_const_3_2_WHITE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_WHITE_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2);
       const real_t jac_affine_0_0_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_1_0_WHITE_UP;
       const real_t jac_affine_0_1_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_2_0_WHITE_UP;
       const real_t jac_affine_0_2_WHITE_UP = -p_affine_const_0_0_WHITE_UP + p_affine_const_3_0_WHITE_UP;
       const real_t jac_affine_1_0_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_1_1_WHITE_UP;
       const real_t jac_affine_1_1_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_2_1_WHITE_UP;
       const real_t tmp_coords_jac_5_WHITE_UP = jac_affine_0_2_WHITE_UP*jac_affine_1_1_WHITE_UP;
       const real_t jac_affine_1_2_WHITE_UP = -p_affine_const_0_1_WHITE_UP + p_affine_const_3_1_WHITE_UP;
       const real_t tmp_coords_jac_3_WHITE_UP = jac_affine_0_1_WHITE_UP*jac_affine_1_2_WHITE_UP;
       const real_t jac_affine_2_0_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_1_2_WHITE_UP;
       const real_t jac_affine_2_1_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_2_2_WHITE_UP;
       const real_t tmp_coords_jac_2_WHITE_UP = jac_affine_1_2_WHITE_UP*jac_affine_2_1_WHITE_UP;
       const real_t jac_affine_2_2_WHITE_UP = -p_affine_const_0_2_WHITE_UP + p_affine_const_3_2_WHITE_UP;
       const real_t tmp_coords_jac_1_WHITE_UP = jac_affine_1_1_WHITE_UP*jac_affine_2_2_WHITE_UP;
       const real_t tmp_coords_jac_4_WHITE_UP = jac_affine_0_1_WHITE_UP*jac_affine_2_2_WHITE_UP;
       const real_t tmp_coords_jac_6_WHITE_UP = jac_affine_0_0_WHITE_UP*tmp_coords_jac_1_WHITE_UP - jac_affine_0_0_WHITE_UP*tmp_coords_jac_2_WHITE_UP + jac_affine_0_2_WHITE_UP*jac_affine_1_0_WHITE_UP*jac_affine_2_1_WHITE_UP - jac_affine_1_0_WHITE_UP*tmp_coords_jac_4_WHITE_UP + jac_affine_2_0_WHITE_UP*tmp_coords_jac_3_WHITE_UP - jac_affine_2_0_WHITE_UP*tmp_coords_jac_5_WHITE_UP;
       const real_t tmp_coords_jac_7_WHITE_UP = 1.0 / (tmp_coords_jac_6_WHITE_UP);
       const real_t jac_affine_inv_0_0_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(tmp_coords_jac_1_WHITE_UP - tmp_coords_jac_2_WHITE_UP);
       const real_t jac_affine_inv_0_1_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(jac_affine_0_2_WHITE_UP*jac_affine_2_1_WHITE_UP - tmp_coords_jac_4_WHITE_UP);
       const real_t jac_affine_inv_0_2_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(tmp_coords_jac_3_WHITE_UP - tmp_coords_jac_5_WHITE_UP);
       const real_t jac_affine_inv_1_0_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(-jac_affine_1_0_WHITE_UP*jac_affine_2_2_WHITE_UP + jac_affine_1_2_WHITE_UP*jac_affine_2_0_WHITE_UP);
       const real_t jac_affine_inv_1_1_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(jac_affine_0_0_WHITE_UP*jac_affine_2_2_WHITE_UP - jac_affine_0_2_WHITE_UP*jac_affine_2_0_WHITE_UP);
       const real_t jac_affine_inv_1_2_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(-jac_affine_0_0_WHITE_UP*jac_affine_1_2_WHITE_UP + jac_affine_0_2_WHITE_UP*jac_affine_1_0_WHITE_UP);
       const real_t jac_affine_inv_2_0_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(jac_affine_1_0_WHITE_UP*jac_affine_2_1_WHITE_UP - jac_affine_1_1_WHITE_UP*jac_affine_2_0_WHITE_UP);
       const real_t jac_affine_inv_2_1_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(-jac_affine_0_0_WHITE_UP*jac_affine_2_1_WHITE_UP + jac_affine_0_1_WHITE_UP*jac_affine_2_0_WHITE_UP);
       const real_t jac_affine_inv_2_2_WHITE_UP = tmp_coords_jac_7_WHITE_UP*(jac_affine_0_0_WHITE_UP*jac_affine_1_1_WHITE_UP - jac_affine_0_1_WHITE_UP*jac_affine_1_0_WHITE_UP);
       const real_t abs_det_jac_affine_WHITE_UP = abs(tmp_coords_jac_6_WHITE_UP);
       {
          /* CellType.WHITE_UP */
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_0_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_3_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_3_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_3_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_10 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_11 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_12 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_13 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_14 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_15 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_16 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_17 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_18 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_19 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_20 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_21 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_22 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_23 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_24 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_25 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_26 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_27 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_28 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_29 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d rho_dof_0 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_1 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_2 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_3 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                const __m256d tmp_qloop_13 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_1);
                const __m256d tmp_qloop_14 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_2);
                const __m256d tmp_qloop_15 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_3);
                const __m256d tmp_qloop_16 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))));
                const __m256d tmp_qloop_29 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))));
                const __m256d tmp_qloop_31 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP,jac_affine_inv_0_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP,jac_affine_inv_0_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP,jac_affine_inv_0_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP,jac_affine_inv_1_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP,jac_affine_inv_1_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP,jac_affine_inv_1_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP,jac_affine_inv_2_0_WHITE_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP,jac_affine_inv_2_1_WHITE_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP,jac_affine_inv_2_2_WHITE_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))));
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const __m256d tmp_qloop_0 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_1 = _mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_2 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_3 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_4 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_5 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_6 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_7 = _mm256_mul_pd(tmp_qloop_6,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_8 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_9 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_10 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_11 = _mm256_add_pd(tmp_qloop_10,tmp_qloop_9);
                   const __m256d tmp_qloop_12 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_qloop_1),tmp_qloop_11),tmp_qloop_3),tmp_qloop_5),tmp_qloop_7);
                   const __m256d tmp_qloop_17 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0));
                   const __m256d tmp_qloop_18 = _mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(rho_dof_1,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(rho_dof_2,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(rho_dof_3,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_mul_pd(rho_dof_0,tmp_qloop_17))),_mm256_set_pd(_data_q_w[q],_data_q_w[q],_data_q_w[q],_data_q_w[q])),_mm256_set_pd(abs_det_jac_affine_WHITE_UP,abs_det_jac_affine_WHITE_UP,abs_det_jac_affine_WHITE_UP,abs_det_jac_affine_WHITE_UP)),_mm256_set_pd(abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending));
                   const __m256d tmp_qloop_19 = _mm256_mul_pd(tmp_qloop_17,tmp_qloop_18);
                   const __m256d tmp_qloop_20 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_19);
                   const __m256d tmp_qloop_21 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_qloop_1);
                   const __m256d tmp_qloop_22 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_qloop_3);
                   const __m256d tmp_qloop_23 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_qloop_5);
                   const __m256d tmp_qloop_24 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_25 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_mul_pd(tmp_qloop_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_24,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_26 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_27 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_mul_pd(tmp_qloop_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_26,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_28 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0)));
                   const __m256d tmp_qloop_30 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_29);
                   const __m256d tmp_qloop_32 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_31);
                   const __m256d tmp_qloop_33 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_34 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_33);
                   const __m256d tmp_qloop_35 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_36 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_35);
                   const __m256d tmp_qloop_37 = _mm256_mul_pd(tmp_qloop_36,tmp_qloop_9);
                   const __m256d tmp_qloop_38 = _mm256_mul_pd(tmp_qloop_0,tmp_qloop_18);
                   const __m256d tmp_qloop_39 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_38);
                   const __m256d tmp_qloop_40 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_33);
                   const __m256d tmp_qloop_41 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_35);
                   const __m256d tmp_qloop_42 = _mm256_mul_pd(tmp_qloop_41,tmp_qloop_9);
                   const __m256d tmp_qloop_43 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_38);
                   const __m256d tmp_qloop_44 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_33);
                   const __m256d tmp_qloop_45 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_35);
                   const __m256d tmp_qloop_46 = _mm256_mul_pd(tmp_qloop_45,tmp_qloop_9);
                   const __m256d tmp_qloop_47 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_38);
                   const __m256d tmp_qloop_48 = _mm256_mul_pd(_mm256_mul_pd(tmp_qloop_18,tmp_qloop_2),tmp_qloop_8);
                   const __m256d tmp_qloop_49 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_50 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_49);
                   const __m256d tmp_qloop_51 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_49);
                   const __m256d tmp_qloop_52 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_49);
                   const __m256d q_tmp_0_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_20);
                   const __m256d q_tmp_0_1 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_21);
                   const __m256d q_tmp_0_2 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_22);
                   const __m256d q_tmp_0_3 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_23);
                   const __m256d q_tmp_0_4 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_20);
                   const __m256d q_tmp_0_5 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_9);
                   const __m256d q_tmp_0_6 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_7);
                   const __m256d q_tmp_0_7 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_25);
                   const __m256d q_tmp_0_8 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_27);
                   const __m256d q_tmp_0_9 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_28);
                   const __m256d q_tmp_0_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_30);
                   const __m256d q_tmp_0_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_30);
                   const __m256d q_tmp_0_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_30);
                   const __m256d q_tmp_0_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_30);
                   const __m256d q_tmp_0_14 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_30);
                   const __m256d q_tmp_0_15 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_9);
                   const __m256d q_tmp_0_16 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_7);
                   const __m256d q_tmp_0_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_30);
                   const __m256d q_tmp_0_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_30);
                   const __m256d q_tmp_0_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_30);
                   const __m256d q_tmp_0_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_32);
                   const __m256d q_tmp_0_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_32);
                   const __m256d q_tmp_0_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_32);
                   const __m256d q_tmp_0_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_32);
                   const __m256d q_tmp_0_24 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_32);
                   const __m256d q_tmp_0_25 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_9);
                   const __m256d q_tmp_0_26 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_7);
                   const __m256d q_tmp_0_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_32);
                   const __m256d q_tmp_0_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_32);
                   const __m256d q_tmp_0_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_32);
                   const __m256d q_tmp_1_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_34);
                   const __m256d q_tmp_1_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_34);
                   const __m256d q_tmp_1_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_34);
                   const __m256d q_tmp_1_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_34);
                   const __m256d q_tmp_1_4 = tmp_qloop_37;
                   const __m256d q_tmp_1_5 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_8);
                   const __m256d q_tmp_1_6 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_6);
                   const __m256d q_tmp_1_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_34);
                   const __m256d q_tmp_1_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_34);
                   const __m256d q_tmp_1_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_34);
                   const __m256d q_tmp_1_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_40);
                   const __m256d q_tmp_1_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_40);
                   const __m256d q_tmp_1_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_40);
                   const __m256d q_tmp_1_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_40);
                   const __m256d q_tmp_1_14 = tmp_qloop_42;
                   const __m256d q_tmp_1_15 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_8);
                   const __m256d q_tmp_1_16 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_6);
                   const __m256d q_tmp_1_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_40);
                   const __m256d q_tmp_1_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_40);
                   const __m256d q_tmp_1_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_40);
                   const __m256d q_tmp_1_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_44);
                   const __m256d q_tmp_1_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_44);
                   const __m256d q_tmp_1_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_44);
                   const __m256d q_tmp_1_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_44);
                   const __m256d q_tmp_1_24 = tmp_qloop_46;
                   const __m256d q_tmp_1_25 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_8);
                   const __m256d q_tmp_1_26 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_6);
                   const __m256d q_tmp_1_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_44);
                   const __m256d q_tmp_1_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_44);
                   const __m256d q_tmp_1_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_44);
                   const __m256d q_tmp_2_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_36);
                   const __m256d q_tmp_2_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_36);
                   const __m256d q_tmp_2_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_36);
                   const __m256d q_tmp_2_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_36);
                   const __m256d q_tmp_2_4 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_48);
                   const __m256d q_tmp_2_5 = tmp_qloop_37;
                   const __m256d q_tmp_2_6 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_34);
                   const __m256d q_tmp_2_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_36);
                   const __m256d q_tmp_2_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_36);
                   const __m256d q_tmp_2_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_36);
                   const __m256d q_tmp_2_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_41);
                   const __m256d q_tmp_2_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_41);
                   const __m256d q_tmp_2_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_41);
                   const __m256d q_tmp_2_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_41);
                   const __m256d q_tmp_2_14 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_48);
                   const __m256d q_tmp_2_15 = tmp_qloop_42;
                   const __m256d q_tmp_2_16 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_40);
                   const __m256d q_tmp_2_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_41);
                   const __m256d q_tmp_2_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_41);
                   const __m256d q_tmp_2_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_41);
                   const __m256d q_tmp_2_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_45);
                   const __m256d q_tmp_2_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_45);
                   const __m256d q_tmp_2_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_45);
                   const __m256d q_tmp_2_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_45);
                   const __m256d q_tmp_2_24 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_48);
                   const __m256d q_tmp_2_25 = tmp_qloop_46;
                   const __m256d q_tmp_2_26 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_44);
                   const __m256d q_tmp_2_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_45);
                   const __m256d q_tmp_2_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_45);
                   const __m256d q_tmp_2_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_45);
                   const __m256d q_tmp_3_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_50);
                   const __m256d q_tmp_3_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_50);
                   const __m256d q_tmp_3_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_50);
                   const __m256d q_tmp_3_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_50);
                   const __m256d q_tmp_3_4 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_36);
                   const __m256d q_tmp_3_5 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_34);
                   const __m256d q_tmp_3_6 = tmp_qloop_37;
                   const __m256d q_tmp_3_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_50);
                   const __m256d q_tmp_3_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_50);
                   const __m256d q_tmp_3_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_50);
                   const __m256d q_tmp_3_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_51);
                   const __m256d q_tmp_3_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_51);
                   const __m256d q_tmp_3_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_51);
                   const __m256d q_tmp_3_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_51);
                   const __m256d q_tmp_3_14 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_41);
                   const __m256d q_tmp_3_15 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_40);
                   const __m256d q_tmp_3_16 = tmp_qloop_42;
                   const __m256d q_tmp_3_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_51);
                   const __m256d q_tmp_3_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_51);
                   const __m256d q_tmp_3_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_51);
                   const __m256d q_tmp_3_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_52);
                   const __m256d q_tmp_3_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_52);
                   const __m256d q_tmp_3_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_52);
                   const __m256d q_tmp_3_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_52);
                   const __m256d q_tmp_3_24 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_45);
                   const __m256d q_tmp_3_25 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_44);
                   const __m256d q_tmp_3_26 = tmp_qloop_46;
                   const __m256d q_tmp_3_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_52);
                   const __m256d q_tmp_3_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_52);
                   const __m256d q_tmp_3_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_52);
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,q_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,q_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,q_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,q_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,q_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,q_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,q_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,q_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,q_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,q_tmp_0_9);
                   q_acc_0_10 = _mm256_add_pd(q_acc_0_10,q_tmp_0_10);
                   q_acc_0_11 = _mm256_add_pd(q_acc_0_11,q_tmp_0_11);
                   q_acc_0_12 = _mm256_add_pd(q_acc_0_12,q_tmp_0_12);
                   q_acc_0_13 = _mm256_add_pd(q_acc_0_13,q_tmp_0_13);
                   q_acc_0_14 = _mm256_add_pd(q_acc_0_14,q_tmp_0_14);
                   q_acc_0_15 = _mm256_add_pd(q_acc_0_15,q_tmp_0_15);
                   q_acc_0_16 = _mm256_add_pd(q_acc_0_16,q_tmp_0_16);
                   q_acc_0_17 = _mm256_add_pd(q_acc_0_17,q_tmp_0_17);
                   q_acc_0_18 = _mm256_add_pd(q_acc_0_18,q_tmp_0_18);
                   q_acc_0_19 = _mm256_add_pd(q_acc_0_19,q_tmp_0_19);
                   q_acc_0_20 = _mm256_add_pd(q_acc_0_20,q_tmp_0_20);
                   q_acc_0_21 = _mm256_add_pd(q_acc_0_21,q_tmp_0_21);
                   q_acc_0_22 = _mm256_add_pd(q_acc_0_22,q_tmp_0_22);
                   q_acc_0_23 = _mm256_add_pd(q_acc_0_23,q_tmp_0_23);
                   q_acc_0_24 = _mm256_add_pd(q_acc_0_24,q_tmp_0_24);
                   q_acc_0_25 = _mm256_add_pd(q_acc_0_25,q_tmp_0_25);
                   q_acc_0_26 = _mm256_add_pd(q_acc_0_26,q_tmp_0_26);
                   q_acc_0_27 = _mm256_add_pd(q_acc_0_27,q_tmp_0_27);
                   q_acc_0_28 = _mm256_add_pd(q_acc_0_28,q_tmp_0_28);
                   q_acc_0_29 = _mm256_add_pd(q_acc_0_29,q_tmp_0_29);
                   q_acc_1_0 = _mm256_add_pd(q_acc_1_0,q_tmp_1_0);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,q_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,q_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,q_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,q_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,q_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,q_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,q_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,q_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,q_tmp_1_9);
                   q_acc_1_10 = _mm256_add_pd(q_acc_1_10,q_tmp_1_10);
                   q_acc_1_11 = _mm256_add_pd(q_acc_1_11,q_tmp_1_11);
                   q_acc_1_12 = _mm256_add_pd(q_acc_1_12,q_tmp_1_12);
                   q_acc_1_13 = _mm256_add_pd(q_acc_1_13,q_tmp_1_13);
                   q_acc_1_14 = _mm256_add_pd(q_acc_1_14,q_tmp_1_14);
                   q_acc_1_15 = _mm256_add_pd(q_acc_1_15,q_tmp_1_15);
                   q_acc_1_16 = _mm256_add_pd(q_acc_1_16,q_tmp_1_16);
                   q_acc_1_17 = _mm256_add_pd(q_acc_1_17,q_tmp_1_17);
                   q_acc_1_18 = _mm256_add_pd(q_acc_1_18,q_tmp_1_18);
                   q_acc_1_19 = _mm256_add_pd(q_acc_1_19,q_tmp_1_19);
                   q_acc_1_20 = _mm256_add_pd(q_acc_1_20,q_tmp_1_20);
                   q_acc_1_21 = _mm256_add_pd(q_acc_1_21,q_tmp_1_21);
                   q_acc_1_22 = _mm256_add_pd(q_acc_1_22,q_tmp_1_22);
                   q_acc_1_23 = _mm256_add_pd(q_acc_1_23,q_tmp_1_23);
                   q_acc_1_24 = _mm256_add_pd(q_acc_1_24,q_tmp_1_24);
                   q_acc_1_25 = _mm256_add_pd(q_acc_1_25,q_tmp_1_25);
                   q_acc_1_26 = _mm256_add_pd(q_acc_1_26,q_tmp_1_26);
                   q_acc_1_27 = _mm256_add_pd(q_acc_1_27,q_tmp_1_27);
                   q_acc_1_28 = _mm256_add_pd(q_acc_1_28,q_tmp_1_28);
                   q_acc_1_29 = _mm256_add_pd(q_acc_1_29,q_tmp_1_29);
                   q_acc_2_0 = _mm256_add_pd(q_acc_2_0,q_tmp_2_0);
                   q_acc_2_1 = _mm256_add_pd(q_acc_2_1,q_tmp_2_1);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,q_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,q_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,q_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,q_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,q_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,q_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,q_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,q_tmp_2_9);
                   q_acc_2_10 = _mm256_add_pd(q_acc_2_10,q_tmp_2_10);
                   q_acc_2_11 = _mm256_add_pd(q_acc_2_11,q_tmp_2_11);
                   q_acc_2_12 = _mm256_add_pd(q_acc_2_12,q_tmp_2_12);
                   q_acc_2_13 = _mm256_add_pd(q_acc_2_13,q_tmp_2_13);
                   q_acc_2_14 = _mm256_add_pd(q_acc_2_14,q_tmp_2_14);
                   q_acc_2_15 = _mm256_add_pd(q_acc_2_15,q_tmp_2_15);
                   q_acc_2_16 = _mm256_add_pd(q_acc_2_16,q_tmp_2_16);
                   q_acc_2_17 = _mm256_add_pd(q_acc_2_17,q_tmp_2_17);
                   q_acc_2_18 = _mm256_add_pd(q_acc_2_18,q_tmp_2_18);
                   q_acc_2_19 = _mm256_add_pd(q_acc_2_19,q_tmp_2_19);
                   q_acc_2_20 = _mm256_add_pd(q_acc_2_20,q_tmp_2_20);
                   q_acc_2_21 = _mm256_add_pd(q_acc_2_21,q_tmp_2_21);
                   q_acc_2_22 = _mm256_add_pd(q_acc_2_22,q_tmp_2_22);
                   q_acc_2_23 = _mm256_add_pd(q_acc_2_23,q_tmp_2_23);
                   q_acc_2_24 = _mm256_add_pd(q_acc_2_24,q_tmp_2_24);
                   q_acc_2_25 = _mm256_add_pd(q_acc_2_25,q_tmp_2_25);
                   q_acc_2_26 = _mm256_add_pd(q_acc_2_26,q_tmp_2_26);
                   q_acc_2_27 = _mm256_add_pd(q_acc_2_27,q_tmp_2_27);
                   q_acc_2_28 = _mm256_add_pd(q_acc_2_28,q_tmp_2_28);
                   q_acc_2_29 = _mm256_add_pd(q_acc_2_29,q_tmp_2_29);
                   q_acc_3_0 = _mm256_add_pd(q_acc_3_0,q_tmp_3_0);
                   q_acc_3_1 = _mm256_add_pd(q_acc_3_1,q_tmp_3_1);
                   q_acc_3_2 = _mm256_add_pd(q_acc_3_2,q_tmp_3_2);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,q_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,q_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,q_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,q_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,q_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,q_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,q_tmp_3_9);
                   q_acc_3_10 = _mm256_add_pd(q_acc_3_10,q_tmp_3_10);
                   q_acc_3_11 = _mm256_add_pd(q_acc_3_11,q_tmp_3_11);
                   q_acc_3_12 = _mm256_add_pd(q_acc_3_12,q_tmp_3_12);
                   q_acc_3_13 = _mm256_add_pd(q_acc_3_13,q_tmp_3_13);
                   q_acc_3_14 = _mm256_add_pd(q_acc_3_14,q_tmp_3_14);
                   q_acc_3_15 = _mm256_add_pd(q_acc_3_15,q_tmp_3_15);
                   q_acc_3_16 = _mm256_add_pd(q_acc_3_16,q_tmp_3_16);
                   q_acc_3_17 = _mm256_add_pd(q_acc_3_17,q_tmp_3_17);
                   q_acc_3_18 = _mm256_add_pd(q_acc_3_18,q_tmp_3_18);
                   q_acc_3_19 = _mm256_add_pd(q_acc_3_19,q_tmp_3_19);
                   q_acc_3_20 = _mm256_add_pd(q_acc_3_20,q_tmp_3_20);
                   q_acc_3_21 = _mm256_add_pd(q_acc_3_21,q_tmp_3_21);
                   q_acc_3_22 = _mm256_add_pd(q_acc_3_22,q_tmp_3_22);
                   q_acc_3_23 = _mm256_add_pd(q_acc_3_23,q_tmp_3_23);
                   q_acc_3_24 = _mm256_add_pd(q_acc_3_24,q_tmp_3_24);
                   q_acc_3_25 = _mm256_add_pd(q_acc_3_25,q_tmp_3_25);
                   q_acc_3_26 = _mm256_add_pd(q_acc_3_26,q_tmp_3_26);
                   q_acc_3_27 = _mm256_add_pd(q_acc_3_27,q_tmp_3_27);
                   q_acc_3_28 = _mm256_add_pd(q_acc_3_28,q_tmp_3_28);
                   q_acc_3_29 = _mm256_add_pd(q_acc_3_29,q_tmp_3_29);
                }
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_10,src_dof_10)),_mm256_mul_pd(q_acc_0_11,src_dof_11)),_mm256_mul_pd(q_acc_0_12,src_dof_12)),_mm256_mul_pd(q_acc_0_13,src_dof_13)),_mm256_mul_pd(q_acc_0_14,src_dof_14)),_mm256_mul_pd(q_acc_0_15,src_dof_15)),_mm256_mul_pd(q_acc_0_16,src_dof_16)),_mm256_mul_pd(q_acc_0_17,src_dof_17)),_mm256_mul_pd(q_acc_0_18,src_dof_18)),_mm256_mul_pd(q_acc_0_19,src_dof_19)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_20,src_dof_20)),_mm256_mul_pd(q_acc_0_21,src_dof_21)),_mm256_mul_pd(q_acc_0_22,src_dof_22)),_mm256_mul_pd(q_acc_0_23,src_dof_23)),_mm256_mul_pd(q_acc_0_24,src_dof_24)),_mm256_mul_pd(q_acc_0_25,src_dof_25)),_mm256_mul_pd(q_acc_0_26,src_dof_26)),_mm256_mul_pd(q_acc_0_27,src_dof_27)),_mm256_mul_pd(q_acc_0_28,src_dof_28)),_mm256_mul_pd(q_acc_0_29,src_dof_29)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_10,src_dof_10)),_mm256_mul_pd(q_acc_1_11,src_dof_11)),_mm256_mul_pd(q_acc_1_12,src_dof_12)),_mm256_mul_pd(q_acc_1_13,src_dof_13)),_mm256_mul_pd(q_acc_1_14,src_dof_14)),_mm256_mul_pd(q_acc_1_15,src_dof_15)),_mm256_mul_pd(q_acc_1_16,src_dof_16)),_mm256_mul_pd(q_acc_1_17,src_dof_17)),_mm256_mul_pd(q_acc_1_18,src_dof_18)),_mm256_mul_pd(q_acc_1_19,src_dof_19)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_20,src_dof_20)),_mm256_mul_pd(q_acc_1_21,src_dof_21)),_mm256_mul_pd(q_acc_1_22,src_dof_22)),_mm256_mul_pd(q_acc_1_23,src_dof_23)),_mm256_mul_pd(q_acc_1_24,src_dof_24)),_mm256_mul_pd(q_acc_1_25,src_dof_25)),_mm256_mul_pd(q_acc_1_26,src_dof_26)),_mm256_mul_pd(q_acc_1_27,src_dof_27)),_mm256_mul_pd(q_acc_1_28,src_dof_28)),_mm256_mul_pd(q_acc_1_29,src_dof_29)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_10,src_dof_10)),_mm256_mul_pd(q_acc_2_11,src_dof_11)),_mm256_mul_pd(q_acc_2_12,src_dof_12)),_mm256_mul_pd(q_acc_2_13,src_dof_13)),_mm256_mul_pd(q_acc_2_14,src_dof_14)),_mm256_mul_pd(q_acc_2_15,src_dof_15)),_mm256_mul_pd(q_acc_2_16,src_dof_16)),_mm256_mul_pd(q_acc_2_17,src_dof_17)),_mm256_mul_pd(q_acc_2_18,src_dof_18)),_mm256_mul_pd(q_acc_2_19,src_dof_19)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_20,src_dof_20)),_mm256_mul_pd(q_acc_2_21,src_dof_21)),_mm256_mul_pd(q_acc_2_22,src_dof_22)),_mm256_mul_pd(q_acc_2_23,src_dof_23)),_mm256_mul_pd(q_acc_2_24,src_dof_24)),_mm256_mul_pd(q_acc_2_25,src_dof_25)),_mm256_mul_pd(q_acc_2_26,src_dof_26)),_mm256_mul_pd(q_acc_2_27,src_dof_27)),_mm256_mul_pd(q_acc_2_28,src_dof_28)),_mm256_mul_pd(q_acc_2_29,src_dof_29)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_10,src_dof_10)),_mm256_mul_pd(q_acc_3_11,src_dof_11)),_mm256_mul_pd(q_acc_3_12,src_dof_12)),_mm256_mul_pd(q_acc_3_13,src_dof_13)),_mm256_mul_pd(q_acc_3_14,src_dof_14)),_mm256_mul_pd(q_acc_3_15,src_dof_15)),_mm256_mul_pd(q_acc_3_16,src_dof_16)),_mm256_mul_pd(q_acc_3_17,src_dof_17)),_mm256_mul_pd(q_acc_3_18,src_dof_18)),_mm256_mul_pd(q_acc_3_19,src_dof_19)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_20,src_dof_20)),_mm256_mul_pd(q_acc_3_21,src_dof_21)),_mm256_mul_pd(q_acc_3_22,src_dof_22)),_mm256_mul_pd(q_acc_3_23,src_dof_23)),_mm256_mul_pd(q_acc_3_24,src_dof_24)),_mm256_mul_pd(q_acc_3_25,src_dof_25)),_mm256_mul_pd(q_acc_3_26,src_dof_26)),_mm256_mul_pd(q_acc_3_27,src_dof_27)),_mm256_mul_pd(q_acc_3_28,src_dof_28)),_mm256_mul_pd(q_acc_3_29,src_dof_29)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t src_dof_0 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_1 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_2 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_3 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_4 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_5 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_6 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_7 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_8 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_9 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_10 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_11 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_12 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_13 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_14 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_15 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_16 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_17 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_18 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_19 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_20 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_21 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_22 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_23 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_24 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_25 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_26 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_27 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_28 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_29 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t rho_dof_0 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_1 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_2 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_3 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                real_t q_acc_0_0 = 0.0;
                real_t q_acc_0_1 = 0.0;
                real_t q_acc_0_2 = 0.0;
                real_t q_acc_0_3 = 0.0;
                real_t q_acc_0_4 = 0.0;
                real_t q_acc_0_5 = 0.0;
                real_t q_acc_0_6 = 0.0;
                real_t q_acc_0_7 = 0.0;
                real_t q_acc_0_8 = 0.0;
                real_t q_acc_0_9 = 0.0;
                real_t q_acc_0_10 = 0.0;
                real_t q_acc_0_11 = 0.0;
                real_t q_acc_0_12 = 0.0;
                real_t q_acc_0_13 = 0.0;
                real_t q_acc_0_14 = 0.0;
                real_t q_acc_0_15 = 0.0;
                real_t q_acc_0_16 = 0.0;
                real_t q_acc_0_17 = 0.0;
                real_t q_acc_0_18 = 0.0;
                real_t q_acc_0_19 = 0.0;
                real_t q_acc_0_20 = 0.0;
                real_t q_acc_0_21 = 0.0;
                real_t q_acc_0_22 = 0.0;
                real_t q_acc_0_23 = 0.0;
                real_t q_acc_0_24 = 0.0;
                real_t q_acc_0_25 = 0.0;
                real_t q_acc_0_26 = 0.0;
                real_t q_acc_0_27 = 0.0;
                real_t q_acc_0_28 = 0.0;
                real_t q_acc_0_29 = 0.0;
                real_t q_acc_1_0 = 0.0;
                real_t q_acc_1_1 = 0.0;
                real_t q_acc_1_2 = 0.0;
                real_t q_acc_1_3 = 0.0;
                real_t q_acc_1_4 = 0.0;
                real_t q_acc_1_5 = 0.0;
                real_t q_acc_1_6 = 0.0;
                real_t q_acc_1_7 = 0.0;
                real_t q_acc_1_8 = 0.0;
                real_t q_acc_1_9 = 0.0;
                real_t q_acc_1_10 = 0.0;
                real_t q_acc_1_11 = 0.0;
                real_t q_acc_1_12 = 0.0;
                real_t q_acc_1_13 = 0.0;
                real_t q_acc_1_14 = 0.0;
                real_t q_acc_1_15 = 0.0;
                real_t q_acc_1_16 = 0.0;
                real_t q_acc_1_17 = 0.0;
                real_t q_acc_1_18 = 0.0;
                real_t q_acc_1_19 = 0.0;
                real_t q_acc_1_20 = 0.0;
                real_t q_acc_1_21 = 0.0;
                real_t q_acc_1_22 = 0.0;
                real_t q_acc_1_23 = 0.0;
                real_t q_acc_1_24 = 0.0;
                real_t q_acc_1_25 = 0.0;
                real_t q_acc_1_26 = 0.0;
                real_t q_acc_1_27 = 0.0;
                real_t q_acc_1_28 = 0.0;
                real_t q_acc_1_29 = 0.0;
                real_t q_acc_2_0 = 0.0;
                real_t q_acc_2_1 = 0.0;
                real_t q_acc_2_2 = 0.0;
                real_t q_acc_2_3 = 0.0;
                real_t q_acc_2_4 = 0.0;
                real_t q_acc_2_5 = 0.0;
                real_t q_acc_2_6 = 0.0;
                real_t q_acc_2_7 = 0.0;
                real_t q_acc_2_8 = 0.0;
                real_t q_acc_2_9 = 0.0;
                real_t q_acc_2_10 = 0.0;
                real_t q_acc_2_11 = 0.0;
                real_t q_acc_2_12 = 0.0;
                real_t q_acc_2_13 = 0.0;
                real_t q_acc_2_14 = 0.0;
                real_t q_acc_2_15 = 0.0;
                real_t q_acc_2_16 = 0.0;
                real_t q_acc_2_17 = 0.0;
                real_t q_acc_2_18 = 0.0;
                real_t q_acc_2_19 = 0.0;
                real_t q_acc_2_20 = 0.0;
                real_t q_acc_2_21 = 0.0;
                real_t q_acc_2_22 = 0.0;
                real_t q_acc_2_23 = 0.0;
                real_t q_acc_2_24 = 0.0;
                real_t q_acc_2_25 = 0.0;
                real_t q_acc_2_26 = 0.0;
                real_t q_acc_2_27 = 0.0;
                real_t q_acc_2_28 = 0.0;
                real_t q_acc_2_29 = 0.0;
                real_t q_acc_3_0 = 0.0;
                real_t q_acc_3_1 = 0.0;
                real_t q_acc_3_2 = 0.0;
                real_t q_acc_3_3 = 0.0;
                real_t q_acc_3_4 = 0.0;
                real_t q_acc_3_5 = 0.0;
                real_t q_acc_3_6 = 0.0;
                real_t q_acc_3_7 = 0.0;
                real_t q_acc_3_8 = 0.0;
                real_t q_acc_3_9 = 0.0;
                real_t q_acc_3_10 = 0.0;
                real_t q_acc_3_11 = 0.0;
                real_t q_acc_3_12 = 0.0;
                real_t q_acc_3_13 = 0.0;
                real_t q_acc_3_14 = 0.0;
                real_t q_acc_3_15 = 0.0;
                real_t q_acc_3_16 = 0.0;
                real_t q_acc_3_17 = 0.0;
                real_t q_acc_3_18 = 0.0;
                real_t q_acc_3_19 = 0.0;
                real_t q_acc_3_20 = 0.0;
                real_t q_acc_3_21 = 0.0;
                real_t q_acc_3_22 = 0.0;
                real_t q_acc_3_23 = 0.0;
                real_t q_acc_3_24 = 0.0;
                real_t q_acc_3_25 = 0.0;
                real_t q_acc_3_26 = 0.0;
                real_t q_acc_3_27 = 0.0;
                real_t q_acc_3_28 = 0.0;
                real_t q_acc_3_29 = 0.0;
                const real_t tmp_qloop_13 = -rho_dof_0 + rho_dof_1;
                const real_t tmp_qloop_14 = -rho_dof_0 + rho_dof_2;
                const real_t tmp_qloop_15 = -rho_dof_0 + rho_dof_3;
                const real_t tmp_qloop_16 = tmp_qloop_13*(jac_affine_inv_0_0_WHITE_UP*jac_blending_inv_0_0 + jac_affine_inv_0_1_WHITE_UP*jac_blending_inv_1_0 + jac_affine_inv_0_2_WHITE_UP*jac_blending_inv_2_0) + tmp_qloop_14*(jac_affine_inv_1_0_WHITE_UP*jac_blending_inv_0_0 + jac_affine_inv_1_1_WHITE_UP*jac_blending_inv_1_0 + jac_affine_inv_1_2_WHITE_UP*jac_blending_inv_2_0) + tmp_qloop_15*(jac_affine_inv_2_0_WHITE_UP*jac_blending_inv_0_0 + jac_affine_inv_2_1_WHITE_UP*jac_blending_inv_1_0 + jac_affine_inv_2_2_WHITE_UP*jac_blending_inv_2_0);
                const real_t tmp_qloop_29 = tmp_qloop_13*(jac_affine_inv_0_0_WHITE_UP*jac_blending_inv_0_1 + jac_affine_inv_0_1_WHITE_UP*jac_blending_inv_1_1 + jac_affine_inv_0_2_WHITE_UP*jac_blending_inv_2_1) + tmp_qloop_14*(jac_affine_inv_1_0_WHITE_UP*jac_blending_inv_0_1 + jac_affine_inv_1_1_WHITE_UP*jac_blending_inv_1_1 + jac_affine_inv_1_2_WHITE_UP*jac_blending_inv_2_1) + tmp_qloop_15*(jac_affine_inv_2_0_WHITE_UP*jac_blending_inv_0_1 + jac_affine_inv_2_1_WHITE_UP*jac_blending_inv_1_1 + jac_affine_inv_2_2_WHITE_UP*jac_blending_inv_2_1);
                const real_t tmp_qloop_31 = tmp_qloop_13*(jac_affine_inv_0_0_WHITE_UP*jac_blending_inv_0_2 + jac_affine_inv_0_1_WHITE_UP*jac_blending_inv_1_2 + jac_affine_inv_0_2_WHITE_UP*jac_blending_inv_2_2) + tmp_qloop_14*(jac_affine_inv_1_0_WHITE_UP*jac_blending_inv_0_2 + jac_affine_inv_1_1_WHITE_UP*jac_blending_inv_1_2 + jac_affine_inv_1_2_WHITE_UP*jac_blending_inv_2_2) + tmp_qloop_15*(jac_affine_inv_2_0_WHITE_UP*jac_blending_inv_0_2 + jac_affine_inv_2_1_WHITE_UP*jac_blending_inv_1_2 + jac_affine_inv_2_2_WHITE_UP*jac_blending_inv_2_2);
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const real_t tmp_qloop_0 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const real_t tmp_qloop_1 = tmp_qloop_0*2.0;
                   const real_t tmp_qloop_2 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const real_t tmp_qloop_3 = tmp_qloop_2*2.0;
                   const real_t tmp_qloop_4 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const real_t tmp_qloop_5 = tmp_qloop_4*2.0;
                   const real_t tmp_qloop_6 = 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_7 = tmp_qloop_6*_data_q_p_0[q];
                   const real_t tmp_qloop_8 = 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_9 = tmp_qloop_8*_data_q_p_0[q];
                   const real_t tmp_qloop_10 = tmp_qloop_8*_data_q_p_1[q];
                   const real_t tmp_qloop_11 = tmp_qloop_10 + tmp_qloop_9;
                   const real_t tmp_qloop_12 = tmp_qloop_1 + tmp_qloop_11 + tmp_qloop_3 + tmp_qloop_5 + tmp_qloop_7 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0;
                   const real_t tmp_qloop_17 = 1.0 - _data_q_p_0[q] - _data_q_p_1[q] - _data_q_p_2[q];
                   const real_t tmp_qloop_18 = abs_det_jac_affine_WHITE_UP*abs_det_jac_blending*1.0 / (rho_dof_0*tmp_qloop_17 + rho_dof_1*_data_q_p_0[q] + rho_dof_2*_data_q_p_1[q] + rho_dof_3*_data_q_p_2[q])*_data_q_w[q];
                   const real_t tmp_qloop_19 = tmp_qloop_17*tmp_qloop_18;
                   const real_t tmp_qloop_20 = tmp_qloop_16*tmp_qloop_19;
                   const real_t tmp_qloop_21 = tmp_qloop_1 - _data_q_p_0[q];
                   const real_t tmp_qloop_22 = tmp_qloop_3 - _data_q_p_1[q];
                   const real_t tmp_qloop_23 = tmp_qloop_5 - _data_q_p_2[q];
                   const real_t tmp_qloop_24 = tmp_qloop_4*4.0;
                   const real_t tmp_qloop_25 = -tmp_qloop_11 - tmp_qloop_24 + 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_26 = tmp_qloop_2*4.0;
                   const real_t tmp_qloop_27 = -tmp_qloop_10 - tmp_qloop_26 - tmp_qloop_7 + 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_28 = tmp_qloop_0*-4.0 - tmp_qloop_7 - tmp_qloop_9 + 4.0*_data_q_p_0[q];
                   const real_t tmp_qloop_30 = tmp_qloop_19*tmp_qloop_29;
                   const real_t tmp_qloop_32 = tmp_qloop_19*tmp_qloop_31;
                   const real_t tmp_qloop_33 = tmp_qloop_18*_data_q_p_0[q];
                   const real_t tmp_qloop_34 = tmp_qloop_16*tmp_qloop_33;
                   const real_t tmp_qloop_35 = tmp_qloop_18*_data_q_p_1[q];
                   const real_t tmp_qloop_36 = tmp_qloop_16*tmp_qloop_35;
                   const real_t tmp_qloop_37 = tmp_qloop_36*tmp_qloop_9;
                   const real_t tmp_qloop_38 = tmp_qloop_0*tmp_qloop_18;
                   const real_t tmp_qloop_39 = tmp_qloop_16*tmp_qloop_38;
                   const real_t tmp_qloop_40 = tmp_qloop_29*tmp_qloop_33;
                   const real_t tmp_qloop_41 = tmp_qloop_29*tmp_qloop_35;
                   const real_t tmp_qloop_42 = tmp_qloop_41*tmp_qloop_9;
                   const real_t tmp_qloop_43 = tmp_qloop_29*tmp_qloop_38;
                   const real_t tmp_qloop_44 = tmp_qloop_31*tmp_qloop_33;
                   const real_t tmp_qloop_45 = tmp_qloop_31*tmp_qloop_35;
                   const real_t tmp_qloop_46 = tmp_qloop_45*tmp_qloop_9;
                   const real_t tmp_qloop_47 = tmp_qloop_31*tmp_qloop_38;
                   const real_t tmp_qloop_48 = tmp_qloop_18*tmp_qloop_2*tmp_qloop_8;
                   const real_t tmp_qloop_49 = tmp_qloop_18*_data_q_p_2[q];
                   const real_t tmp_qloop_50 = tmp_qloop_16*tmp_qloop_49;
                   const real_t tmp_qloop_51 = tmp_qloop_29*tmp_qloop_49;
                   const real_t tmp_qloop_52 = tmp_qloop_31*tmp_qloop_49;
                   const real_t q_tmp_0_0 = tmp_qloop_12*tmp_qloop_20;
                   const real_t q_tmp_0_1 = tmp_qloop_20*tmp_qloop_21;
                   const real_t q_tmp_0_2 = tmp_qloop_20*tmp_qloop_22;
                   const real_t q_tmp_0_3 = tmp_qloop_20*tmp_qloop_23;
                   const real_t q_tmp_0_4 = tmp_qloop_10*tmp_qloop_20;
                   const real_t q_tmp_0_5 = tmp_qloop_20*tmp_qloop_9;
                   const real_t q_tmp_0_6 = tmp_qloop_20*tmp_qloop_7;
                   const real_t q_tmp_0_7 = tmp_qloop_20*tmp_qloop_25;
                   const real_t q_tmp_0_8 = tmp_qloop_20*tmp_qloop_27;
                   const real_t q_tmp_0_9 = tmp_qloop_20*tmp_qloop_28;
                   const real_t q_tmp_0_10 = tmp_qloop_12*tmp_qloop_30;
                   const real_t q_tmp_0_11 = tmp_qloop_21*tmp_qloop_30;
                   const real_t q_tmp_0_12 = tmp_qloop_22*tmp_qloop_30;
                   const real_t q_tmp_0_13 = tmp_qloop_23*tmp_qloop_30;
                   const real_t q_tmp_0_14 = tmp_qloop_10*tmp_qloop_30;
                   const real_t q_tmp_0_15 = tmp_qloop_30*tmp_qloop_9;
                   const real_t q_tmp_0_16 = tmp_qloop_30*tmp_qloop_7;
                   const real_t q_tmp_0_17 = tmp_qloop_25*tmp_qloop_30;
                   const real_t q_tmp_0_18 = tmp_qloop_27*tmp_qloop_30;
                   const real_t q_tmp_0_19 = tmp_qloop_28*tmp_qloop_30;
                   const real_t q_tmp_0_20 = tmp_qloop_12*tmp_qloop_32;
                   const real_t q_tmp_0_21 = tmp_qloop_21*tmp_qloop_32;
                   const real_t q_tmp_0_22 = tmp_qloop_22*tmp_qloop_32;
                   const real_t q_tmp_0_23 = tmp_qloop_23*tmp_qloop_32;
                   const real_t q_tmp_0_24 = tmp_qloop_10*tmp_qloop_32;
                   const real_t q_tmp_0_25 = tmp_qloop_32*tmp_qloop_9;
                   const real_t q_tmp_0_26 = tmp_qloop_32*tmp_qloop_7;
                   const real_t q_tmp_0_27 = tmp_qloop_25*tmp_qloop_32;
                   const real_t q_tmp_0_28 = tmp_qloop_27*tmp_qloop_32;
                   const real_t q_tmp_0_29 = tmp_qloop_28*tmp_qloop_32;
                   const real_t q_tmp_1_0 = tmp_qloop_12*tmp_qloop_34;
                   const real_t q_tmp_1_1 = tmp_qloop_21*tmp_qloop_34;
                   const real_t q_tmp_1_2 = tmp_qloop_22*tmp_qloop_34;
                   const real_t q_tmp_1_3 = tmp_qloop_23*tmp_qloop_34;
                   const real_t q_tmp_1_4 = tmp_qloop_37;
                   const real_t q_tmp_1_5 = tmp_qloop_39*tmp_qloop_8;
                   const real_t q_tmp_1_6 = tmp_qloop_39*tmp_qloop_6;
                   const real_t q_tmp_1_7 = tmp_qloop_25*tmp_qloop_34;
                   const real_t q_tmp_1_8 = tmp_qloop_27*tmp_qloop_34;
                   const real_t q_tmp_1_9 = tmp_qloop_28*tmp_qloop_34;
                   const real_t q_tmp_1_10 = tmp_qloop_12*tmp_qloop_40;
                   const real_t q_tmp_1_11 = tmp_qloop_21*tmp_qloop_40;
                   const real_t q_tmp_1_12 = tmp_qloop_22*tmp_qloop_40;
                   const real_t q_tmp_1_13 = tmp_qloop_23*tmp_qloop_40;
                   const real_t q_tmp_1_14 = tmp_qloop_42;
                   const real_t q_tmp_1_15 = tmp_qloop_43*tmp_qloop_8;
                   const real_t q_tmp_1_16 = tmp_qloop_43*tmp_qloop_6;
                   const real_t q_tmp_1_17 = tmp_qloop_25*tmp_qloop_40;
                   const real_t q_tmp_1_18 = tmp_qloop_27*tmp_qloop_40;
                   const real_t q_tmp_1_19 = tmp_qloop_28*tmp_qloop_40;
                   const real_t q_tmp_1_20 = tmp_qloop_12*tmp_qloop_44;
                   const real_t q_tmp_1_21 = tmp_qloop_21*tmp_qloop_44;
                   const real_t q_tmp_1_22 = tmp_qloop_22*tmp_qloop_44;
                   const real_t q_tmp_1_23 = tmp_qloop_23*tmp_qloop_44;
                   const real_t q_tmp_1_24 = tmp_qloop_46;
                   const real_t q_tmp_1_25 = tmp_qloop_47*tmp_qloop_8;
                   const real_t q_tmp_1_26 = tmp_qloop_47*tmp_qloop_6;
                   const real_t q_tmp_1_27 = tmp_qloop_25*tmp_qloop_44;
                   const real_t q_tmp_1_28 = tmp_qloop_27*tmp_qloop_44;
                   const real_t q_tmp_1_29 = tmp_qloop_28*tmp_qloop_44;
                   const real_t q_tmp_2_0 = tmp_qloop_12*tmp_qloop_36;
                   const real_t q_tmp_2_1 = tmp_qloop_21*tmp_qloop_36;
                   const real_t q_tmp_2_2 = tmp_qloop_22*tmp_qloop_36;
                   const real_t q_tmp_2_3 = tmp_qloop_23*tmp_qloop_36;
                   const real_t q_tmp_2_4 = tmp_qloop_16*tmp_qloop_48;
                   const real_t q_tmp_2_5 = tmp_qloop_37;
                   const real_t q_tmp_2_6 = tmp_qloop_26*tmp_qloop_34;
                   const real_t q_tmp_2_7 = tmp_qloop_25*tmp_qloop_36;
                   const real_t q_tmp_2_8 = tmp_qloop_27*tmp_qloop_36;
                   const real_t q_tmp_2_9 = tmp_qloop_28*tmp_qloop_36;
                   const real_t q_tmp_2_10 = tmp_qloop_12*tmp_qloop_41;
                   const real_t q_tmp_2_11 = tmp_qloop_21*tmp_qloop_41;
                   const real_t q_tmp_2_12 = tmp_qloop_22*tmp_qloop_41;
                   const real_t q_tmp_2_13 = tmp_qloop_23*tmp_qloop_41;
                   const real_t q_tmp_2_14 = tmp_qloop_29*tmp_qloop_48;
                   const real_t q_tmp_2_15 = tmp_qloop_42;
                   const real_t q_tmp_2_16 = tmp_qloop_26*tmp_qloop_40;
                   const real_t q_tmp_2_17 = tmp_qloop_25*tmp_qloop_41;
                   const real_t q_tmp_2_18 = tmp_qloop_27*tmp_qloop_41;
                   const real_t q_tmp_2_19 = tmp_qloop_28*tmp_qloop_41;
                   const real_t q_tmp_2_20 = tmp_qloop_12*tmp_qloop_45;
                   const real_t q_tmp_2_21 = tmp_qloop_21*tmp_qloop_45;
                   const real_t q_tmp_2_22 = tmp_qloop_22*tmp_qloop_45;
                   const real_t q_tmp_2_23 = tmp_qloop_23*tmp_qloop_45;
                   const real_t q_tmp_2_24 = tmp_qloop_31*tmp_qloop_48;
                   const real_t q_tmp_2_25 = tmp_qloop_46;
                   const real_t q_tmp_2_26 = tmp_qloop_26*tmp_qloop_44;
                   const real_t q_tmp_2_27 = tmp_qloop_25*tmp_qloop_45;
                   const real_t q_tmp_2_28 = tmp_qloop_27*tmp_qloop_45;
                   const real_t q_tmp_2_29 = tmp_qloop_28*tmp_qloop_45;
                   const real_t q_tmp_3_0 = tmp_qloop_12*tmp_qloop_50;
                   const real_t q_tmp_3_1 = tmp_qloop_21*tmp_qloop_50;
                   const real_t q_tmp_3_2 = tmp_qloop_22*tmp_qloop_50;
                   const real_t q_tmp_3_3 = tmp_qloop_23*tmp_qloop_50;
                   const real_t q_tmp_3_4 = tmp_qloop_24*tmp_qloop_36;
                   const real_t q_tmp_3_5 = tmp_qloop_24*tmp_qloop_34;
                   const real_t q_tmp_3_6 = tmp_qloop_37;
                   const real_t q_tmp_3_7 = tmp_qloop_25*tmp_qloop_50;
                   const real_t q_tmp_3_8 = tmp_qloop_27*tmp_qloop_50;
                   const real_t q_tmp_3_9 = tmp_qloop_28*tmp_qloop_50;
                   const real_t q_tmp_3_10 = tmp_qloop_12*tmp_qloop_51;
                   const real_t q_tmp_3_11 = tmp_qloop_21*tmp_qloop_51;
                   const real_t q_tmp_3_12 = tmp_qloop_22*tmp_qloop_51;
                   const real_t q_tmp_3_13 = tmp_qloop_23*tmp_qloop_51;
                   const real_t q_tmp_3_14 = tmp_qloop_24*tmp_qloop_41;
                   const real_t q_tmp_3_15 = tmp_qloop_24*tmp_qloop_40;
                   const real_t q_tmp_3_16 = tmp_qloop_42;
                   const real_t q_tmp_3_17 = tmp_qloop_25*tmp_qloop_51;
                   const real_t q_tmp_3_18 = tmp_qloop_27*tmp_qloop_51;
                   const real_t q_tmp_3_19 = tmp_qloop_28*tmp_qloop_51;
                   const real_t q_tmp_3_20 = tmp_qloop_12*tmp_qloop_52;
                   const real_t q_tmp_3_21 = tmp_qloop_21*tmp_qloop_52;
                   const real_t q_tmp_3_22 = tmp_qloop_22*tmp_qloop_52;
                   const real_t q_tmp_3_23 = tmp_qloop_23*tmp_qloop_52;
                   const real_t q_tmp_3_24 = tmp_qloop_24*tmp_qloop_45;
                   const real_t q_tmp_3_25 = tmp_qloop_24*tmp_qloop_44;
                   const real_t q_tmp_3_26 = tmp_qloop_46;
                   const real_t q_tmp_3_27 = tmp_qloop_25*tmp_qloop_52;
                   const real_t q_tmp_3_28 = tmp_qloop_27*tmp_qloop_52;
                   const real_t q_tmp_3_29 = tmp_qloop_28*tmp_qloop_52;
                   q_acc_0_0 = q_acc_0_0 + q_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + q_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + q_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + q_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + q_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + q_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + q_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + q_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + q_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + q_tmp_0_9;
                   q_acc_0_10 = q_acc_0_10 + q_tmp_0_10;
                   q_acc_0_11 = q_acc_0_11 + q_tmp_0_11;
                   q_acc_0_12 = q_acc_0_12 + q_tmp_0_12;
                   q_acc_0_13 = q_acc_0_13 + q_tmp_0_13;
                   q_acc_0_14 = q_acc_0_14 + q_tmp_0_14;
                   q_acc_0_15 = q_acc_0_15 + q_tmp_0_15;
                   q_acc_0_16 = q_acc_0_16 + q_tmp_0_16;
                   q_acc_0_17 = q_acc_0_17 + q_tmp_0_17;
                   q_acc_0_18 = q_acc_0_18 + q_tmp_0_18;
                   q_acc_0_19 = q_acc_0_19 + q_tmp_0_19;
                   q_acc_0_20 = q_acc_0_20 + q_tmp_0_20;
                   q_acc_0_21 = q_acc_0_21 + q_tmp_0_21;
                   q_acc_0_22 = q_acc_0_22 + q_tmp_0_22;
                   q_acc_0_23 = q_acc_0_23 + q_tmp_0_23;
                   q_acc_0_24 = q_acc_0_24 + q_tmp_0_24;
                   q_acc_0_25 = q_acc_0_25 + q_tmp_0_25;
                   q_acc_0_26 = q_acc_0_26 + q_tmp_0_26;
                   q_acc_0_27 = q_acc_0_27 + q_tmp_0_27;
                   q_acc_0_28 = q_acc_0_28 + q_tmp_0_28;
                   q_acc_0_29 = q_acc_0_29 + q_tmp_0_29;
                   q_acc_1_0 = q_acc_1_0 + q_tmp_1_0;
                   q_acc_1_1 = q_acc_1_1 + q_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + q_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + q_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + q_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + q_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + q_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + q_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + q_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + q_tmp_1_9;
                   q_acc_1_10 = q_acc_1_10 + q_tmp_1_10;
                   q_acc_1_11 = q_acc_1_11 + q_tmp_1_11;
                   q_acc_1_12 = q_acc_1_12 + q_tmp_1_12;
                   q_acc_1_13 = q_acc_1_13 + q_tmp_1_13;
                   q_acc_1_14 = q_acc_1_14 + q_tmp_1_14;
                   q_acc_1_15 = q_acc_1_15 + q_tmp_1_15;
                   q_acc_1_16 = q_acc_1_16 + q_tmp_1_16;
                   q_acc_1_17 = q_acc_1_17 + q_tmp_1_17;
                   q_acc_1_18 = q_acc_1_18 + q_tmp_1_18;
                   q_acc_1_19 = q_acc_1_19 + q_tmp_1_19;
                   q_acc_1_20 = q_acc_1_20 + q_tmp_1_20;
                   q_acc_1_21 = q_acc_1_21 + q_tmp_1_21;
                   q_acc_1_22 = q_acc_1_22 + q_tmp_1_22;
                   q_acc_1_23 = q_acc_1_23 + q_tmp_1_23;
                   q_acc_1_24 = q_acc_1_24 + q_tmp_1_24;
                   q_acc_1_25 = q_acc_1_25 + q_tmp_1_25;
                   q_acc_1_26 = q_acc_1_26 + q_tmp_1_26;
                   q_acc_1_27 = q_acc_1_27 + q_tmp_1_27;
                   q_acc_1_28 = q_acc_1_28 + q_tmp_1_28;
                   q_acc_1_29 = q_acc_1_29 + q_tmp_1_29;
                   q_acc_2_0 = q_acc_2_0 + q_tmp_2_0;
                   q_acc_2_1 = q_acc_2_1 + q_tmp_2_1;
                   q_acc_2_2 = q_acc_2_2 + q_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + q_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + q_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + q_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + q_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + q_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + q_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + q_tmp_2_9;
                   q_acc_2_10 = q_acc_2_10 + q_tmp_2_10;
                   q_acc_2_11 = q_acc_2_11 + q_tmp_2_11;
                   q_acc_2_12 = q_acc_2_12 + q_tmp_2_12;
                   q_acc_2_13 = q_acc_2_13 + q_tmp_2_13;
                   q_acc_2_14 = q_acc_2_14 + q_tmp_2_14;
                   q_acc_2_15 = q_acc_2_15 + q_tmp_2_15;
                   q_acc_2_16 = q_acc_2_16 + q_tmp_2_16;
                   q_acc_2_17 = q_acc_2_17 + q_tmp_2_17;
                   q_acc_2_18 = q_acc_2_18 + q_tmp_2_18;
                   q_acc_2_19 = q_acc_2_19 + q_tmp_2_19;
                   q_acc_2_20 = q_acc_2_20 + q_tmp_2_20;
                   q_acc_2_21 = q_acc_2_21 + q_tmp_2_21;
                   q_acc_2_22 = q_acc_2_22 + q_tmp_2_22;
                   q_acc_2_23 = q_acc_2_23 + q_tmp_2_23;
                   q_acc_2_24 = q_acc_2_24 + q_tmp_2_24;
                   q_acc_2_25 = q_acc_2_25 + q_tmp_2_25;
                   q_acc_2_26 = q_acc_2_26 + q_tmp_2_26;
                   q_acc_2_27 = q_acc_2_27 + q_tmp_2_27;
                   q_acc_2_28 = q_acc_2_28 + q_tmp_2_28;
                   q_acc_2_29 = q_acc_2_29 + q_tmp_2_29;
                   q_acc_3_0 = q_acc_3_0 + q_tmp_3_0;
                   q_acc_3_1 = q_acc_3_1 + q_tmp_3_1;
                   q_acc_3_2 = q_acc_3_2 + q_tmp_3_2;
                   q_acc_3_3 = q_acc_3_3 + q_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + q_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + q_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + q_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + q_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + q_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + q_tmp_3_9;
                   q_acc_3_10 = q_acc_3_10 + q_tmp_3_10;
                   q_acc_3_11 = q_acc_3_11 + q_tmp_3_11;
                   q_acc_3_12 = q_acc_3_12 + q_tmp_3_12;
                   q_acc_3_13 = q_acc_3_13 + q_tmp_3_13;
                   q_acc_3_14 = q_acc_3_14 + q_tmp_3_14;
                   q_acc_3_15 = q_acc_3_15 + q_tmp_3_15;
                   q_acc_3_16 = q_acc_3_16 + q_tmp_3_16;
                   q_acc_3_17 = q_acc_3_17 + q_tmp_3_17;
                   q_acc_3_18 = q_acc_3_18 + q_tmp_3_18;
                   q_acc_3_19 = q_acc_3_19 + q_tmp_3_19;
                   q_acc_3_20 = q_acc_3_20 + q_tmp_3_20;
                   q_acc_3_21 = q_acc_3_21 + q_tmp_3_21;
                   q_acc_3_22 = q_acc_3_22 + q_tmp_3_22;
                   q_acc_3_23 = q_acc_3_23 + q_tmp_3_23;
                   q_acc_3_24 = q_acc_3_24 + q_tmp_3_24;
                   q_acc_3_25 = q_acc_3_25 + q_tmp_3_25;
                   q_acc_3_26 = q_acc_3_26 + q_tmp_3_26;
                   q_acc_3_27 = q_acc_3_27 + q_tmp_3_27;
                   q_acc_3_28 = q_acc_3_28 + q_tmp_3_28;
                   q_acc_3_29 = q_acc_3_29 + q_tmp_3_29;
                }
                const real_t elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_10*src_dof_10 + q_acc_0_11*src_dof_11 + q_acc_0_12*src_dof_12 + q_acc_0_13*src_dof_13 + q_acc_0_14*src_dof_14 + q_acc_0_15*src_dof_15 + q_acc_0_16*src_dof_16 + q_acc_0_17*src_dof_17 + q_acc_0_18*src_dof_18 + q_acc_0_19*src_dof_19 + q_acc_0_2*src_dof_2 + q_acc_0_20*src_dof_20 + q_acc_0_21*src_dof_21 + q_acc_0_22*src_dof_22 + q_acc_0_23*src_dof_23 + q_acc_0_24*src_dof_24 + q_acc_0_25*src_dof_25 + q_acc_0_26*src_dof_26 + q_acc_0_27*src_dof_27 + q_acc_0_28*src_dof_28 + q_acc_0_29*src_dof_29 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const real_t elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_10*src_dof_10 + q_acc_1_11*src_dof_11 + q_acc_1_12*src_dof_12 + q_acc_1_13*src_dof_13 + q_acc_1_14*src_dof_14 + q_acc_1_15*src_dof_15 + q_acc_1_16*src_dof_16 + q_acc_1_17*src_dof_17 + q_acc_1_18*src_dof_18 + q_acc_1_19*src_dof_19 + q_acc_1_2*src_dof_2 + q_acc_1_20*src_dof_20 + q_acc_1_21*src_dof_21 + q_acc_1_22*src_dof_22 + q_acc_1_23*src_dof_23 + q_acc_1_24*src_dof_24 + q_acc_1_25*src_dof_25 + q_acc_1_26*src_dof_26 + q_acc_1_27*src_dof_27 + q_acc_1_28*src_dof_28 + q_acc_1_29*src_dof_29 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const real_t elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_10*src_dof_10 + q_acc_2_11*src_dof_11 + q_acc_2_12*src_dof_12 + q_acc_2_13*src_dof_13 + q_acc_2_14*src_dof_14 + q_acc_2_15*src_dof_15 + q_acc_2_16*src_dof_16 + q_acc_2_17*src_dof_17 + q_acc_2_18*src_dof_18 + q_acc_2_19*src_dof_19 + q_acc_2_2*src_dof_2 + q_acc_2_20*src_dof_20 + q_acc_2_21*src_dof_21 + q_acc_2_22*src_dof_22 + q_acc_2_23*src_dof_23 + q_acc_2_24*src_dof_24 + q_acc_2_25*src_dof_25 + q_acc_2_26*src_dof_26 + q_acc_2_27*src_dof_27 + q_acc_2_28*src_dof_28 + q_acc_2_29*src_dof_29 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const real_t elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_10*src_dof_10 + q_acc_3_11*src_dof_11 + q_acc_3_12*src_dof_12 + q_acc_3_13*src_dof_13 + q_acc_3_14*src_dof_14 + q_acc_3_15*src_dof_15 + q_acc_3_16*src_dof_16 + q_acc_3_17*src_dof_17 + q_acc_3_18*src_dof_18 + q_acc_3_19*src_dof_19 + q_acc_3_2*src_dof_2 + q_acc_3_20*src_dof_20 + q_acc_3_21*src_dof_21 + q_acc_3_22*src_dof_22 + q_acc_3_23*src_dof_23 + q_acc_3_24*src_dof_24 + q_acc_3_25*src_dof_25 + q_acc_3_26*src_dof_26 + q_acc_3_27*src_dof_27 + q_acc_3_28*src_dof_28 + q_acc_3_29*src_dof_29 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             }
          }
       }
       const real_t tmp_coords_jac_0_WHITE_DOWN = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t tmp_coords_jac_1_WHITE_DOWN = tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t tmp_coords_jac_2_WHITE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t tmp_coords_jac_3_WHITE_DOWN = tmp_coords_jac_1_WHITE_DOWN + tmp_coords_jac_2_WHITE_DOWN;
       const real_t tmp_coords_jac_4_WHITE_DOWN = tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t tmp_coords_jac_5_WHITE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t tmp_coords_jac_6_WHITE_DOWN = tmp_coords_jac_4_WHITE_DOWN + tmp_coords_jac_5_WHITE_DOWN;
       const real_t tmp_coords_jac_7_WHITE_DOWN = tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2);
       const real_t tmp_coords_jac_8_WHITE_DOWN = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2);
       const real_t tmp_coords_jac_9_WHITE_DOWN = tmp_coords_jac_7_WHITE_DOWN + tmp_coords_jac_8_WHITE_DOWN;
       const real_t tmp_coords_jac_10_WHITE_DOWN = tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0);
       const real_t tmp_coords_jac_11_WHITE_DOWN = tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1);
       const real_t tmp_coords_jac_12_WHITE_DOWN = tmp_coords_jac_0_WHITE_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2);
       const real_t p_affine_const_0_0_WHITE_DOWN = tmp_coords_jac_3_WHITE_DOWN;
       const real_t p_affine_const_0_1_WHITE_DOWN = tmp_coords_jac_6_WHITE_DOWN;
       const real_t p_affine_const_0_2_WHITE_DOWN = tmp_coords_jac_9_WHITE_DOWN;
       const real_t p_affine_const_1_0_WHITE_DOWN = tmp_coords_jac_10_WHITE_DOWN + tmp_coords_jac_2_WHITE_DOWN;
       const real_t p_affine_const_1_1_WHITE_DOWN = tmp_coords_jac_11_WHITE_DOWN + tmp_coords_jac_5_WHITE_DOWN;
       const real_t p_affine_const_1_2_WHITE_DOWN = tmp_coords_jac_12_WHITE_DOWN + tmp_coords_jac_8_WHITE_DOWN;
       const real_t p_affine_const_2_0_WHITE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_10_WHITE_DOWN + tmp_coords_jac_1_WHITE_DOWN;
       const real_t p_affine_const_2_1_WHITE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_11_WHITE_DOWN + tmp_coords_jac_4_WHITE_DOWN;
       const real_t p_affine_const_2_2_WHITE_DOWN = macro_vertex_coord_id_0comp2 + tmp_coords_jac_12_WHITE_DOWN + tmp_coords_jac_7_WHITE_DOWN;
       const real_t p_affine_const_3_0_WHITE_DOWN = tmp_coords_jac_10_WHITE_DOWN + tmp_coords_jac_3_WHITE_DOWN;
       const real_t p_affine_const_3_1_WHITE_DOWN = tmp_coords_jac_11_WHITE_DOWN + tmp_coords_jac_6_WHITE_DOWN;
       const real_t p_affine_const_3_2_WHITE_DOWN = tmp_coords_jac_12_WHITE_DOWN + tmp_coords_jac_9_WHITE_DOWN;
       const real_t jac_affine_0_0_WHITE_DOWN = -p_affine_const_0_0_WHITE_DOWN + p_affine_const_1_0_WHITE_DOWN;
       const real_t jac_affine_0_1_WHITE_DOWN = -p_affine_const_0_0_WHITE_DOWN + p_affine_const_2_0_WHITE_DOWN;
       const real_t jac_affine_0_2_WHITE_DOWN = -p_affine_const_0_0_WHITE_DOWN + p_affine_const_3_0_WHITE_DOWN;
       const real_t jac_affine_1_0_WHITE_DOWN = -p_affine_const_0_1_WHITE_DOWN + p_affine_const_1_1_WHITE_DOWN;
       const real_t jac_affine_1_1_WHITE_DOWN = -p_affine_const_0_1_WHITE_DOWN + p_affine_const_2_1_WHITE_DOWN;
       const real_t tmp_coords_jac_17_WHITE_DOWN = jac_affine_0_2_WHITE_DOWN*jac_affine_1_1_WHITE_DOWN;
       const real_t jac_affine_1_2_WHITE_DOWN = -p_affine_const_0_1_WHITE_DOWN + p_affine_const_3_1_WHITE_DOWN;
       const real_t tmp_coords_jac_15_WHITE_DOWN = jac_affine_0_1_WHITE_DOWN*jac_affine_1_2_WHITE_DOWN;
       const real_t jac_affine_2_0_WHITE_DOWN = -p_affine_const_0_2_WHITE_DOWN + p_affine_const_1_2_WHITE_DOWN;
       const real_t jac_affine_2_1_WHITE_DOWN = -p_affine_const_0_2_WHITE_DOWN + p_affine_const_2_2_WHITE_DOWN;
       const real_t tmp_coords_jac_14_WHITE_DOWN = jac_affine_1_2_WHITE_DOWN*jac_affine_2_1_WHITE_DOWN;
       const real_t jac_affine_2_2_WHITE_DOWN = -p_affine_const_0_2_WHITE_DOWN + p_affine_const_3_2_WHITE_DOWN;
       const real_t tmp_coords_jac_13_WHITE_DOWN = jac_affine_1_1_WHITE_DOWN*jac_affine_2_2_WHITE_DOWN;
       const real_t tmp_coords_jac_16_WHITE_DOWN = jac_affine_0_1_WHITE_DOWN*jac_affine_2_2_WHITE_DOWN;
       const real_t tmp_coords_jac_18_WHITE_DOWN = jac_affine_0_0_WHITE_DOWN*tmp_coords_jac_13_WHITE_DOWN - jac_affine_0_0_WHITE_DOWN*tmp_coords_jac_14_WHITE_DOWN + jac_affine_0_2_WHITE_DOWN*jac_affine_1_0_WHITE_DOWN*jac_affine_2_1_WHITE_DOWN - jac_affine_1_0_WHITE_DOWN*tmp_coords_jac_16_WHITE_DOWN + jac_affine_2_0_WHITE_DOWN*tmp_coords_jac_15_WHITE_DOWN - jac_affine_2_0_WHITE_DOWN*tmp_coords_jac_17_WHITE_DOWN;
       const real_t tmp_coords_jac_19_WHITE_DOWN = 1.0 / (tmp_coords_jac_18_WHITE_DOWN);
       const real_t jac_affine_inv_0_0_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(tmp_coords_jac_13_WHITE_DOWN - tmp_coords_jac_14_WHITE_DOWN);
       const real_t jac_affine_inv_0_1_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(jac_affine_0_2_WHITE_DOWN*jac_affine_2_1_WHITE_DOWN - tmp_coords_jac_16_WHITE_DOWN);
       const real_t jac_affine_inv_0_2_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(tmp_coords_jac_15_WHITE_DOWN - tmp_coords_jac_17_WHITE_DOWN);
       const real_t jac_affine_inv_1_0_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(-jac_affine_1_0_WHITE_DOWN*jac_affine_2_2_WHITE_DOWN + jac_affine_1_2_WHITE_DOWN*jac_affine_2_0_WHITE_DOWN);
       const real_t jac_affine_inv_1_1_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(jac_affine_0_0_WHITE_DOWN*jac_affine_2_2_WHITE_DOWN - jac_affine_0_2_WHITE_DOWN*jac_affine_2_0_WHITE_DOWN);
       const real_t jac_affine_inv_1_2_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(-jac_affine_0_0_WHITE_DOWN*jac_affine_1_2_WHITE_DOWN + jac_affine_0_2_WHITE_DOWN*jac_affine_1_0_WHITE_DOWN);
       const real_t jac_affine_inv_2_0_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(jac_affine_1_0_WHITE_DOWN*jac_affine_2_1_WHITE_DOWN - jac_affine_1_1_WHITE_DOWN*jac_affine_2_0_WHITE_DOWN);
       const real_t jac_affine_inv_2_1_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(-jac_affine_0_0_WHITE_DOWN*jac_affine_2_1_WHITE_DOWN + jac_affine_0_1_WHITE_DOWN*jac_affine_2_0_WHITE_DOWN);
       const real_t jac_affine_inv_2_2_WHITE_DOWN = tmp_coords_jac_19_WHITE_DOWN*(jac_affine_0_0_WHITE_DOWN*jac_affine_1_1_WHITE_DOWN - jac_affine_0_1_WHITE_DOWN*jac_affine_1_0_WHITE_DOWN);
       const real_t abs_det_jac_affine_WHITE_DOWN = abs(tmp_coords_jac_18_WHITE_DOWN);
       {
          /* CellType.WHITE_DOWN */
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_0_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_3_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_3_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_3_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_10 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_11 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_12 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_13 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_14 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_15 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]);
                const __m256d src_dof_16 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_17 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_18 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_19 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_20 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_21 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_22 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_23 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_24 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_25 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]);
                const __m256d src_dof_26 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_27 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_28 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_29 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d rho_dof_0 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_1 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_2 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_3 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                const __m256d tmp_qloop_13 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_1);
                const __m256d tmp_qloop_14 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_2);
                const __m256d tmp_qloop_15 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_3);
                const __m256d tmp_qloop_16 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))));
                const __m256d tmp_qloop_29 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))));
                const __m256d tmp_qloop_31 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN,jac_affine_inv_0_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN,jac_affine_inv_0_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN,jac_affine_inv_0_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN,jac_affine_inv_1_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN,jac_affine_inv_1_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN,jac_affine_inv_1_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN,jac_affine_inv_2_0_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN,jac_affine_inv_2_1_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN,jac_affine_inv_2_2_WHITE_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))));
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const __m256d tmp_qloop_0 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_1 = _mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_2 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_3 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_4 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_5 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_6 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_7 = _mm256_mul_pd(tmp_qloop_6,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_8 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_9 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_10 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_11 = _mm256_add_pd(tmp_qloop_10,tmp_qloop_9);
                   const __m256d tmp_qloop_12 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_qloop_1),tmp_qloop_11),tmp_qloop_3),tmp_qloop_5),tmp_qloop_7);
                   const __m256d tmp_qloop_17 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0));
                   const __m256d tmp_qloop_18 = _mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(rho_dof_1,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(rho_dof_2,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(rho_dof_3,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_mul_pd(rho_dof_0,tmp_qloop_17))),_mm256_set_pd(_data_q_w[q],_data_q_w[q],_data_q_w[q],_data_q_w[q])),_mm256_set_pd(abs_det_jac_affine_WHITE_DOWN,abs_det_jac_affine_WHITE_DOWN,abs_det_jac_affine_WHITE_DOWN,abs_det_jac_affine_WHITE_DOWN)),_mm256_set_pd(abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending));
                   const __m256d tmp_qloop_19 = _mm256_mul_pd(tmp_qloop_17,tmp_qloop_18);
                   const __m256d tmp_qloop_20 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_19);
                   const __m256d tmp_qloop_21 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_qloop_1);
                   const __m256d tmp_qloop_22 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_qloop_3);
                   const __m256d tmp_qloop_23 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_qloop_5);
                   const __m256d tmp_qloop_24 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_25 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_mul_pd(tmp_qloop_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_24,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_26 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_27 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_mul_pd(tmp_qloop_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_26,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_28 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0)));
                   const __m256d tmp_qloop_30 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_29);
                   const __m256d tmp_qloop_32 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_31);
                   const __m256d tmp_qloop_33 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_34 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_33);
                   const __m256d tmp_qloop_35 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_36 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_35);
                   const __m256d tmp_qloop_37 = _mm256_mul_pd(tmp_qloop_36,tmp_qloop_9);
                   const __m256d tmp_qloop_38 = _mm256_mul_pd(tmp_qloop_0,tmp_qloop_18);
                   const __m256d tmp_qloop_39 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_38);
                   const __m256d tmp_qloop_40 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_33);
                   const __m256d tmp_qloop_41 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_35);
                   const __m256d tmp_qloop_42 = _mm256_mul_pd(tmp_qloop_41,tmp_qloop_9);
                   const __m256d tmp_qloop_43 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_38);
                   const __m256d tmp_qloop_44 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_33);
                   const __m256d tmp_qloop_45 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_35);
                   const __m256d tmp_qloop_46 = _mm256_mul_pd(tmp_qloop_45,tmp_qloop_9);
                   const __m256d tmp_qloop_47 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_38);
                   const __m256d tmp_qloop_48 = _mm256_mul_pd(_mm256_mul_pd(tmp_qloop_18,tmp_qloop_2),tmp_qloop_8);
                   const __m256d tmp_qloop_49 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_50 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_49);
                   const __m256d tmp_qloop_51 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_49);
                   const __m256d tmp_qloop_52 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_49);
                   const __m256d q_tmp_0_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_20);
                   const __m256d q_tmp_0_1 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_21);
                   const __m256d q_tmp_0_2 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_22);
                   const __m256d q_tmp_0_3 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_23);
                   const __m256d q_tmp_0_4 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_20);
                   const __m256d q_tmp_0_5 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_9);
                   const __m256d q_tmp_0_6 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_7);
                   const __m256d q_tmp_0_7 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_25);
                   const __m256d q_tmp_0_8 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_27);
                   const __m256d q_tmp_0_9 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_28);
                   const __m256d q_tmp_0_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_30);
                   const __m256d q_tmp_0_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_30);
                   const __m256d q_tmp_0_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_30);
                   const __m256d q_tmp_0_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_30);
                   const __m256d q_tmp_0_14 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_30);
                   const __m256d q_tmp_0_15 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_9);
                   const __m256d q_tmp_0_16 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_7);
                   const __m256d q_tmp_0_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_30);
                   const __m256d q_tmp_0_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_30);
                   const __m256d q_tmp_0_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_30);
                   const __m256d q_tmp_0_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_32);
                   const __m256d q_tmp_0_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_32);
                   const __m256d q_tmp_0_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_32);
                   const __m256d q_tmp_0_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_32);
                   const __m256d q_tmp_0_24 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_32);
                   const __m256d q_tmp_0_25 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_9);
                   const __m256d q_tmp_0_26 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_7);
                   const __m256d q_tmp_0_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_32);
                   const __m256d q_tmp_0_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_32);
                   const __m256d q_tmp_0_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_32);
                   const __m256d q_tmp_1_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_34);
                   const __m256d q_tmp_1_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_34);
                   const __m256d q_tmp_1_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_34);
                   const __m256d q_tmp_1_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_34);
                   const __m256d q_tmp_1_4 = tmp_qloop_37;
                   const __m256d q_tmp_1_5 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_8);
                   const __m256d q_tmp_1_6 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_6);
                   const __m256d q_tmp_1_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_34);
                   const __m256d q_tmp_1_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_34);
                   const __m256d q_tmp_1_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_34);
                   const __m256d q_tmp_1_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_40);
                   const __m256d q_tmp_1_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_40);
                   const __m256d q_tmp_1_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_40);
                   const __m256d q_tmp_1_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_40);
                   const __m256d q_tmp_1_14 = tmp_qloop_42;
                   const __m256d q_tmp_1_15 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_8);
                   const __m256d q_tmp_1_16 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_6);
                   const __m256d q_tmp_1_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_40);
                   const __m256d q_tmp_1_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_40);
                   const __m256d q_tmp_1_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_40);
                   const __m256d q_tmp_1_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_44);
                   const __m256d q_tmp_1_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_44);
                   const __m256d q_tmp_1_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_44);
                   const __m256d q_tmp_1_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_44);
                   const __m256d q_tmp_1_24 = tmp_qloop_46;
                   const __m256d q_tmp_1_25 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_8);
                   const __m256d q_tmp_1_26 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_6);
                   const __m256d q_tmp_1_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_44);
                   const __m256d q_tmp_1_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_44);
                   const __m256d q_tmp_1_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_44);
                   const __m256d q_tmp_2_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_36);
                   const __m256d q_tmp_2_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_36);
                   const __m256d q_tmp_2_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_36);
                   const __m256d q_tmp_2_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_36);
                   const __m256d q_tmp_2_4 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_48);
                   const __m256d q_tmp_2_5 = tmp_qloop_37;
                   const __m256d q_tmp_2_6 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_34);
                   const __m256d q_tmp_2_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_36);
                   const __m256d q_tmp_2_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_36);
                   const __m256d q_tmp_2_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_36);
                   const __m256d q_tmp_2_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_41);
                   const __m256d q_tmp_2_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_41);
                   const __m256d q_tmp_2_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_41);
                   const __m256d q_tmp_2_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_41);
                   const __m256d q_tmp_2_14 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_48);
                   const __m256d q_tmp_2_15 = tmp_qloop_42;
                   const __m256d q_tmp_2_16 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_40);
                   const __m256d q_tmp_2_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_41);
                   const __m256d q_tmp_2_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_41);
                   const __m256d q_tmp_2_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_41);
                   const __m256d q_tmp_2_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_45);
                   const __m256d q_tmp_2_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_45);
                   const __m256d q_tmp_2_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_45);
                   const __m256d q_tmp_2_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_45);
                   const __m256d q_tmp_2_24 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_48);
                   const __m256d q_tmp_2_25 = tmp_qloop_46;
                   const __m256d q_tmp_2_26 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_44);
                   const __m256d q_tmp_2_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_45);
                   const __m256d q_tmp_2_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_45);
                   const __m256d q_tmp_2_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_45);
                   const __m256d q_tmp_3_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_50);
                   const __m256d q_tmp_3_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_50);
                   const __m256d q_tmp_3_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_50);
                   const __m256d q_tmp_3_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_50);
                   const __m256d q_tmp_3_4 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_36);
                   const __m256d q_tmp_3_5 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_34);
                   const __m256d q_tmp_3_6 = tmp_qloop_37;
                   const __m256d q_tmp_3_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_50);
                   const __m256d q_tmp_3_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_50);
                   const __m256d q_tmp_3_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_50);
                   const __m256d q_tmp_3_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_51);
                   const __m256d q_tmp_3_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_51);
                   const __m256d q_tmp_3_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_51);
                   const __m256d q_tmp_3_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_51);
                   const __m256d q_tmp_3_14 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_41);
                   const __m256d q_tmp_3_15 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_40);
                   const __m256d q_tmp_3_16 = tmp_qloop_42;
                   const __m256d q_tmp_3_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_51);
                   const __m256d q_tmp_3_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_51);
                   const __m256d q_tmp_3_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_51);
                   const __m256d q_tmp_3_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_52);
                   const __m256d q_tmp_3_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_52);
                   const __m256d q_tmp_3_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_52);
                   const __m256d q_tmp_3_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_52);
                   const __m256d q_tmp_3_24 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_45);
                   const __m256d q_tmp_3_25 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_44);
                   const __m256d q_tmp_3_26 = tmp_qloop_46;
                   const __m256d q_tmp_3_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_52);
                   const __m256d q_tmp_3_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_52);
                   const __m256d q_tmp_3_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_52);
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,q_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,q_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,q_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,q_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,q_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,q_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,q_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,q_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,q_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,q_tmp_0_9);
                   q_acc_0_10 = _mm256_add_pd(q_acc_0_10,q_tmp_0_10);
                   q_acc_0_11 = _mm256_add_pd(q_acc_0_11,q_tmp_0_11);
                   q_acc_0_12 = _mm256_add_pd(q_acc_0_12,q_tmp_0_12);
                   q_acc_0_13 = _mm256_add_pd(q_acc_0_13,q_tmp_0_13);
                   q_acc_0_14 = _mm256_add_pd(q_acc_0_14,q_tmp_0_14);
                   q_acc_0_15 = _mm256_add_pd(q_acc_0_15,q_tmp_0_15);
                   q_acc_0_16 = _mm256_add_pd(q_acc_0_16,q_tmp_0_16);
                   q_acc_0_17 = _mm256_add_pd(q_acc_0_17,q_tmp_0_17);
                   q_acc_0_18 = _mm256_add_pd(q_acc_0_18,q_tmp_0_18);
                   q_acc_0_19 = _mm256_add_pd(q_acc_0_19,q_tmp_0_19);
                   q_acc_0_20 = _mm256_add_pd(q_acc_0_20,q_tmp_0_20);
                   q_acc_0_21 = _mm256_add_pd(q_acc_0_21,q_tmp_0_21);
                   q_acc_0_22 = _mm256_add_pd(q_acc_0_22,q_tmp_0_22);
                   q_acc_0_23 = _mm256_add_pd(q_acc_0_23,q_tmp_0_23);
                   q_acc_0_24 = _mm256_add_pd(q_acc_0_24,q_tmp_0_24);
                   q_acc_0_25 = _mm256_add_pd(q_acc_0_25,q_tmp_0_25);
                   q_acc_0_26 = _mm256_add_pd(q_acc_0_26,q_tmp_0_26);
                   q_acc_0_27 = _mm256_add_pd(q_acc_0_27,q_tmp_0_27);
                   q_acc_0_28 = _mm256_add_pd(q_acc_0_28,q_tmp_0_28);
                   q_acc_0_29 = _mm256_add_pd(q_acc_0_29,q_tmp_0_29);
                   q_acc_1_0 = _mm256_add_pd(q_acc_1_0,q_tmp_1_0);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,q_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,q_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,q_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,q_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,q_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,q_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,q_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,q_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,q_tmp_1_9);
                   q_acc_1_10 = _mm256_add_pd(q_acc_1_10,q_tmp_1_10);
                   q_acc_1_11 = _mm256_add_pd(q_acc_1_11,q_tmp_1_11);
                   q_acc_1_12 = _mm256_add_pd(q_acc_1_12,q_tmp_1_12);
                   q_acc_1_13 = _mm256_add_pd(q_acc_1_13,q_tmp_1_13);
                   q_acc_1_14 = _mm256_add_pd(q_acc_1_14,q_tmp_1_14);
                   q_acc_1_15 = _mm256_add_pd(q_acc_1_15,q_tmp_1_15);
                   q_acc_1_16 = _mm256_add_pd(q_acc_1_16,q_tmp_1_16);
                   q_acc_1_17 = _mm256_add_pd(q_acc_1_17,q_tmp_1_17);
                   q_acc_1_18 = _mm256_add_pd(q_acc_1_18,q_tmp_1_18);
                   q_acc_1_19 = _mm256_add_pd(q_acc_1_19,q_tmp_1_19);
                   q_acc_1_20 = _mm256_add_pd(q_acc_1_20,q_tmp_1_20);
                   q_acc_1_21 = _mm256_add_pd(q_acc_1_21,q_tmp_1_21);
                   q_acc_1_22 = _mm256_add_pd(q_acc_1_22,q_tmp_1_22);
                   q_acc_1_23 = _mm256_add_pd(q_acc_1_23,q_tmp_1_23);
                   q_acc_1_24 = _mm256_add_pd(q_acc_1_24,q_tmp_1_24);
                   q_acc_1_25 = _mm256_add_pd(q_acc_1_25,q_tmp_1_25);
                   q_acc_1_26 = _mm256_add_pd(q_acc_1_26,q_tmp_1_26);
                   q_acc_1_27 = _mm256_add_pd(q_acc_1_27,q_tmp_1_27);
                   q_acc_1_28 = _mm256_add_pd(q_acc_1_28,q_tmp_1_28);
                   q_acc_1_29 = _mm256_add_pd(q_acc_1_29,q_tmp_1_29);
                   q_acc_2_0 = _mm256_add_pd(q_acc_2_0,q_tmp_2_0);
                   q_acc_2_1 = _mm256_add_pd(q_acc_2_1,q_tmp_2_1);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,q_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,q_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,q_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,q_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,q_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,q_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,q_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,q_tmp_2_9);
                   q_acc_2_10 = _mm256_add_pd(q_acc_2_10,q_tmp_2_10);
                   q_acc_2_11 = _mm256_add_pd(q_acc_2_11,q_tmp_2_11);
                   q_acc_2_12 = _mm256_add_pd(q_acc_2_12,q_tmp_2_12);
                   q_acc_2_13 = _mm256_add_pd(q_acc_2_13,q_tmp_2_13);
                   q_acc_2_14 = _mm256_add_pd(q_acc_2_14,q_tmp_2_14);
                   q_acc_2_15 = _mm256_add_pd(q_acc_2_15,q_tmp_2_15);
                   q_acc_2_16 = _mm256_add_pd(q_acc_2_16,q_tmp_2_16);
                   q_acc_2_17 = _mm256_add_pd(q_acc_2_17,q_tmp_2_17);
                   q_acc_2_18 = _mm256_add_pd(q_acc_2_18,q_tmp_2_18);
                   q_acc_2_19 = _mm256_add_pd(q_acc_2_19,q_tmp_2_19);
                   q_acc_2_20 = _mm256_add_pd(q_acc_2_20,q_tmp_2_20);
                   q_acc_2_21 = _mm256_add_pd(q_acc_2_21,q_tmp_2_21);
                   q_acc_2_22 = _mm256_add_pd(q_acc_2_22,q_tmp_2_22);
                   q_acc_2_23 = _mm256_add_pd(q_acc_2_23,q_tmp_2_23);
                   q_acc_2_24 = _mm256_add_pd(q_acc_2_24,q_tmp_2_24);
                   q_acc_2_25 = _mm256_add_pd(q_acc_2_25,q_tmp_2_25);
                   q_acc_2_26 = _mm256_add_pd(q_acc_2_26,q_tmp_2_26);
                   q_acc_2_27 = _mm256_add_pd(q_acc_2_27,q_tmp_2_27);
                   q_acc_2_28 = _mm256_add_pd(q_acc_2_28,q_tmp_2_28);
                   q_acc_2_29 = _mm256_add_pd(q_acc_2_29,q_tmp_2_29);
                   q_acc_3_0 = _mm256_add_pd(q_acc_3_0,q_tmp_3_0);
                   q_acc_3_1 = _mm256_add_pd(q_acc_3_1,q_tmp_3_1);
                   q_acc_3_2 = _mm256_add_pd(q_acc_3_2,q_tmp_3_2);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,q_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,q_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,q_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,q_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,q_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,q_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,q_tmp_3_9);
                   q_acc_3_10 = _mm256_add_pd(q_acc_3_10,q_tmp_3_10);
                   q_acc_3_11 = _mm256_add_pd(q_acc_3_11,q_tmp_3_11);
                   q_acc_3_12 = _mm256_add_pd(q_acc_3_12,q_tmp_3_12);
                   q_acc_3_13 = _mm256_add_pd(q_acc_3_13,q_tmp_3_13);
                   q_acc_3_14 = _mm256_add_pd(q_acc_3_14,q_tmp_3_14);
                   q_acc_3_15 = _mm256_add_pd(q_acc_3_15,q_tmp_3_15);
                   q_acc_3_16 = _mm256_add_pd(q_acc_3_16,q_tmp_3_16);
                   q_acc_3_17 = _mm256_add_pd(q_acc_3_17,q_tmp_3_17);
                   q_acc_3_18 = _mm256_add_pd(q_acc_3_18,q_tmp_3_18);
                   q_acc_3_19 = _mm256_add_pd(q_acc_3_19,q_tmp_3_19);
                   q_acc_3_20 = _mm256_add_pd(q_acc_3_20,q_tmp_3_20);
                   q_acc_3_21 = _mm256_add_pd(q_acc_3_21,q_tmp_3_21);
                   q_acc_3_22 = _mm256_add_pd(q_acc_3_22,q_tmp_3_22);
                   q_acc_3_23 = _mm256_add_pd(q_acc_3_23,q_tmp_3_23);
                   q_acc_3_24 = _mm256_add_pd(q_acc_3_24,q_tmp_3_24);
                   q_acc_3_25 = _mm256_add_pd(q_acc_3_25,q_tmp_3_25);
                   q_acc_3_26 = _mm256_add_pd(q_acc_3_26,q_tmp_3_26);
                   q_acc_3_27 = _mm256_add_pd(q_acc_3_27,q_tmp_3_27);
                   q_acc_3_28 = _mm256_add_pd(q_acc_3_28,q_tmp_3_28);
                   q_acc_3_29 = _mm256_add_pd(q_acc_3_29,q_tmp_3_29);
                }
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_10,src_dof_10)),_mm256_mul_pd(q_acc_0_11,src_dof_11)),_mm256_mul_pd(q_acc_0_12,src_dof_12)),_mm256_mul_pd(q_acc_0_13,src_dof_13)),_mm256_mul_pd(q_acc_0_14,src_dof_14)),_mm256_mul_pd(q_acc_0_15,src_dof_15)),_mm256_mul_pd(q_acc_0_16,src_dof_16)),_mm256_mul_pd(q_acc_0_17,src_dof_17)),_mm256_mul_pd(q_acc_0_18,src_dof_18)),_mm256_mul_pd(q_acc_0_19,src_dof_19)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_20,src_dof_20)),_mm256_mul_pd(q_acc_0_21,src_dof_21)),_mm256_mul_pd(q_acc_0_22,src_dof_22)),_mm256_mul_pd(q_acc_0_23,src_dof_23)),_mm256_mul_pd(q_acc_0_24,src_dof_24)),_mm256_mul_pd(q_acc_0_25,src_dof_25)),_mm256_mul_pd(q_acc_0_26,src_dof_26)),_mm256_mul_pd(q_acc_0_27,src_dof_27)),_mm256_mul_pd(q_acc_0_28,src_dof_28)),_mm256_mul_pd(q_acc_0_29,src_dof_29)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_10,src_dof_10)),_mm256_mul_pd(q_acc_1_11,src_dof_11)),_mm256_mul_pd(q_acc_1_12,src_dof_12)),_mm256_mul_pd(q_acc_1_13,src_dof_13)),_mm256_mul_pd(q_acc_1_14,src_dof_14)),_mm256_mul_pd(q_acc_1_15,src_dof_15)),_mm256_mul_pd(q_acc_1_16,src_dof_16)),_mm256_mul_pd(q_acc_1_17,src_dof_17)),_mm256_mul_pd(q_acc_1_18,src_dof_18)),_mm256_mul_pd(q_acc_1_19,src_dof_19)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_20,src_dof_20)),_mm256_mul_pd(q_acc_1_21,src_dof_21)),_mm256_mul_pd(q_acc_1_22,src_dof_22)),_mm256_mul_pd(q_acc_1_23,src_dof_23)),_mm256_mul_pd(q_acc_1_24,src_dof_24)),_mm256_mul_pd(q_acc_1_25,src_dof_25)),_mm256_mul_pd(q_acc_1_26,src_dof_26)),_mm256_mul_pd(q_acc_1_27,src_dof_27)),_mm256_mul_pd(q_acc_1_28,src_dof_28)),_mm256_mul_pd(q_acc_1_29,src_dof_29)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_10,src_dof_10)),_mm256_mul_pd(q_acc_2_11,src_dof_11)),_mm256_mul_pd(q_acc_2_12,src_dof_12)),_mm256_mul_pd(q_acc_2_13,src_dof_13)),_mm256_mul_pd(q_acc_2_14,src_dof_14)),_mm256_mul_pd(q_acc_2_15,src_dof_15)),_mm256_mul_pd(q_acc_2_16,src_dof_16)),_mm256_mul_pd(q_acc_2_17,src_dof_17)),_mm256_mul_pd(q_acc_2_18,src_dof_18)),_mm256_mul_pd(q_acc_2_19,src_dof_19)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_20,src_dof_20)),_mm256_mul_pd(q_acc_2_21,src_dof_21)),_mm256_mul_pd(q_acc_2_22,src_dof_22)),_mm256_mul_pd(q_acc_2_23,src_dof_23)),_mm256_mul_pd(q_acc_2_24,src_dof_24)),_mm256_mul_pd(q_acc_2_25,src_dof_25)),_mm256_mul_pd(q_acc_2_26,src_dof_26)),_mm256_mul_pd(q_acc_2_27,src_dof_27)),_mm256_mul_pd(q_acc_2_28,src_dof_28)),_mm256_mul_pd(q_acc_2_29,src_dof_29)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_10,src_dof_10)),_mm256_mul_pd(q_acc_3_11,src_dof_11)),_mm256_mul_pd(q_acc_3_12,src_dof_12)),_mm256_mul_pd(q_acc_3_13,src_dof_13)),_mm256_mul_pd(q_acc_3_14,src_dof_14)),_mm256_mul_pd(q_acc_3_15,src_dof_15)),_mm256_mul_pd(q_acc_3_16,src_dof_16)),_mm256_mul_pd(q_acc_3_17,src_dof_17)),_mm256_mul_pd(q_acc_3_18,src_dof_18)),_mm256_mul_pd(q_acc_3_19,src_dof_19)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_20,src_dof_20)),_mm256_mul_pd(q_acc_3_21,src_dof_21)),_mm256_mul_pd(q_acc_3_22,src_dof_22)),_mm256_mul_pd(q_acc_3_23,src_dof_23)),_mm256_mul_pd(q_acc_3_24,src_dof_24)),_mm256_mul_pd(q_acc_3_25,src_dof_25)),_mm256_mul_pd(q_acc_3_26,src_dof_26)),_mm256_mul_pd(q_acc_3_27,src_dof_27)),_mm256_mul_pd(q_acc_3_28,src_dof_28)),_mm256_mul_pd(q_acc_3_29,src_dof_29)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t src_dof_0 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_1 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_2 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_3 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_4 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_5 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                const real_t src_dof_6 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_7 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_8 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_9 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_10 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_11 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_12 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_13 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_14 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_15 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                const real_t src_dof_16 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_17 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_18 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_19 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_20 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_21 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_22 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_23 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_24 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_25 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                const real_t src_dof_26 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_27 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_28 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_29 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t rho_dof_0 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_1 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_2 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_3 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                real_t q_acc_0_0 = 0.0;
                real_t q_acc_0_1 = 0.0;
                real_t q_acc_0_2 = 0.0;
                real_t q_acc_0_3 = 0.0;
                real_t q_acc_0_4 = 0.0;
                real_t q_acc_0_5 = 0.0;
                real_t q_acc_0_6 = 0.0;
                real_t q_acc_0_7 = 0.0;
                real_t q_acc_0_8 = 0.0;
                real_t q_acc_0_9 = 0.0;
                real_t q_acc_0_10 = 0.0;
                real_t q_acc_0_11 = 0.0;
                real_t q_acc_0_12 = 0.0;
                real_t q_acc_0_13 = 0.0;
                real_t q_acc_0_14 = 0.0;
                real_t q_acc_0_15 = 0.0;
                real_t q_acc_0_16 = 0.0;
                real_t q_acc_0_17 = 0.0;
                real_t q_acc_0_18 = 0.0;
                real_t q_acc_0_19 = 0.0;
                real_t q_acc_0_20 = 0.0;
                real_t q_acc_0_21 = 0.0;
                real_t q_acc_0_22 = 0.0;
                real_t q_acc_0_23 = 0.0;
                real_t q_acc_0_24 = 0.0;
                real_t q_acc_0_25 = 0.0;
                real_t q_acc_0_26 = 0.0;
                real_t q_acc_0_27 = 0.0;
                real_t q_acc_0_28 = 0.0;
                real_t q_acc_0_29 = 0.0;
                real_t q_acc_1_0 = 0.0;
                real_t q_acc_1_1 = 0.0;
                real_t q_acc_1_2 = 0.0;
                real_t q_acc_1_3 = 0.0;
                real_t q_acc_1_4 = 0.0;
                real_t q_acc_1_5 = 0.0;
                real_t q_acc_1_6 = 0.0;
                real_t q_acc_1_7 = 0.0;
                real_t q_acc_1_8 = 0.0;
                real_t q_acc_1_9 = 0.0;
                real_t q_acc_1_10 = 0.0;
                real_t q_acc_1_11 = 0.0;
                real_t q_acc_1_12 = 0.0;
                real_t q_acc_1_13 = 0.0;
                real_t q_acc_1_14 = 0.0;
                real_t q_acc_1_15 = 0.0;
                real_t q_acc_1_16 = 0.0;
                real_t q_acc_1_17 = 0.0;
                real_t q_acc_1_18 = 0.0;
                real_t q_acc_1_19 = 0.0;
                real_t q_acc_1_20 = 0.0;
                real_t q_acc_1_21 = 0.0;
                real_t q_acc_1_22 = 0.0;
                real_t q_acc_1_23 = 0.0;
                real_t q_acc_1_24 = 0.0;
                real_t q_acc_1_25 = 0.0;
                real_t q_acc_1_26 = 0.0;
                real_t q_acc_1_27 = 0.0;
                real_t q_acc_1_28 = 0.0;
                real_t q_acc_1_29 = 0.0;
                real_t q_acc_2_0 = 0.0;
                real_t q_acc_2_1 = 0.0;
                real_t q_acc_2_2 = 0.0;
                real_t q_acc_2_3 = 0.0;
                real_t q_acc_2_4 = 0.0;
                real_t q_acc_2_5 = 0.0;
                real_t q_acc_2_6 = 0.0;
                real_t q_acc_2_7 = 0.0;
                real_t q_acc_2_8 = 0.0;
                real_t q_acc_2_9 = 0.0;
                real_t q_acc_2_10 = 0.0;
                real_t q_acc_2_11 = 0.0;
                real_t q_acc_2_12 = 0.0;
                real_t q_acc_2_13 = 0.0;
                real_t q_acc_2_14 = 0.0;
                real_t q_acc_2_15 = 0.0;
                real_t q_acc_2_16 = 0.0;
                real_t q_acc_2_17 = 0.0;
                real_t q_acc_2_18 = 0.0;
                real_t q_acc_2_19 = 0.0;
                real_t q_acc_2_20 = 0.0;
                real_t q_acc_2_21 = 0.0;
                real_t q_acc_2_22 = 0.0;
                real_t q_acc_2_23 = 0.0;
                real_t q_acc_2_24 = 0.0;
                real_t q_acc_2_25 = 0.0;
                real_t q_acc_2_26 = 0.0;
                real_t q_acc_2_27 = 0.0;
                real_t q_acc_2_28 = 0.0;
                real_t q_acc_2_29 = 0.0;
                real_t q_acc_3_0 = 0.0;
                real_t q_acc_3_1 = 0.0;
                real_t q_acc_3_2 = 0.0;
                real_t q_acc_3_3 = 0.0;
                real_t q_acc_3_4 = 0.0;
                real_t q_acc_3_5 = 0.0;
                real_t q_acc_3_6 = 0.0;
                real_t q_acc_3_7 = 0.0;
                real_t q_acc_3_8 = 0.0;
                real_t q_acc_3_9 = 0.0;
                real_t q_acc_3_10 = 0.0;
                real_t q_acc_3_11 = 0.0;
                real_t q_acc_3_12 = 0.0;
                real_t q_acc_3_13 = 0.0;
                real_t q_acc_3_14 = 0.0;
                real_t q_acc_3_15 = 0.0;
                real_t q_acc_3_16 = 0.0;
                real_t q_acc_3_17 = 0.0;
                real_t q_acc_3_18 = 0.0;
                real_t q_acc_3_19 = 0.0;
                real_t q_acc_3_20 = 0.0;
                real_t q_acc_3_21 = 0.0;
                real_t q_acc_3_22 = 0.0;
                real_t q_acc_3_23 = 0.0;
                real_t q_acc_3_24 = 0.0;
                real_t q_acc_3_25 = 0.0;
                real_t q_acc_3_26 = 0.0;
                real_t q_acc_3_27 = 0.0;
                real_t q_acc_3_28 = 0.0;
                real_t q_acc_3_29 = 0.0;
                const real_t tmp_qloop_13 = -rho_dof_0 + rho_dof_1;
                const real_t tmp_qloop_14 = -rho_dof_0 + rho_dof_2;
                const real_t tmp_qloop_15 = -rho_dof_0 + rho_dof_3;
                const real_t tmp_qloop_16 = tmp_qloop_13*(jac_affine_inv_0_0_WHITE_DOWN*jac_blending_inv_0_0 + jac_affine_inv_0_1_WHITE_DOWN*jac_blending_inv_1_0 + jac_affine_inv_0_2_WHITE_DOWN*jac_blending_inv_2_0) + tmp_qloop_14*(jac_affine_inv_1_0_WHITE_DOWN*jac_blending_inv_0_0 + jac_affine_inv_1_1_WHITE_DOWN*jac_blending_inv_1_0 + jac_affine_inv_1_2_WHITE_DOWN*jac_blending_inv_2_0) + tmp_qloop_15*(jac_affine_inv_2_0_WHITE_DOWN*jac_blending_inv_0_0 + jac_affine_inv_2_1_WHITE_DOWN*jac_blending_inv_1_0 + jac_affine_inv_2_2_WHITE_DOWN*jac_blending_inv_2_0);
                const real_t tmp_qloop_29 = tmp_qloop_13*(jac_affine_inv_0_0_WHITE_DOWN*jac_blending_inv_0_1 + jac_affine_inv_0_1_WHITE_DOWN*jac_blending_inv_1_1 + jac_affine_inv_0_2_WHITE_DOWN*jac_blending_inv_2_1) + tmp_qloop_14*(jac_affine_inv_1_0_WHITE_DOWN*jac_blending_inv_0_1 + jac_affine_inv_1_1_WHITE_DOWN*jac_blending_inv_1_1 + jac_affine_inv_1_2_WHITE_DOWN*jac_blending_inv_2_1) + tmp_qloop_15*(jac_affine_inv_2_0_WHITE_DOWN*jac_blending_inv_0_1 + jac_affine_inv_2_1_WHITE_DOWN*jac_blending_inv_1_1 + jac_affine_inv_2_2_WHITE_DOWN*jac_blending_inv_2_1);
                const real_t tmp_qloop_31 = tmp_qloop_13*(jac_affine_inv_0_0_WHITE_DOWN*jac_blending_inv_0_2 + jac_affine_inv_0_1_WHITE_DOWN*jac_blending_inv_1_2 + jac_affine_inv_0_2_WHITE_DOWN*jac_blending_inv_2_2) + tmp_qloop_14*(jac_affine_inv_1_0_WHITE_DOWN*jac_blending_inv_0_2 + jac_affine_inv_1_1_WHITE_DOWN*jac_blending_inv_1_2 + jac_affine_inv_1_2_WHITE_DOWN*jac_blending_inv_2_2) + tmp_qloop_15*(jac_affine_inv_2_0_WHITE_DOWN*jac_blending_inv_0_2 + jac_affine_inv_2_1_WHITE_DOWN*jac_blending_inv_1_2 + jac_affine_inv_2_2_WHITE_DOWN*jac_blending_inv_2_2);
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const real_t tmp_qloop_0 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const real_t tmp_qloop_1 = tmp_qloop_0*2.0;
                   const real_t tmp_qloop_2 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const real_t tmp_qloop_3 = tmp_qloop_2*2.0;
                   const real_t tmp_qloop_4 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const real_t tmp_qloop_5 = tmp_qloop_4*2.0;
                   const real_t tmp_qloop_6 = 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_7 = tmp_qloop_6*_data_q_p_0[q];
                   const real_t tmp_qloop_8 = 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_9 = tmp_qloop_8*_data_q_p_0[q];
                   const real_t tmp_qloop_10 = tmp_qloop_8*_data_q_p_1[q];
                   const real_t tmp_qloop_11 = tmp_qloop_10 + tmp_qloop_9;
                   const real_t tmp_qloop_12 = tmp_qloop_1 + tmp_qloop_11 + tmp_qloop_3 + tmp_qloop_5 + tmp_qloop_7 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0;
                   const real_t tmp_qloop_17 = 1.0 - _data_q_p_0[q] - _data_q_p_1[q] - _data_q_p_2[q];
                   const real_t tmp_qloop_18 = abs_det_jac_affine_WHITE_DOWN*abs_det_jac_blending*1.0 / (rho_dof_0*tmp_qloop_17 + rho_dof_1*_data_q_p_0[q] + rho_dof_2*_data_q_p_1[q] + rho_dof_3*_data_q_p_2[q])*_data_q_w[q];
                   const real_t tmp_qloop_19 = tmp_qloop_17*tmp_qloop_18;
                   const real_t tmp_qloop_20 = tmp_qloop_16*tmp_qloop_19;
                   const real_t tmp_qloop_21 = tmp_qloop_1 - _data_q_p_0[q];
                   const real_t tmp_qloop_22 = tmp_qloop_3 - _data_q_p_1[q];
                   const real_t tmp_qloop_23 = tmp_qloop_5 - _data_q_p_2[q];
                   const real_t tmp_qloop_24 = tmp_qloop_4*4.0;
                   const real_t tmp_qloop_25 = -tmp_qloop_11 - tmp_qloop_24 + 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_26 = tmp_qloop_2*4.0;
                   const real_t tmp_qloop_27 = -tmp_qloop_10 - tmp_qloop_26 - tmp_qloop_7 + 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_28 = tmp_qloop_0*-4.0 - tmp_qloop_7 - tmp_qloop_9 + 4.0*_data_q_p_0[q];
                   const real_t tmp_qloop_30 = tmp_qloop_19*tmp_qloop_29;
                   const real_t tmp_qloop_32 = tmp_qloop_19*tmp_qloop_31;
                   const real_t tmp_qloop_33 = tmp_qloop_18*_data_q_p_0[q];
                   const real_t tmp_qloop_34 = tmp_qloop_16*tmp_qloop_33;
                   const real_t tmp_qloop_35 = tmp_qloop_18*_data_q_p_1[q];
                   const real_t tmp_qloop_36 = tmp_qloop_16*tmp_qloop_35;
                   const real_t tmp_qloop_37 = tmp_qloop_36*tmp_qloop_9;
                   const real_t tmp_qloop_38 = tmp_qloop_0*tmp_qloop_18;
                   const real_t tmp_qloop_39 = tmp_qloop_16*tmp_qloop_38;
                   const real_t tmp_qloop_40 = tmp_qloop_29*tmp_qloop_33;
                   const real_t tmp_qloop_41 = tmp_qloop_29*tmp_qloop_35;
                   const real_t tmp_qloop_42 = tmp_qloop_41*tmp_qloop_9;
                   const real_t tmp_qloop_43 = tmp_qloop_29*tmp_qloop_38;
                   const real_t tmp_qloop_44 = tmp_qloop_31*tmp_qloop_33;
                   const real_t tmp_qloop_45 = tmp_qloop_31*tmp_qloop_35;
                   const real_t tmp_qloop_46 = tmp_qloop_45*tmp_qloop_9;
                   const real_t tmp_qloop_47 = tmp_qloop_31*tmp_qloop_38;
                   const real_t tmp_qloop_48 = tmp_qloop_18*tmp_qloop_2*tmp_qloop_8;
                   const real_t tmp_qloop_49 = tmp_qloop_18*_data_q_p_2[q];
                   const real_t tmp_qloop_50 = tmp_qloop_16*tmp_qloop_49;
                   const real_t tmp_qloop_51 = tmp_qloop_29*tmp_qloop_49;
                   const real_t tmp_qloop_52 = tmp_qloop_31*tmp_qloop_49;
                   const real_t q_tmp_0_0 = tmp_qloop_12*tmp_qloop_20;
                   const real_t q_tmp_0_1 = tmp_qloop_20*tmp_qloop_21;
                   const real_t q_tmp_0_2 = tmp_qloop_20*tmp_qloop_22;
                   const real_t q_tmp_0_3 = tmp_qloop_20*tmp_qloop_23;
                   const real_t q_tmp_0_4 = tmp_qloop_10*tmp_qloop_20;
                   const real_t q_tmp_0_5 = tmp_qloop_20*tmp_qloop_9;
                   const real_t q_tmp_0_6 = tmp_qloop_20*tmp_qloop_7;
                   const real_t q_tmp_0_7 = tmp_qloop_20*tmp_qloop_25;
                   const real_t q_tmp_0_8 = tmp_qloop_20*tmp_qloop_27;
                   const real_t q_tmp_0_9 = tmp_qloop_20*tmp_qloop_28;
                   const real_t q_tmp_0_10 = tmp_qloop_12*tmp_qloop_30;
                   const real_t q_tmp_0_11 = tmp_qloop_21*tmp_qloop_30;
                   const real_t q_tmp_0_12 = tmp_qloop_22*tmp_qloop_30;
                   const real_t q_tmp_0_13 = tmp_qloop_23*tmp_qloop_30;
                   const real_t q_tmp_0_14 = tmp_qloop_10*tmp_qloop_30;
                   const real_t q_tmp_0_15 = tmp_qloop_30*tmp_qloop_9;
                   const real_t q_tmp_0_16 = tmp_qloop_30*tmp_qloop_7;
                   const real_t q_tmp_0_17 = tmp_qloop_25*tmp_qloop_30;
                   const real_t q_tmp_0_18 = tmp_qloop_27*tmp_qloop_30;
                   const real_t q_tmp_0_19 = tmp_qloop_28*tmp_qloop_30;
                   const real_t q_tmp_0_20 = tmp_qloop_12*tmp_qloop_32;
                   const real_t q_tmp_0_21 = tmp_qloop_21*tmp_qloop_32;
                   const real_t q_tmp_0_22 = tmp_qloop_22*tmp_qloop_32;
                   const real_t q_tmp_0_23 = tmp_qloop_23*tmp_qloop_32;
                   const real_t q_tmp_0_24 = tmp_qloop_10*tmp_qloop_32;
                   const real_t q_tmp_0_25 = tmp_qloop_32*tmp_qloop_9;
                   const real_t q_tmp_0_26 = tmp_qloop_32*tmp_qloop_7;
                   const real_t q_tmp_0_27 = tmp_qloop_25*tmp_qloop_32;
                   const real_t q_tmp_0_28 = tmp_qloop_27*tmp_qloop_32;
                   const real_t q_tmp_0_29 = tmp_qloop_28*tmp_qloop_32;
                   const real_t q_tmp_1_0 = tmp_qloop_12*tmp_qloop_34;
                   const real_t q_tmp_1_1 = tmp_qloop_21*tmp_qloop_34;
                   const real_t q_tmp_1_2 = tmp_qloop_22*tmp_qloop_34;
                   const real_t q_tmp_1_3 = tmp_qloop_23*tmp_qloop_34;
                   const real_t q_tmp_1_4 = tmp_qloop_37;
                   const real_t q_tmp_1_5 = tmp_qloop_39*tmp_qloop_8;
                   const real_t q_tmp_1_6 = tmp_qloop_39*tmp_qloop_6;
                   const real_t q_tmp_1_7 = tmp_qloop_25*tmp_qloop_34;
                   const real_t q_tmp_1_8 = tmp_qloop_27*tmp_qloop_34;
                   const real_t q_tmp_1_9 = tmp_qloop_28*tmp_qloop_34;
                   const real_t q_tmp_1_10 = tmp_qloop_12*tmp_qloop_40;
                   const real_t q_tmp_1_11 = tmp_qloop_21*tmp_qloop_40;
                   const real_t q_tmp_1_12 = tmp_qloop_22*tmp_qloop_40;
                   const real_t q_tmp_1_13 = tmp_qloop_23*tmp_qloop_40;
                   const real_t q_tmp_1_14 = tmp_qloop_42;
                   const real_t q_tmp_1_15 = tmp_qloop_43*tmp_qloop_8;
                   const real_t q_tmp_1_16 = tmp_qloop_43*tmp_qloop_6;
                   const real_t q_tmp_1_17 = tmp_qloop_25*tmp_qloop_40;
                   const real_t q_tmp_1_18 = tmp_qloop_27*tmp_qloop_40;
                   const real_t q_tmp_1_19 = tmp_qloop_28*tmp_qloop_40;
                   const real_t q_tmp_1_20 = tmp_qloop_12*tmp_qloop_44;
                   const real_t q_tmp_1_21 = tmp_qloop_21*tmp_qloop_44;
                   const real_t q_tmp_1_22 = tmp_qloop_22*tmp_qloop_44;
                   const real_t q_tmp_1_23 = tmp_qloop_23*tmp_qloop_44;
                   const real_t q_tmp_1_24 = tmp_qloop_46;
                   const real_t q_tmp_1_25 = tmp_qloop_47*tmp_qloop_8;
                   const real_t q_tmp_1_26 = tmp_qloop_47*tmp_qloop_6;
                   const real_t q_tmp_1_27 = tmp_qloop_25*tmp_qloop_44;
                   const real_t q_tmp_1_28 = tmp_qloop_27*tmp_qloop_44;
                   const real_t q_tmp_1_29 = tmp_qloop_28*tmp_qloop_44;
                   const real_t q_tmp_2_0 = tmp_qloop_12*tmp_qloop_36;
                   const real_t q_tmp_2_1 = tmp_qloop_21*tmp_qloop_36;
                   const real_t q_tmp_2_2 = tmp_qloop_22*tmp_qloop_36;
                   const real_t q_tmp_2_3 = tmp_qloop_23*tmp_qloop_36;
                   const real_t q_tmp_2_4 = tmp_qloop_16*tmp_qloop_48;
                   const real_t q_tmp_2_5 = tmp_qloop_37;
                   const real_t q_tmp_2_6 = tmp_qloop_26*tmp_qloop_34;
                   const real_t q_tmp_2_7 = tmp_qloop_25*tmp_qloop_36;
                   const real_t q_tmp_2_8 = tmp_qloop_27*tmp_qloop_36;
                   const real_t q_tmp_2_9 = tmp_qloop_28*tmp_qloop_36;
                   const real_t q_tmp_2_10 = tmp_qloop_12*tmp_qloop_41;
                   const real_t q_tmp_2_11 = tmp_qloop_21*tmp_qloop_41;
                   const real_t q_tmp_2_12 = tmp_qloop_22*tmp_qloop_41;
                   const real_t q_tmp_2_13 = tmp_qloop_23*tmp_qloop_41;
                   const real_t q_tmp_2_14 = tmp_qloop_29*tmp_qloop_48;
                   const real_t q_tmp_2_15 = tmp_qloop_42;
                   const real_t q_tmp_2_16 = tmp_qloop_26*tmp_qloop_40;
                   const real_t q_tmp_2_17 = tmp_qloop_25*tmp_qloop_41;
                   const real_t q_tmp_2_18 = tmp_qloop_27*tmp_qloop_41;
                   const real_t q_tmp_2_19 = tmp_qloop_28*tmp_qloop_41;
                   const real_t q_tmp_2_20 = tmp_qloop_12*tmp_qloop_45;
                   const real_t q_tmp_2_21 = tmp_qloop_21*tmp_qloop_45;
                   const real_t q_tmp_2_22 = tmp_qloop_22*tmp_qloop_45;
                   const real_t q_tmp_2_23 = tmp_qloop_23*tmp_qloop_45;
                   const real_t q_tmp_2_24 = tmp_qloop_31*tmp_qloop_48;
                   const real_t q_tmp_2_25 = tmp_qloop_46;
                   const real_t q_tmp_2_26 = tmp_qloop_26*tmp_qloop_44;
                   const real_t q_tmp_2_27 = tmp_qloop_25*tmp_qloop_45;
                   const real_t q_tmp_2_28 = tmp_qloop_27*tmp_qloop_45;
                   const real_t q_tmp_2_29 = tmp_qloop_28*tmp_qloop_45;
                   const real_t q_tmp_3_0 = tmp_qloop_12*tmp_qloop_50;
                   const real_t q_tmp_3_1 = tmp_qloop_21*tmp_qloop_50;
                   const real_t q_tmp_3_2 = tmp_qloop_22*tmp_qloop_50;
                   const real_t q_tmp_3_3 = tmp_qloop_23*tmp_qloop_50;
                   const real_t q_tmp_3_4 = tmp_qloop_24*tmp_qloop_36;
                   const real_t q_tmp_3_5 = tmp_qloop_24*tmp_qloop_34;
                   const real_t q_tmp_3_6 = tmp_qloop_37;
                   const real_t q_tmp_3_7 = tmp_qloop_25*tmp_qloop_50;
                   const real_t q_tmp_3_8 = tmp_qloop_27*tmp_qloop_50;
                   const real_t q_tmp_3_9 = tmp_qloop_28*tmp_qloop_50;
                   const real_t q_tmp_3_10 = tmp_qloop_12*tmp_qloop_51;
                   const real_t q_tmp_3_11 = tmp_qloop_21*tmp_qloop_51;
                   const real_t q_tmp_3_12 = tmp_qloop_22*tmp_qloop_51;
                   const real_t q_tmp_3_13 = tmp_qloop_23*tmp_qloop_51;
                   const real_t q_tmp_3_14 = tmp_qloop_24*tmp_qloop_41;
                   const real_t q_tmp_3_15 = tmp_qloop_24*tmp_qloop_40;
                   const real_t q_tmp_3_16 = tmp_qloop_42;
                   const real_t q_tmp_3_17 = tmp_qloop_25*tmp_qloop_51;
                   const real_t q_tmp_3_18 = tmp_qloop_27*tmp_qloop_51;
                   const real_t q_tmp_3_19 = tmp_qloop_28*tmp_qloop_51;
                   const real_t q_tmp_3_20 = tmp_qloop_12*tmp_qloop_52;
                   const real_t q_tmp_3_21 = tmp_qloop_21*tmp_qloop_52;
                   const real_t q_tmp_3_22 = tmp_qloop_22*tmp_qloop_52;
                   const real_t q_tmp_3_23 = tmp_qloop_23*tmp_qloop_52;
                   const real_t q_tmp_3_24 = tmp_qloop_24*tmp_qloop_45;
                   const real_t q_tmp_3_25 = tmp_qloop_24*tmp_qloop_44;
                   const real_t q_tmp_3_26 = tmp_qloop_46;
                   const real_t q_tmp_3_27 = tmp_qloop_25*tmp_qloop_52;
                   const real_t q_tmp_3_28 = tmp_qloop_27*tmp_qloop_52;
                   const real_t q_tmp_3_29 = tmp_qloop_28*tmp_qloop_52;
                   q_acc_0_0 = q_acc_0_0 + q_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + q_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + q_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + q_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + q_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + q_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + q_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + q_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + q_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + q_tmp_0_9;
                   q_acc_0_10 = q_acc_0_10 + q_tmp_0_10;
                   q_acc_0_11 = q_acc_0_11 + q_tmp_0_11;
                   q_acc_0_12 = q_acc_0_12 + q_tmp_0_12;
                   q_acc_0_13 = q_acc_0_13 + q_tmp_0_13;
                   q_acc_0_14 = q_acc_0_14 + q_tmp_0_14;
                   q_acc_0_15 = q_acc_0_15 + q_tmp_0_15;
                   q_acc_0_16 = q_acc_0_16 + q_tmp_0_16;
                   q_acc_0_17 = q_acc_0_17 + q_tmp_0_17;
                   q_acc_0_18 = q_acc_0_18 + q_tmp_0_18;
                   q_acc_0_19 = q_acc_0_19 + q_tmp_0_19;
                   q_acc_0_20 = q_acc_0_20 + q_tmp_0_20;
                   q_acc_0_21 = q_acc_0_21 + q_tmp_0_21;
                   q_acc_0_22 = q_acc_0_22 + q_tmp_0_22;
                   q_acc_0_23 = q_acc_0_23 + q_tmp_0_23;
                   q_acc_0_24 = q_acc_0_24 + q_tmp_0_24;
                   q_acc_0_25 = q_acc_0_25 + q_tmp_0_25;
                   q_acc_0_26 = q_acc_0_26 + q_tmp_0_26;
                   q_acc_0_27 = q_acc_0_27 + q_tmp_0_27;
                   q_acc_0_28 = q_acc_0_28 + q_tmp_0_28;
                   q_acc_0_29 = q_acc_0_29 + q_tmp_0_29;
                   q_acc_1_0 = q_acc_1_0 + q_tmp_1_0;
                   q_acc_1_1 = q_acc_1_1 + q_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + q_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + q_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + q_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + q_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + q_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + q_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + q_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + q_tmp_1_9;
                   q_acc_1_10 = q_acc_1_10 + q_tmp_1_10;
                   q_acc_1_11 = q_acc_1_11 + q_tmp_1_11;
                   q_acc_1_12 = q_acc_1_12 + q_tmp_1_12;
                   q_acc_1_13 = q_acc_1_13 + q_tmp_1_13;
                   q_acc_1_14 = q_acc_1_14 + q_tmp_1_14;
                   q_acc_1_15 = q_acc_1_15 + q_tmp_1_15;
                   q_acc_1_16 = q_acc_1_16 + q_tmp_1_16;
                   q_acc_1_17 = q_acc_1_17 + q_tmp_1_17;
                   q_acc_1_18 = q_acc_1_18 + q_tmp_1_18;
                   q_acc_1_19 = q_acc_1_19 + q_tmp_1_19;
                   q_acc_1_20 = q_acc_1_20 + q_tmp_1_20;
                   q_acc_1_21 = q_acc_1_21 + q_tmp_1_21;
                   q_acc_1_22 = q_acc_1_22 + q_tmp_1_22;
                   q_acc_1_23 = q_acc_1_23 + q_tmp_1_23;
                   q_acc_1_24 = q_acc_1_24 + q_tmp_1_24;
                   q_acc_1_25 = q_acc_1_25 + q_tmp_1_25;
                   q_acc_1_26 = q_acc_1_26 + q_tmp_1_26;
                   q_acc_1_27 = q_acc_1_27 + q_tmp_1_27;
                   q_acc_1_28 = q_acc_1_28 + q_tmp_1_28;
                   q_acc_1_29 = q_acc_1_29 + q_tmp_1_29;
                   q_acc_2_0 = q_acc_2_0 + q_tmp_2_0;
                   q_acc_2_1 = q_acc_2_1 + q_tmp_2_1;
                   q_acc_2_2 = q_acc_2_2 + q_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + q_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + q_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + q_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + q_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + q_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + q_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + q_tmp_2_9;
                   q_acc_2_10 = q_acc_2_10 + q_tmp_2_10;
                   q_acc_2_11 = q_acc_2_11 + q_tmp_2_11;
                   q_acc_2_12 = q_acc_2_12 + q_tmp_2_12;
                   q_acc_2_13 = q_acc_2_13 + q_tmp_2_13;
                   q_acc_2_14 = q_acc_2_14 + q_tmp_2_14;
                   q_acc_2_15 = q_acc_2_15 + q_tmp_2_15;
                   q_acc_2_16 = q_acc_2_16 + q_tmp_2_16;
                   q_acc_2_17 = q_acc_2_17 + q_tmp_2_17;
                   q_acc_2_18 = q_acc_2_18 + q_tmp_2_18;
                   q_acc_2_19 = q_acc_2_19 + q_tmp_2_19;
                   q_acc_2_20 = q_acc_2_20 + q_tmp_2_20;
                   q_acc_2_21 = q_acc_2_21 + q_tmp_2_21;
                   q_acc_2_22 = q_acc_2_22 + q_tmp_2_22;
                   q_acc_2_23 = q_acc_2_23 + q_tmp_2_23;
                   q_acc_2_24 = q_acc_2_24 + q_tmp_2_24;
                   q_acc_2_25 = q_acc_2_25 + q_tmp_2_25;
                   q_acc_2_26 = q_acc_2_26 + q_tmp_2_26;
                   q_acc_2_27 = q_acc_2_27 + q_tmp_2_27;
                   q_acc_2_28 = q_acc_2_28 + q_tmp_2_28;
                   q_acc_2_29 = q_acc_2_29 + q_tmp_2_29;
                   q_acc_3_0 = q_acc_3_0 + q_tmp_3_0;
                   q_acc_3_1 = q_acc_3_1 + q_tmp_3_1;
                   q_acc_3_2 = q_acc_3_2 + q_tmp_3_2;
                   q_acc_3_3 = q_acc_3_3 + q_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + q_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + q_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + q_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + q_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + q_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + q_tmp_3_9;
                   q_acc_3_10 = q_acc_3_10 + q_tmp_3_10;
                   q_acc_3_11 = q_acc_3_11 + q_tmp_3_11;
                   q_acc_3_12 = q_acc_3_12 + q_tmp_3_12;
                   q_acc_3_13 = q_acc_3_13 + q_tmp_3_13;
                   q_acc_3_14 = q_acc_3_14 + q_tmp_3_14;
                   q_acc_3_15 = q_acc_3_15 + q_tmp_3_15;
                   q_acc_3_16 = q_acc_3_16 + q_tmp_3_16;
                   q_acc_3_17 = q_acc_3_17 + q_tmp_3_17;
                   q_acc_3_18 = q_acc_3_18 + q_tmp_3_18;
                   q_acc_3_19 = q_acc_3_19 + q_tmp_3_19;
                   q_acc_3_20 = q_acc_3_20 + q_tmp_3_20;
                   q_acc_3_21 = q_acc_3_21 + q_tmp_3_21;
                   q_acc_3_22 = q_acc_3_22 + q_tmp_3_22;
                   q_acc_3_23 = q_acc_3_23 + q_tmp_3_23;
                   q_acc_3_24 = q_acc_3_24 + q_tmp_3_24;
                   q_acc_3_25 = q_acc_3_25 + q_tmp_3_25;
                   q_acc_3_26 = q_acc_3_26 + q_tmp_3_26;
                   q_acc_3_27 = q_acc_3_27 + q_tmp_3_27;
                   q_acc_3_28 = q_acc_3_28 + q_tmp_3_28;
                   q_acc_3_29 = q_acc_3_29 + q_tmp_3_29;
                }
                const real_t elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_10*src_dof_10 + q_acc_0_11*src_dof_11 + q_acc_0_12*src_dof_12 + q_acc_0_13*src_dof_13 + q_acc_0_14*src_dof_14 + q_acc_0_15*src_dof_15 + q_acc_0_16*src_dof_16 + q_acc_0_17*src_dof_17 + q_acc_0_18*src_dof_18 + q_acc_0_19*src_dof_19 + q_acc_0_2*src_dof_2 + q_acc_0_20*src_dof_20 + q_acc_0_21*src_dof_21 + q_acc_0_22*src_dof_22 + q_acc_0_23*src_dof_23 + q_acc_0_24*src_dof_24 + q_acc_0_25*src_dof_25 + q_acc_0_26*src_dof_26 + q_acc_0_27*src_dof_27 + q_acc_0_28*src_dof_28 + q_acc_0_29*src_dof_29 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const real_t elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_10*src_dof_10 + q_acc_1_11*src_dof_11 + q_acc_1_12*src_dof_12 + q_acc_1_13*src_dof_13 + q_acc_1_14*src_dof_14 + q_acc_1_15*src_dof_15 + q_acc_1_16*src_dof_16 + q_acc_1_17*src_dof_17 + q_acc_1_18*src_dof_18 + q_acc_1_19*src_dof_19 + q_acc_1_2*src_dof_2 + q_acc_1_20*src_dof_20 + q_acc_1_21*src_dof_21 + q_acc_1_22*src_dof_22 + q_acc_1_23*src_dof_23 + q_acc_1_24*src_dof_24 + q_acc_1_25*src_dof_25 + q_acc_1_26*src_dof_26 + q_acc_1_27*src_dof_27 + q_acc_1_28*src_dof_28 + q_acc_1_29*src_dof_29 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const real_t elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_10*src_dof_10 + q_acc_2_11*src_dof_11 + q_acc_2_12*src_dof_12 + q_acc_2_13*src_dof_13 + q_acc_2_14*src_dof_14 + q_acc_2_15*src_dof_15 + q_acc_2_16*src_dof_16 + q_acc_2_17*src_dof_17 + q_acc_2_18*src_dof_18 + q_acc_2_19*src_dof_19 + q_acc_2_2*src_dof_2 + q_acc_2_20*src_dof_20 + q_acc_2_21*src_dof_21 + q_acc_2_22*src_dof_22 + q_acc_2_23*src_dof_23 + q_acc_2_24*src_dof_24 + q_acc_2_25*src_dof_25 + q_acc_2_26*src_dof_26 + q_acc_2_27*src_dof_27 + q_acc_2_28*src_dof_28 + q_acc_2_29*src_dof_29 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const real_t elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_10*src_dof_10 + q_acc_3_11*src_dof_11 + q_acc_3_12*src_dof_12 + q_acc_3_13*src_dof_13 + q_acc_3_14*src_dof_14 + q_acc_3_15*src_dof_15 + q_acc_3_16*src_dof_16 + q_acc_3_17*src_dof_17 + q_acc_3_18*src_dof_18 + q_acc_3_19*src_dof_19 + q_acc_3_2*src_dof_2 + q_acc_3_20*src_dof_20 + q_acc_3_21*src_dof_21 + q_acc_3_22*src_dof_22 + q_acc_3_23*src_dof_23 + q_acc_3_24*src_dof_24 + q_acc_3_25*src_dof_25 + q_acc_3_26*src_dof_26 + q_acc_3_27*src_dof_27 + q_acc_3_28*src_dof_28 + q_acc_3_29*src_dof_29 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             }
          }
       }
       const real_t tmp_coords_jac_0_BLUE_UP = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t tmp_coords_jac_1_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t tmp_coords_jac_2_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t tmp_coords_jac_3_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2);
       const real_t tmp_coords_jac_4_BLUE_UP = tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t tmp_coords_jac_5_BLUE_UP = tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t tmp_coords_jac_6_BLUE_UP = tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2);
       const real_t p_affine_const_0_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP;
       const real_t p_affine_const_0_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP;
       const real_t p_affine_const_0_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP;
       const real_t p_affine_const_1_0_BLUE_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_UP;
       const real_t p_affine_const_1_1_BLUE_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_BLUE_UP;
       const real_t p_affine_const_1_2_BLUE_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_BLUE_UP;
       const real_t p_affine_const_2_0_BLUE_UP = tmp_coords_jac_1_BLUE_UP + tmp_coords_jac_4_BLUE_UP;
       const real_t p_affine_const_2_1_BLUE_UP = tmp_coords_jac_2_BLUE_UP + tmp_coords_jac_5_BLUE_UP;
       const real_t p_affine_const_2_2_BLUE_UP = tmp_coords_jac_3_BLUE_UP + tmp_coords_jac_6_BLUE_UP;
       const real_t p_affine_const_3_0_BLUE_UP = tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0) + tmp_coords_jac_1_BLUE_UP;
       const real_t p_affine_const_3_1_BLUE_UP = tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1) + tmp_coords_jac_2_BLUE_UP;
       const real_t p_affine_const_3_2_BLUE_UP = tmp_coords_jac_0_BLUE_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2) + tmp_coords_jac_3_BLUE_UP;
       const real_t jac_affine_0_0_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_1_0_BLUE_UP;
       const real_t jac_affine_0_1_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_2_0_BLUE_UP;
       const real_t jac_affine_0_2_BLUE_UP = -p_affine_const_0_0_BLUE_UP + p_affine_const_3_0_BLUE_UP;
       const real_t jac_affine_1_0_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_1_1_BLUE_UP;
       const real_t jac_affine_1_1_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_2_1_BLUE_UP;
       const real_t tmp_coords_jac_11_BLUE_UP = jac_affine_0_2_BLUE_UP*jac_affine_1_1_BLUE_UP;
       const real_t jac_affine_1_2_BLUE_UP = -p_affine_const_0_1_BLUE_UP + p_affine_const_3_1_BLUE_UP;
       const real_t tmp_coords_jac_9_BLUE_UP = jac_affine_0_1_BLUE_UP*jac_affine_1_2_BLUE_UP;
       const real_t jac_affine_2_0_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_1_2_BLUE_UP;
       const real_t jac_affine_2_1_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_2_2_BLUE_UP;
       const real_t tmp_coords_jac_8_BLUE_UP = jac_affine_1_2_BLUE_UP*jac_affine_2_1_BLUE_UP;
       const real_t jac_affine_2_2_BLUE_UP = -p_affine_const_0_2_BLUE_UP + p_affine_const_3_2_BLUE_UP;
       const real_t tmp_coords_jac_7_BLUE_UP = jac_affine_1_1_BLUE_UP*jac_affine_2_2_BLUE_UP;
       const real_t tmp_coords_jac_10_BLUE_UP = jac_affine_0_1_BLUE_UP*jac_affine_2_2_BLUE_UP;
       const real_t tmp_coords_jac_12_BLUE_UP = jac_affine_0_0_BLUE_UP*tmp_coords_jac_7_BLUE_UP - jac_affine_0_0_BLUE_UP*tmp_coords_jac_8_BLUE_UP + jac_affine_0_2_BLUE_UP*jac_affine_1_0_BLUE_UP*jac_affine_2_1_BLUE_UP - jac_affine_1_0_BLUE_UP*tmp_coords_jac_10_BLUE_UP - jac_affine_2_0_BLUE_UP*tmp_coords_jac_11_BLUE_UP + jac_affine_2_0_BLUE_UP*tmp_coords_jac_9_BLUE_UP;
       const real_t tmp_coords_jac_13_BLUE_UP = 1.0 / (tmp_coords_jac_12_BLUE_UP);
       const real_t jac_affine_inv_0_0_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(tmp_coords_jac_7_BLUE_UP - tmp_coords_jac_8_BLUE_UP);
       const real_t jac_affine_inv_0_1_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(jac_affine_0_2_BLUE_UP*jac_affine_2_1_BLUE_UP - tmp_coords_jac_10_BLUE_UP);
       const real_t jac_affine_inv_0_2_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(-tmp_coords_jac_11_BLUE_UP + tmp_coords_jac_9_BLUE_UP);
       const real_t jac_affine_inv_1_0_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(-jac_affine_1_0_BLUE_UP*jac_affine_2_2_BLUE_UP + jac_affine_1_2_BLUE_UP*jac_affine_2_0_BLUE_UP);
       const real_t jac_affine_inv_1_1_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(jac_affine_0_0_BLUE_UP*jac_affine_2_2_BLUE_UP - jac_affine_0_2_BLUE_UP*jac_affine_2_0_BLUE_UP);
       const real_t jac_affine_inv_1_2_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(-jac_affine_0_0_BLUE_UP*jac_affine_1_2_BLUE_UP + jac_affine_0_2_BLUE_UP*jac_affine_1_0_BLUE_UP);
       const real_t jac_affine_inv_2_0_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(jac_affine_1_0_BLUE_UP*jac_affine_2_1_BLUE_UP - jac_affine_1_1_BLUE_UP*jac_affine_2_0_BLUE_UP);
       const real_t jac_affine_inv_2_1_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(-jac_affine_0_0_BLUE_UP*jac_affine_2_1_BLUE_UP + jac_affine_0_1_BLUE_UP*jac_affine_2_0_BLUE_UP);
       const real_t jac_affine_inv_2_2_BLUE_UP = tmp_coords_jac_13_BLUE_UP*(jac_affine_0_0_BLUE_UP*jac_affine_1_1_BLUE_UP - jac_affine_0_1_BLUE_UP*jac_affine_1_0_BLUE_UP);
       const real_t abs_det_jac_affine_BLUE_UP = abs(tmp_coords_jac_12_BLUE_UP);
       {
          /* CellType.BLUE_UP */
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_0_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_3_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_3_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_3_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_10 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_11 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_12 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_13 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_14 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_15 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_16 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_17 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_18 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_19 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_20 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_21 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_22 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_23 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_24 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_25 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_26 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_27 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_28 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_29 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d rho_dof_0 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_1 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_2 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_3 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                const __m256d tmp_qloop_13 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_1);
                const __m256d tmp_qloop_14 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_2);
                const __m256d tmp_qloop_15 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_3);
                const __m256d tmp_qloop_16 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))));
                const __m256d tmp_qloop_29 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))));
                const __m256d tmp_qloop_31 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP,jac_affine_inv_0_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP,jac_affine_inv_0_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP,jac_affine_inv_0_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP,jac_affine_inv_1_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP,jac_affine_inv_1_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP,jac_affine_inv_1_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP,jac_affine_inv_2_0_BLUE_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP,jac_affine_inv_2_1_BLUE_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP,jac_affine_inv_2_2_BLUE_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))));
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const __m256d tmp_qloop_0 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_1 = _mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_2 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_3 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_4 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_5 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_6 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_7 = _mm256_mul_pd(tmp_qloop_6,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_8 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_9 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_10 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_11 = _mm256_add_pd(tmp_qloop_10,tmp_qloop_9);
                   const __m256d tmp_qloop_12 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_qloop_1),tmp_qloop_11),tmp_qloop_3),tmp_qloop_5),tmp_qloop_7);
                   const __m256d tmp_qloop_17 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0));
                   const __m256d tmp_qloop_18 = _mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(rho_dof_1,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(rho_dof_2,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(rho_dof_3,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_mul_pd(rho_dof_0,tmp_qloop_17))),_mm256_set_pd(_data_q_w[q],_data_q_w[q],_data_q_w[q],_data_q_w[q])),_mm256_set_pd(abs_det_jac_affine_BLUE_UP,abs_det_jac_affine_BLUE_UP,abs_det_jac_affine_BLUE_UP,abs_det_jac_affine_BLUE_UP)),_mm256_set_pd(abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending));
                   const __m256d tmp_qloop_19 = _mm256_mul_pd(tmp_qloop_17,tmp_qloop_18);
                   const __m256d tmp_qloop_20 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_19);
                   const __m256d tmp_qloop_21 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_qloop_1);
                   const __m256d tmp_qloop_22 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_qloop_3);
                   const __m256d tmp_qloop_23 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_qloop_5);
                   const __m256d tmp_qloop_24 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_25 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_mul_pd(tmp_qloop_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_24,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_26 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_27 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_mul_pd(tmp_qloop_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_26,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_28 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0)));
                   const __m256d tmp_qloop_30 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_29);
                   const __m256d tmp_qloop_32 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_31);
                   const __m256d tmp_qloop_33 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_34 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_33);
                   const __m256d tmp_qloop_35 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_36 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_35);
                   const __m256d tmp_qloop_37 = _mm256_mul_pd(tmp_qloop_36,tmp_qloop_9);
                   const __m256d tmp_qloop_38 = _mm256_mul_pd(tmp_qloop_0,tmp_qloop_18);
                   const __m256d tmp_qloop_39 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_38);
                   const __m256d tmp_qloop_40 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_33);
                   const __m256d tmp_qloop_41 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_35);
                   const __m256d tmp_qloop_42 = _mm256_mul_pd(tmp_qloop_41,tmp_qloop_9);
                   const __m256d tmp_qloop_43 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_38);
                   const __m256d tmp_qloop_44 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_33);
                   const __m256d tmp_qloop_45 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_35);
                   const __m256d tmp_qloop_46 = _mm256_mul_pd(tmp_qloop_45,tmp_qloop_9);
                   const __m256d tmp_qloop_47 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_38);
                   const __m256d tmp_qloop_48 = _mm256_mul_pd(_mm256_mul_pd(tmp_qloop_18,tmp_qloop_2),tmp_qloop_8);
                   const __m256d tmp_qloop_49 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_50 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_49);
                   const __m256d tmp_qloop_51 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_49);
                   const __m256d tmp_qloop_52 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_49);
                   const __m256d q_tmp_0_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_20);
                   const __m256d q_tmp_0_1 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_21);
                   const __m256d q_tmp_0_2 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_22);
                   const __m256d q_tmp_0_3 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_23);
                   const __m256d q_tmp_0_4 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_20);
                   const __m256d q_tmp_0_5 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_9);
                   const __m256d q_tmp_0_6 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_7);
                   const __m256d q_tmp_0_7 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_25);
                   const __m256d q_tmp_0_8 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_27);
                   const __m256d q_tmp_0_9 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_28);
                   const __m256d q_tmp_0_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_30);
                   const __m256d q_tmp_0_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_30);
                   const __m256d q_tmp_0_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_30);
                   const __m256d q_tmp_0_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_30);
                   const __m256d q_tmp_0_14 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_30);
                   const __m256d q_tmp_0_15 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_9);
                   const __m256d q_tmp_0_16 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_7);
                   const __m256d q_tmp_0_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_30);
                   const __m256d q_tmp_0_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_30);
                   const __m256d q_tmp_0_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_30);
                   const __m256d q_tmp_0_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_32);
                   const __m256d q_tmp_0_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_32);
                   const __m256d q_tmp_0_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_32);
                   const __m256d q_tmp_0_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_32);
                   const __m256d q_tmp_0_24 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_32);
                   const __m256d q_tmp_0_25 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_9);
                   const __m256d q_tmp_0_26 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_7);
                   const __m256d q_tmp_0_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_32);
                   const __m256d q_tmp_0_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_32);
                   const __m256d q_tmp_0_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_32);
                   const __m256d q_tmp_1_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_34);
                   const __m256d q_tmp_1_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_34);
                   const __m256d q_tmp_1_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_34);
                   const __m256d q_tmp_1_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_34);
                   const __m256d q_tmp_1_4 = tmp_qloop_37;
                   const __m256d q_tmp_1_5 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_8);
                   const __m256d q_tmp_1_6 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_6);
                   const __m256d q_tmp_1_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_34);
                   const __m256d q_tmp_1_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_34);
                   const __m256d q_tmp_1_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_34);
                   const __m256d q_tmp_1_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_40);
                   const __m256d q_tmp_1_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_40);
                   const __m256d q_tmp_1_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_40);
                   const __m256d q_tmp_1_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_40);
                   const __m256d q_tmp_1_14 = tmp_qloop_42;
                   const __m256d q_tmp_1_15 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_8);
                   const __m256d q_tmp_1_16 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_6);
                   const __m256d q_tmp_1_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_40);
                   const __m256d q_tmp_1_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_40);
                   const __m256d q_tmp_1_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_40);
                   const __m256d q_tmp_1_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_44);
                   const __m256d q_tmp_1_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_44);
                   const __m256d q_tmp_1_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_44);
                   const __m256d q_tmp_1_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_44);
                   const __m256d q_tmp_1_24 = tmp_qloop_46;
                   const __m256d q_tmp_1_25 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_8);
                   const __m256d q_tmp_1_26 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_6);
                   const __m256d q_tmp_1_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_44);
                   const __m256d q_tmp_1_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_44);
                   const __m256d q_tmp_1_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_44);
                   const __m256d q_tmp_2_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_36);
                   const __m256d q_tmp_2_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_36);
                   const __m256d q_tmp_2_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_36);
                   const __m256d q_tmp_2_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_36);
                   const __m256d q_tmp_2_4 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_48);
                   const __m256d q_tmp_2_5 = tmp_qloop_37;
                   const __m256d q_tmp_2_6 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_34);
                   const __m256d q_tmp_2_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_36);
                   const __m256d q_tmp_2_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_36);
                   const __m256d q_tmp_2_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_36);
                   const __m256d q_tmp_2_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_41);
                   const __m256d q_tmp_2_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_41);
                   const __m256d q_tmp_2_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_41);
                   const __m256d q_tmp_2_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_41);
                   const __m256d q_tmp_2_14 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_48);
                   const __m256d q_tmp_2_15 = tmp_qloop_42;
                   const __m256d q_tmp_2_16 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_40);
                   const __m256d q_tmp_2_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_41);
                   const __m256d q_tmp_2_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_41);
                   const __m256d q_tmp_2_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_41);
                   const __m256d q_tmp_2_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_45);
                   const __m256d q_tmp_2_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_45);
                   const __m256d q_tmp_2_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_45);
                   const __m256d q_tmp_2_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_45);
                   const __m256d q_tmp_2_24 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_48);
                   const __m256d q_tmp_2_25 = tmp_qloop_46;
                   const __m256d q_tmp_2_26 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_44);
                   const __m256d q_tmp_2_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_45);
                   const __m256d q_tmp_2_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_45);
                   const __m256d q_tmp_2_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_45);
                   const __m256d q_tmp_3_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_50);
                   const __m256d q_tmp_3_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_50);
                   const __m256d q_tmp_3_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_50);
                   const __m256d q_tmp_3_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_50);
                   const __m256d q_tmp_3_4 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_36);
                   const __m256d q_tmp_3_5 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_34);
                   const __m256d q_tmp_3_6 = tmp_qloop_37;
                   const __m256d q_tmp_3_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_50);
                   const __m256d q_tmp_3_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_50);
                   const __m256d q_tmp_3_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_50);
                   const __m256d q_tmp_3_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_51);
                   const __m256d q_tmp_3_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_51);
                   const __m256d q_tmp_3_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_51);
                   const __m256d q_tmp_3_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_51);
                   const __m256d q_tmp_3_14 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_41);
                   const __m256d q_tmp_3_15 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_40);
                   const __m256d q_tmp_3_16 = tmp_qloop_42;
                   const __m256d q_tmp_3_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_51);
                   const __m256d q_tmp_3_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_51);
                   const __m256d q_tmp_3_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_51);
                   const __m256d q_tmp_3_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_52);
                   const __m256d q_tmp_3_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_52);
                   const __m256d q_tmp_3_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_52);
                   const __m256d q_tmp_3_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_52);
                   const __m256d q_tmp_3_24 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_45);
                   const __m256d q_tmp_3_25 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_44);
                   const __m256d q_tmp_3_26 = tmp_qloop_46;
                   const __m256d q_tmp_3_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_52);
                   const __m256d q_tmp_3_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_52);
                   const __m256d q_tmp_3_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_52);
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,q_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,q_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,q_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,q_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,q_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,q_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,q_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,q_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,q_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,q_tmp_0_9);
                   q_acc_0_10 = _mm256_add_pd(q_acc_0_10,q_tmp_0_10);
                   q_acc_0_11 = _mm256_add_pd(q_acc_0_11,q_tmp_0_11);
                   q_acc_0_12 = _mm256_add_pd(q_acc_0_12,q_tmp_0_12);
                   q_acc_0_13 = _mm256_add_pd(q_acc_0_13,q_tmp_0_13);
                   q_acc_0_14 = _mm256_add_pd(q_acc_0_14,q_tmp_0_14);
                   q_acc_0_15 = _mm256_add_pd(q_acc_0_15,q_tmp_0_15);
                   q_acc_0_16 = _mm256_add_pd(q_acc_0_16,q_tmp_0_16);
                   q_acc_0_17 = _mm256_add_pd(q_acc_0_17,q_tmp_0_17);
                   q_acc_0_18 = _mm256_add_pd(q_acc_0_18,q_tmp_0_18);
                   q_acc_0_19 = _mm256_add_pd(q_acc_0_19,q_tmp_0_19);
                   q_acc_0_20 = _mm256_add_pd(q_acc_0_20,q_tmp_0_20);
                   q_acc_0_21 = _mm256_add_pd(q_acc_0_21,q_tmp_0_21);
                   q_acc_0_22 = _mm256_add_pd(q_acc_0_22,q_tmp_0_22);
                   q_acc_0_23 = _mm256_add_pd(q_acc_0_23,q_tmp_0_23);
                   q_acc_0_24 = _mm256_add_pd(q_acc_0_24,q_tmp_0_24);
                   q_acc_0_25 = _mm256_add_pd(q_acc_0_25,q_tmp_0_25);
                   q_acc_0_26 = _mm256_add_pd(q_acc_0_26,q_tmp_0_26);
                   q_acc_0_27 = _mm256_add_pd(q_acc_0_27,q_tmp_0_27);
                   q_acc_0_28 = _mm256_add_pd(q_acc_0_28,q_tmp_0_28);
                   q_acc_0_29 = _mm256_add_pd(q_acc_0_29,q_tmp_0_29);
                   q_acc_1_0 = _mm256_add_pd(q_acc_1_0,q_tmp_1_0);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,q_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,q_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,q_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,q_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,q_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,q_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,q_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,q_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,q_tmp_1_9);
                   q_acc_1_10 = _mm256_add_pd(q_acc_1_10,q_tmp_1_10);
                   q_acc_1_11 = _mm256_add_pd(q_acc_1_11,q_tmp_1_11);
                   q_acc_1_12 = _mm256_add_pd(q_acc_1_12,q_tmp_1_12);
                   q_acc_1_13 = _mm256_add_pd(q_acc_1_13,q_tmp_1_13);
                   q_acc_1_14 = _mm256_add_pd(q_acc_1_14,q_tmp_1_14);
                   q_acc_1_15 = _mm256_add_pd(q_acc_1_15,q_tmp_1_15);
                   q_acc_1_16 = _mm256_add_pd(q_acc_1_16,q_tmp_1_16);
                   q_acc_1_17 = _mm256_add_pd(q_acc_1_17,q_tmp_1_17);
                   q_acc_1_18 = _mm256_add_pd(q_acc_1_18,q_tmp_1_18);
                   q_acc_1_19 = _mm256_add_pd(q_acc_1_19,q_tmp_1_19);
                   q_acc_1_20 = _mm256_add_pd(q_acc_1_20,q_tmp_1_20);
                   q_acc_1_21 = _mm256_add_pd(q_acc_1_21,q_tmp_1_21);
                   q_acc_1_22 = _mm256_add_pd(q_acc_1_22,q_tmp_1_22);
                   q_acc_1_23 = _mm256_add_pd(q_acc_1_23,q_tmp_1_23);
                   q_acc_1_24 = _mm256_add_pd(q_acc_1_24,q_tmp_1_24);
                   q_acc_1_25 = _mm256_add_pd(q_acc_1_25,q_tmp_1_25);
                   q_acc_1_26 = _mm256_add_pd(q_acc_1_26,q_tmp_1_26);
                   q_acc_1_27 = _mm256_add_pd(q_acc_1_27,q_tmp_1_27);
                   q_acc_1_28 = _mm256_add_pd(q_acc_1_28,q_tmp_1_28);
                   q_acc_1_29 = _mm256_add_pd(q_acc_1_29,q_tmp_1_29);
                   q_acc_2_0 = _mm256_add_pd(q_acc_2_0,q_tmp_2_0);
                   q_acc_2_1 = _mm256_add_pd(q_acc_2_1,q_tmp_2_1);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,q_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,q_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,q_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,q_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,q_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,q_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,q_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,q_tmp_2_9);
                   q_acc_2_10 = _mm256_add_pd(q_acc_2_10,q_tmp_2_10);
                   q_acc_2_11 = _mm256_add_pd(q_acc_2_11,q_tmp_2_11);
                   q_acc_2_12 = _mm256_add_pd(q_acc_2_12,q_tmp_2_12);
                   q_acc_2_13 = _mm256_add_pd(q_acc_2_13,q_tmp_2_13);
                   q_acc_2_14 = _mm256_add_pd(q_acc_2_14,q_tmp_2_14);
                   q_acc_2_15 = _mm256_add_pd(q_acc_2_15,q_tmp_2_15);
                   q_acc_2_16 = _mm256_add_pd(q_acc_2_16,q_tmp_2_16);
                   q_acc_2_17 = _mm256_add_pd(q_acc_2_17,q_tmp_2_17);
                   q_acc_2_18 = _mm256_add_pd(q_acc_2_18,q_tmp_2_18);
                   q_acc_2_19 = _mm256_add_pd(q_acc_2_19,q_tmp_2_19);
                   q_acc_2_20 = _mm256_add_pd(q_acc_2_20,q_tmp_2_20);
                   q_acc_2_21 = _mm256_add_pd(q_acc_2_21,q_tmp_2_21);
                   q_acc_2_22 = _mm256_add_pd(q_acc_2_22,q_tmp_2_22);
                   q_acc_2_23 = _mm256_add_pd(q_acc_2_23,q_tmp_2_23);
                   q_acc_2_24 = _mm256_add_pd(q_acc_2_24,q_tmp_2_24);
                   q_acc_2_25 = _mm256_add_pd(q_acc_2_25,q_tmp_2_25);
                   q_acc_2_26 = _mm256_add_pd(q_acc_2_26,q_tmp_2_26);
                   q_acc_2_27 = _mm256_add_pd(q_acc_2_27,q_tmp_2_27);
                   q_acc_2_28 = _mm256_add_pd(q_acc_2_28,q_tmp_2_28);
                   q_acc_2_29 = _mm256_add_pd(q_acc_2_29,q_tmp_2_29);
                   q_acc_3_0 = _mm256_add_pd(q_acc_3_0,q_tmp_3_0);
                   q_acc_3_1 = _mm256_add_pd(q_acc_3_1,q_tmp_3_1);
                   q_acc_3_2 = _mm256_add_pd(q_acc_3_2,q_tmp_3_2);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,q_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,q_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,q_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,q_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,q_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,q_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,q_tmp_3_9);
                   q_acc_3_10 = _mm256_add_pd(q_acc_3_10,q_tmp_3_10);
                   q_acc_3_11 = _mm256_add_pd(q_acc_3_11,q_tmp_3_11);
                   q_acc_3_12 = _mm256_add_pd(q_acc_3_12,q_tmp_3_12);
                   q_acc_3_13 = _mm256_add_pd(q_acc_3_13,q_tmp_3_13);
                   q_acc_3_14 = _mm256_add_pd(q_acc_3_14,q_tmp_3_14);
                   q_acc_3_15 = _mm256_add_pd(q_acc_3_15,q_tmp_3_15);
                   q_acc_3_16 = _mm256_add_pd(q_acc_3_16,q_tmp_3_16);
                   q_acc_3_17 = _mm256_add_pd(q_acc_3_17,q_tmp_3_17);
                   q_acc_3_18 = _mm256_add_pd(q_acc_3_18,q_tmp_3_18);
                   q_acc_3_19 = _mm256_add_pd(q_acc_3_19,q_tmp_3_19);
                   q_acc_3_20 = _mm256_add_pd(q_acc_3_20,q_tmp_3_20);
                   q_acc_3_21 = _mm256_add_pd(q_acc_3_21,q_tmp_3_21);
                   q_acc_3_22 = _mm256_add_pd(q_acc_3_22,q_tmp_3_22);
                   q_acc_3_23 = _mm256_add_pd(q_acc_3_23,q_tmp_3_23);
                   q_acc_3_24 = _mm256_add_pd(q_acc_3_24,q_tmp_3_24);
                   q_acc_3_25 = _mm256_add_pd(q_acc_3_25,q_tmp_3_25);
                   q_acc_3_26 = _mm256_add_pd(q_acc_3_26,q_tmp_3_26);
                   q_acc_3_27 = _mm256_add_pd(q_acc_3_27,q_tmp_3_27);
                   q_acc_3_28 = _mm256_add_pd(q_acc_3_28,q_tmp_3_28);
                   q_acc_3_29 = _mm256_add_pd(q_acc_3_29,q_tmp_3_29);
                }
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_10,src_dof_10)),_mm256_mul_pd(q_acc_0_11,src_dof_11)),_mm256_mul_pd(q_acc_0_12,src_dof_12)),_mm256_mul_pd(q_acc_0_13,src_dof_13)),_mm256_mul_pd(q_acc_0_14,src_dof_14)),_mm256_mul_pd(q_acc_0_15,src_dof_15)),_mm256_mul_pd(q_acc_0_16,src_dof_16)),_mm256_mul_pd(q_acc_0_17,src_dof_17)),_mm256_mul_pd(q_acc_0_18,src_dof_18)),_mm256_mul_pd(q_acc_0_19,src_dof_19)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_20,src_dof_20)),_mm256_mul_pd(q_acc_0_21,src_dof_21)),_mm256_mul_pd(q_acc_0_22,src_dof_22)),_mm256_mul_pd(q_acc_0_23,src_dof_23)),_mm256_mul_pd(q_acc_0_24,src_dof_24)),_mm256_mul_pd(q_acc_0_25,src_dof_25)),_mm256_mul_pd(q_acc_0_26,src_dof_26)),_mm256_mul_pd(q_acc_0_27,src_dof_27)),_mm256_mul_pd(q_acc_0_28,src_dof_28)),_mm256_mul_pd(q_acc_0_29,src_dof_29)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_10,src_dof_10)),_mm256_mul_pd(q_acc_1_11,src_dof_11)),_mm256_mul_pd(q_acc_1_12,src_dof_12)),_mm256_mul_pd(q_acc_1_13,src_dof_13)),_mm256_mul_pd(q_acc_1_14,src_dof_14)),_mm256_mul_pd(q_acc_1_15,src_dof_15)),_mm256_mul_pd(q_acc_1_16,src_dof_16)),_mm256_mul_pd(q_acc_1_17,src_dof_17)),_mm256_mul_pd(q_acc_1_18,src_dof_18)),_mm256_mul_pd(q_acc_1_19,src_dof_19)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_20,src_dof_20)),_mm256_mul_pd(q_acc_1_21,src_dof_21)),_mm256_mul_pd(q_acc_1_22,src_dof_22)),_mm256_mul_pd(q_acc_1_23,src_dof_23)),_mm256_mul_pd(q_acc_1_24,src_dof_24)),_mm256_mul_pd(q_acc_1_25,src_dof_25)),_mm256_mul_pd(q_acc_1_26,src_dof_26)),_mm256_mul_pd(q_acc_1_27,src_dof_27)),_mm256_mul_pd(q_acc_1_28,src_dof_28)),_mm256_mul_pd(q_acc_1_29,src_dof_29)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_10,src_dof_10)),_mm256_mul_pd(q_acc_2_11,src_dof_11)),_mm256_mul_pd(q_acc_2_12,src_dof_12)),_mm256_mul_pd(q_acc_2_13,src_dof_13)),_mm256_mul_pd(q_acc_2_14,src_dof_14)),_mm256_mul_pd(q_acc_2_15,src_dof_15)),_mm256_mul_pd(q_acc_2_16,src_dof_16)),_mm256_mul_pd(q_acc_2_17,src_dof_17)),_mm256_mul_pd(q_acc_2_18,src_dof_18)),_mm256_mul_pd(q_acc_2_19,src_dof_19)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_20,src_dof_20)),_mm256_mul_pd(q_acc_2_21,src_dof_21)),_mm256_mul_pd(q_acc_2_22,src_dof_22)),_mm256_mul_pd(q_acc_2_23,src_dof_23)),_mm256_mul_pd(q_acc_2_24,src_dof_24)),_mm256_mul_pd(q_acc_2_25,src_dof_25)),_mm256_mul_pd(q_acc_2_26,src_dof_26)),_mm256_mul_pd(q_acc_2_27,src_dof_27)),_mm256_mul_pd(q_acc_2_28,src_dof_28)),_mm256_mul_pd(q_acc_2_29,src_dof_29)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_10,src_dof_10)),_mm256_mul_pd(q_acc_3_11,src_dof_11)),_mm256_mul_pd(q_acc_3_12,src_dof_12)),_mm256_mul_pd(q_acc_3_13,src_dof_13)),_mm256_mul_pd(q_acc_3_14,src_dof_14)),_mm256_mul_pd(q_acc_3_15,src_dof_15)),_mm256_mul_pd(q_acc_3_16,src_dof_16)),_mm256_mul_pd(q_acc_3_17,src_dof_17)),_mm256_mul_pd(q_acc_3_18,src_dof_18)),_mm256_mul_pd(q_acc_3_19,src_dof_19)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_20,src_dof_20)),_mm256_mul_pd(q_acc_3_21,src_dof_21)),_mm256_mul_pd(q_acc_3_22,src_dof_22)),_mm256_mul_pd(q_acc_3_23,src_dof_23)),_mm256_mul_pd(q_acc_3_24,src_dof_24)),_mm256_mul_pd(q_acc_3_25,src_dof_25)),_mm256_mul_pd(q_acc_3_26,src_dof_26)),_mm256_mul_pd(q_acc_3_27,src_dof_27)),_mm256_mul_pd(q_acc_3_28,src_dof_28)),_mm256_mul_pd(q_acc_3_29,src_dof_29)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t src_dof_0 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_1 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_2 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_3 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_4 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_5 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_6 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_7 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_8 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_9 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_10 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_11 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_12 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_13 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_14 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_15 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_16 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_17 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_18 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_19 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_20 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_21 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_22 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_23 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_24 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_25 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_26 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_27 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_28 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_29 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t rho_dof_0 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_1 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_2 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_3 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                real_t q_acc_0_0 = 0.0;
                real_t q_acc_0_1 = 0.0;
                real_t q_acc_0_2 = 0.0;
                real_t q_acc_0_3 = 0.0;
                real_t q_acc_0_4 = 0.0;
                real_t q_acc_0_5 = 0.0;
                real_t q_acc_0_6 = 0.0;
                real_t q_acc_0_7 = 0.0;
                real_t q_acc_0_8 = 0.0;
                real_t q_acc_0_9 = 0.0;
                real_t q_acc_0_10 = 0.0;
                real_t q_acc_0_11 = 0.0;
                real_t q_acc_0_12 = 0.0;
                real_t q_acc_0_13 = 0.0;
                real_t q_acc_0_14 = 0.0;
                real_t q_acc_0_15 = 0.0;
                real_t q_acc_0_16 = 0.0;
                real_t q_acc_0_17 = 0.0;
                real_t q_acc_0_18 = 0.0;
                real_t q_acc_0_19 = 0.0;
                real_t q_acc_0_20 = 0.0;
                real_t q_acc_0_21 = 0.0;
                real_t q_acc_0_22 = 0.0;
                real_t q_acc_0_23 = 0.0;
                real_t q_acc_0_24 = 0.0;
                real_t q_acc_0_25 = 0.0;
                real_t q_acc_0_26 = 0.0;
                real_t q_acc_0_27 = 0.0;
                real_t q_acc_0_28 = 0.0;
                real_t q_acc_0_29 = 0.0;
                real_t q_acc_1_0 = 0.0;
                real_t q_acc_1_1 = 0.0;
                real_t q_acc_1_2 = 0.0;
                real_t q_acc_1_3 = 0.0;
                real_t q_acc_1_4 = 0.0;
                real_t q_acc_1_5 = 0.0;
                real_t q_acc_1_6 = 0.0;
                real_t q_acc_1_7 = 0.0;
                real_t q_acc_1_8 = 0.0;
                real_t q_acc_1_9 = 0.0;
                real_t q_acc_1_10 = 0.0;
                real_t q_acc_1_11 = 0.0;
                real_t q_acc_1_12 = 0.0;
                real_t q_acc_1_13 = 0.0;
                real_t q_acc_1_14 = 0.0;
                real_t q_acc_1_15 = 0.0;
                real_t q_acc_1_16 = 0.0;
                real_t q_acc_1_17 = 0.0;
                real_t q_acc_1_18 = 0.0;
                real_t q_acc_1_19 = 0.0;
                real_t q_acc_1_20 = 0.0;
                real_t q_acc_1_21 = 0.0;
                real_t q_acc_1_22 = 0.0;
                real_t q_acc_1_23 = 0.0;
                real_t q_acc_1_24 = 0.0;
                real_t q_acc_1_25 = 0.0;
                real_t q_acc_1_26 = 0.0;
                real_t q_acc_1_27 = 0.0;
                real_t q_acc_1_28 = 0.0;
                real_t q_acc_1_29 = 0.0;
                real_t q_acc_2_0 = 0.0;
                real_t q_acc_2_1 = 0.0;
                real_t q_acc_2_2 = 0.0;
                real_t q_acc_2_3 = 0.0;
                real_t q_acc_2_4 = 0.0;
                real_t q_acc_2_5 = 0.0;
                real_t q_acc_2_6 = 0.0;
                real_t q_acc_2_7 = 0.0;
                real_t q_acc_2_8 = 0.0;
                real_t q_acc_2_9 = 0.0;
                real_t q_acc_2_10 = 0.0;
                real_t q_acc_2_11 = 0.0;
                real_t q_acc_2_12 = 0.0;
                real_t q_acc_2_13 = 0.0;
                real_t q_acc_2_14 = 0.0;
                real_t q_acc_2_15 = 0.0;
                real_t q_acc_2_16 = 0.0;
                real_t q_acc_2_17 = 0.0;
                real_t q_acc_2_18 = 0.0;
                real_t q_acc_2_19 = 0.0;
                real_t q_acc_2_20 = 0.0;
                real_t q_acc_2_21 = 0.0;
                real_t q_acc_2_22 = 0.0;
                real_t q_acc_2_23 = 0.0;
                real_t q_acc_2_24 = 0.0;
                real_t q_acc_2_25 = 0.0;
                real_t q_acc_2_26 = 0.0;
                real_t q_acc_2_27 = 0.0;
                real_t q_acc_2_28 = 0.0;
                real_t q_acc_2_29 = 0.0;
                real_t q_acc_3_0 = 0.0;
                real_t q_acc_3_1 = 0.0;
                real_t q_acc_3_2 = 0.0;
                real_t q_acc_3_3 = 0.0;
                real_t q_acc_3_4 = 0.0;
                real_t q_acc_3_5 = 0.0;
                real_t q_acc_3_6 = 0.0;
                real_t q_acc_3_7 = 0.0;
                real_t q_acc_3_8 = 0.0;
                real_t q_acc_3_9 = 0.0;
                real_t q_acc_3_10 = 0.0;
                real_t q_acc_3_11 = 0.0;
                real_t q_acc_3_12 = 0.0;
                real_t q_acc_3_13 = 0.0;
                real_t q_acc_3_14 = 0.0;
                real_t q_acc_3_15 = 0.0;
                real_t q_acc_3_16 = 0.0;
                real_t q_acc_3_17 = 0.0;
                real_t q_acc_3_18 = 0.0;
                real_t q_acc_3_19 = 0.0;
                real_t q_acc_3_20 = 0.0;
                real_t q_acc_3_21 = 0.0;
                real_t q_acc_3_22 = 0.0;
                real_t q_acc_3_23 = 0.0;
                real_t q_acc_3_24 = 0.0;
                real_t q_acc_3_25 = 0.0;
                real_t q_acc_3_26 = 0.0;
                real_t q_acc_3_27 = 0.0;
                real_t q_acc_3_28 = 0.0;
                real_t q_acc_3_29 = 0.0;
                const real_t tmp_qloop_13 = -rho_dof_0 + rho_dof_1;
                const real_t tmp_qloop_14 = -rho_dof_0 + rho_dof_2;
                const real_t tmp_qloop_15 = -rho_dof_0 + rho_dof_3;
                const real_t tmp_qloop_16 = tmp_qloop_13*(jac_affine_inv_0_0_BLUE_UP*jac_blending_inv_0_0 + jac_affine_inv_0_1_BLUE_UP*jac_blending_inv_1_0 + jac_affine_inv_0_2_BLUE_UP*jac_blending_inv_2_0) + tmp_qloop_14*(jac_affine_inv_1_0_BLUE_UP*jac_blending_inv_0_0 + jac_affine_inv_1_1_BLUE_UP*jac_blending_inv_1_0 + jac_affine_inv_1_2_BLUE_UP*jac_blending_inv_2_0) + tmp_qloop_15*(jac_affine_inv_2_0_BLUE_UP*jac_blending_inv_0_0 + jac_affine_inv_2_1_BLUE_UP*jac_blending_inv_1_0 + jac_affine_inv_2_2_BLUE_UP*jac_blending_inv_2_0);
                const real_t tmp_qloop_29 = tmp_qloop_13*(jac_affine_inv_0_0_BLUE_UP*jac_blending_inv_0_1 + jac_affine_inv_0_1_BLUE_UP*jac_blending_inv_1_1 + jac_affine_inv_0_2_BLUE_UP*jac_blending_inv_2_1) + tmp_qloop_14*(jac_affine_inv_1_0_BLUE_UP*jac_blending_inv_0_1 + jac_affine_inv_1_1_BLUE_UP*jac_blending_inv_1_1 + jac_affine_inv_1_2_BLUE_UP*jac_blending_inv_2_1) + tmp_qloop_15*(jac_affine_inv_2_0_BLUE_UP*jac_blending_inv_0_1 + jac_affine_inv_2_1_BLUE_UP*jac_blending_inv_1_1 + jac_affine_inv_2_2_BLUE_UP*jac_blending_inv_2_1);
                const real_t tmp_qloop_31 = tmp_qloop_13*(jac_affine_inv_0_0_BLUE_UP*jac_blending_inv_0_2 + jac_affine_inv_0_1_BLUE_UP*jac_blending_inv_1_2 + jac_affine_inv_0_2_BLUE_UP*jac_blending_inv_2_2) + tmp_qloop_14*(jac_affine_inv_1_0_BLUE_UP*jac_blending_inv_0_2 + jac_affine_inv_1_1_BLUE_UP*jac_blending_inv_1_2 + jac_affine_inv_1_2_BLUE_UP*jac_blending_inv_2_2) + tmp_qloop_15*(jac_affine_inv_2_0_BLUE_UP*jac_blending_inv_0_2 + jac_affine_inv_2_1_BLUE_UP*jac_blending_inv_1_2 + jac_affine_inv_2_2_BLUE_UP*jac_blending_inv_2_2);
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const real_t tmp_qloop_0 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const real_t tmp_qloop_1 = tmp_qloop_0*2.0;
                   const real_t tmp_qloop_2 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const real_t tmp_qloop_3 = tmp_qloop_2*2.0;
                   const real_t tmp_qloop_4 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const real_t tmp_qloop_5 = tmp_qloop_4*2.0;
                   const real_t tmp_qloop_6 = 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_7 = tmp_qloop_6*_data_q_p_0[q];
                   const real_t tmp_qloop_8 = 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_9 = tmp_qloop_8*_data_q_p_0[q];
                   const real_t tmp_qloop_10 = tmp_qloop_8*_data_q_p_1[q];
                   const real_t tmp_qloop_11 = tmp_qloop_10 + tmp_qloop_9;
                   const real_t tmp_qloop_12 = tmp_qloop_1 + tmp_qloop_11 + tmp_qloop_3 + tmp_qloop_5 + tmp_qloop_7 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0;
                   const real_t tmp_qloop_17 = 1.0 - _data_q_p_0[q] - _data_q_p_1[q] - _data_q_p_2[q];
                   const real_t tmp_qloop_18 = abs_det_jac_affine_BLUE_UP*abs_det_jac_blending*1.0 / (rho_dof_0*tmp_qloop_17 + rho_dof_1*_data_q_p_0[q] + rho_dof_2*_data_q_p_1[q] + rho_dof_3*_data_q_p_2[q])*_data_q_w[q];
                   const real_t tmp_qloop_19 = tmp_qloop_17*tmp_qloop_18;
                   const real_t tmp_qloop_20 = tmp_qloop_16*tmp_qloop_19;
                   const real_t tmp_qloop_21 = tmp_qloop_1 - _data_q_p_0[q];
                   const real_t tmp_qloop_22 = tmp_qloop_3 - _data_q_p_1[q];
                   const real_t tmp_qloop_23 = tmp_qloop_5 - _data_q_p_2[q];
                   const real_t tmp_qloop_24 = tmp_qloop_4*4.0;
                   const real_t tmp_qloop_25 = -tmp_qloop_11 - tmp_qloop_24 + 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_26 = tmp_qloop_2*4.0;
                   const real_t tmp_qloop_27 = -tmp_qloop_10 - tmp_qloop_26 - tmp_qloop_7 + 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_28 = tmp_qloop_0*-4.0 - tmp_qloop_7 - tmp_qloop_9 + 4.0*_data_q_p_0[q];
                   const real_t tmp_qloop_30 = tmp_qloop_19*tmp_qloop_29;
                   const real_t tmp_qloop_32 = tmp_qloop_19*tmp_qloop_31;
                   const real_t tmp_qloop_33 = tmp_qloop_18*_data_q_p_0[q];
                   const real_t tmp_qloop_34 = tmp_qloop_16*tmp_qloop_33;
                   const real_t tmp_qloop_35 = tmp_qloop_18*_data_q_p_1[q];
                   const real_t tmp_qloop_36 = tmp_qloop_16*tmp_qloop_35;
                   const real_t tmp_qloop_37 = tmp_qloop_36*tmp_qloop_9;
                   const real_t tmp_qloop_38 = tmp_qloop_0*tmp_qloop_18;
                   const real_t tmp_qloop_39 = tmp_qloop_16*tmp_qloop_38;
                   const real_t tmp_qloop_40 = tmp_qloop_29*tmp_qloop_33;
                   const real_t tmp_qloop_41 = tmp_qloop_29*tmp_qloop_35;
                   const real_t tmp_qloop_42 = tmp_qloop_41*tmp_qloop_9;
                   const real_t tmp_qloop_43 = tmp_qloop_29*tmp_qloop_38;
                   const real_t tmp_qloop_44 = tmp_qloop_31*tmp_qloop_33;
                   const real_t tmp_qloop_45 = tmp_qloop_31*tmp_qloop_35;
                   const real_t tmp_qloop_46 = tmp_qloop_45*tmp_qloop_9;
                   const real_t tmp_qloop_47 = tmp_qloop_31*tmp_qloop_38;
                   const real_t tmp_qloop_48 = tmp_qloop_18*tmp_qloop_2*tmp_qloop_8;
                   const real_t tmp_qloop_49 = tmp_qloop_18*_data_q_p_2[q];
                   const real_t tmp_qloop_50 = tmp_qloop_16*tmp_qloop_49;
                   const real_t tmp_qloop_51 = tmp_qloop_29*tmp_qloop_49;
                   const real_t tmp_qloop_52 = tmp_qloop_31*tmp_qloop_49;
                   const real_t q_tmp_0_0 = tmp_qloop_12*tmp_qloop_20;
                   const real_t q_tmp_0_1 = tmp_qloop_20*tmp_qloop_21;
                   const real_t q_tmp_0_2 = tmp_qloop_20*tmp_qloop_22;
                   const real_t q_tmp_0_3 = tmp_qloop_20*tmp_qloop_23;
                   const real_t q_tmp_0_4 = tmp_qloop_10*tmp_qloop_20;
                   const real_t q_tmp_0_5 = tmp_qloop_20*tmp_qloop_9;
                   const real_t q_tmp_0_6 = tmp_qloop_20*tmp_qloop_7;
                   const real_t q_tmp_0_7 = tmp_qloop_20*tmp_qloop_25;
                   const real_t q_tmp_0_8 = tmp_qloop_20*tmp_qloop_27;
                   const real_t q_tmp_0_9 = tmp_qloop_20*tmp_qloop_28;
                   const real_t q_tmp_0_10 = tmp_qloop_12*tmp_qloop_30;
                   const real_t q_tmp_0_11 = tmp_qloop_21*tmp_qloop_30;
                   const real_t q_tmp_0_12 = tmp_qloop_22*tmp_qloop_30;
                   const real_t q_tmp_0_13 = tmp_qloop_23*tmp_qloop_30;
                   const real_t q_tmp_0_14 = tmp_qloop_10*tmp_qloop_30;
                   const real_t q_tmp_0_15 = tmp_qloop_30*tmp_qloop_9;
                   const real_t q_tmp_0_16 = tmp_qloop_30*tmp_qloop_7;
                   const real_t q_tmp_0_17 = tmp_qloop_25*tmp_qloop_30;
                   const real_t q_tmp_0_18 = tmp_qloop_27*tmp_qloop_30;
                   const real_t q_tmp_0_19 = tmp_qloop_28*tmp_qloop_30;
                   const real_t q_tmp_0_20 = tmp_qloop_12*tmp_qloop_32;
                   const real_t q_tmp_0_21 = tmp_qloop_21*tmp_qloop_32;
                   const real_t q_tmp_0_22 = tmp_qloop_22*tmp_qloop_32;
                   const real_t q_tmp_0_23 = tmp_qloop_23*tmp_qloop_32;
                   const real_t q_tmp_0_24 = tmp_qloop_10*tmp_qloop_32;
                   const real_t q_tmp_0_25 = tmp_qloop_32*tmp_qloop_9;
                   const real_t q_tmp_0_26 = tmp_qloop_32*tmp_qloop_7;
                   const real_t q_tmp_0_27 = tmp_qloop_25*tmp_qloop_32;
                   const real_t q_tmp_0_28 = tmp_qloop_27*tmp_qloop_32;
                   const real_t q_tmp_0_29 = tmp_qloop_28*tmp_qloop_32;
                   const real_t q_tmp_1_0 = tmp_qloop_12*tmp_qloop_34;
                   const real_t q_tmp_1_1 = tmp_qloop_21*tmp_qloop_34;
                   const real_t q_tmp_1_2 = tmp_qloop_22*tmp_qloop_34;
                   const real_t q_tmp_1_3 = tmp_qloop_23*tmp_qloop_34;
                   const real_t q_tmp_1_4 = tmp_qloop_37;
                   const real_t q_tmp_1_5 = tmp_qloop_39*tmp_qloop_8;
                   const real_t q_tmp_1_6 = tmp_qloop_39*tmp_qloop_6;
                   const real_t q_tmp_1_7 = tmp_qloop_25*tmp_qloop_34;
                   const real_t q_tmp_1_8 = tmp_qloop_27*tmp_qloop_34;
                   const real_t q_tmp_1_9 = tmp_qloop_28*tmp_qloop_34;
                   const real_t q_tmp_1_10 = tmp_qloop_12*tmp_qloop_40;
                   const real_t q_tmp_1_11 = tmp_qloop_21*tmp_qloop_40;
                   const real_t q_tmp_1_12 = tmp_qloop_22*tmp_qloop_40;
                   const real_t q_tmp_1_13 = tmp_qloop_23*tmp_qloop_40;
                   const real_t q_tmp_1_14 = tmp_qloop_42;
                   const real_t q_tmp_1_15 = tmp_qloop_43*tmp_qloop_8;
                   const real_t q_tmp_1_16 = tmp_qloop_43*tmp_qloop_6;
                   const real_t q_tmp_1_17 = tmp_qloop_25*tmp_qloop_40;
                   const real_t q_tmp_1_18 = tmp_qloop_27*tmp_qloop_40;
                   const real_t q_tmp_1_19 = tmp_qloop_28*tmp_qloop_40;
                   const real_t q_tmp_1_20 = tmp_qloop_12*tmp_qloop_44;
                   const real_t q_tmp_1_21 = tmp_qloop_21*tmp_qloop_44;
                   const real_t q_tmp_1_22 = tmp_qloop_22*tmp_qloop_44;
                   const real_t q_tmp_1_23 = tmp_qloop_23*tmp_qloop_44;
                   const real_t q_tmp_1_24 = tmp_qloop_46;
                   const real_t q_tmp_1_25 = tmp_qloop_47*tmp_qloop_8;
                   const real_t q_tmp_1_26 = tmp_qloop_47*tmp_qloop_6;
                   const real_t q_tmp_1_27 = tmp_qloop_25*tmp_qloop_44;
                   const real_t q_tmp_1_28 = tmp_qloop_27*tmp_qloop_44;
                   const real_t q_tmp_1_29 = tmp_qloop_28*tmp_qloop_44;
                   const real_t q_tmp_2_0 = tmp_qloop_12*tmp_qloop_36;
                   const real_t q_tmp_2_1 = tmp_qloop_21*tmp_qloop_36;
                   const real_t q_tmp_2_2 = tmp_qloop_22*tmp_qloop_36;
                   const real_t q_tmp_2_3 = tmp_qloop_23*tmp_qloop_36;
                   const real_t q_tmp_2_4 = tmp_qloop_16*tmp_qloop_48;
                   const real_t q_tmp_2_5 = tmp_qloop_37;
                   const real_t q_tmp_2_6 = tmp_qloop_26*tmp_qloop_34;
                   const real_t q_tmp_2_7 = tmp_qloop_25*tmp_qloop_36;
                   const real_t q_tmp_2_8 = tmp_qloop_27*tmp_qloop_36;
                   const real_t q_tmp_2_9 = tmp_qloop_28*tmp_qloop_36;
                   const real_t q_tmp_2_10 = tmp_qloop_12*tmp_qloop_41;
                   const real_t q_tmp_2_11 = tmp_qloop_21*tmp_qloop_41;
                   const real_t q_tmp_2_12 = tmp_qloop_22*tmp_qloop_41;
                   const real_t q_tmp_2_13 = tmp_qloop_23*tmp_qloop_41;
                   const real_t q_tmp_2_14 = tmp_qloop_29*tmp_qloop_48;
                   const real_t q_tmp_2_15 = tmp_qloop_42;
                   const real_t q_tmp_2_16 = tmp_qloop_26*tmp_qloop_40;
                   const real_t q_tmp_2_17 = tmp_qloop_25*tmp_qloop_41;
                   const real_t q_tmp_2_18 = tmp_qloop_27*tmp_qloop_41;
                   const real_t q_tmp_2_19 = tmp_qloop_28*tmp_qloop_41;
                   const real_t q_tmp_2_20 = tmp_qloop_12*tmp_qloop_45;
                   const real_t q_tmp_2_21 = tmp_qloop_21*tmp_qloop_45;
                   const real_t q_tmp_2_22 = tmp_qloop_22*tmp_qloop_45;
                   const real_t q_tmp_2_23 = tmp_qloop_23*tmp_qloop_45;
                   const real_t q_tmp_2_24 = tmp_qloop_31*tmp_qloop_48;
                   const real_t q_tmp_2_25 = tmp_qloop_46;
                   const real_t q_tmp_2_26 = tmp_qloop_26*tmp_qloop_44;
                   const real_t q_tmp_2_27 = tmp_qloop_25*tmp_qloop_45;
                   const real_t q_tmp_2_28 = tmp_qloop_27*tmp_qloop_45;
                   const real_t q_tmp_2_29 = tmp_qloop_28*tmp_qloop_45;
                   const real_t q_tmp_3_0 = tmp_qloop_12*tmp_qloop_50;
                   const real_t q_tmp_3_1 = tmp_qloop_21*tmp_qloop_50;
                   const real_t q_tmp_3_2 = tmp_qloop_22*tmp_qloop_50;
                   const real_t q_tmp_3_3 = tmp_qloop_23*tmp_qloop_50;
                   const real_t q_tmp_3_4 = tmp_qloop_24*tmp_qloop_36;
                   const real_t q_tmp_3_5 = tmp_qloop_24*tmp_qloop_34;
                   const real_t q_tmp_3_6 = tmp_qloop_37;
                   const real_t q_tmp_3_7 = tmp_qloop_25*tmp_qloop_50;
                   const real_t q_tmp_3_8 = tmp_qloop_27*tmp_qloop_50;
                   const real_t q_tmp_3_9 = tmp_qloop_28*tmp_qloop_50;
                   const real_t q_tmp_3_10 = tmp_qloop_12*tmp_qloop_51;
                   const real_t q_tmp_3_11 = tmp_qloop_21*tmp_qloop_51;
                   const real_t q_tmp_3_12 = tmp_qloop_22*tmp_qloop_51;
                   const real_t q_tmp_3_13 = tmp_qloop_23*tmp_qloop_51;
                   const real_t q_tmp_3_14 = tmp_qloop_24*tmp_qloop_41;
                   const real_t q_tmp_3_15 = tmp_qloop_24*tmp_qloop_40;
                   const real_t q_tmp_3_16 = tmp_qloop_42;
                   const real_t q_tmp_3_17 = tmp_qloop_25*tmp_qloop_51;
                   const real_t q_tmp_3_18 = tmp_qloop_27*tmp_qloop_51;
                   const real_t q_tmp_3_19 = tmp_qloop_28*tmp_qloop_51;
                   const real_t q_tmp_3_20 = tmp_qloop_12*tmp_qloop_52;
                   const real_t q_tmp_3_21 = tmp_qloop_21*tmp_qloop_52;
                   const real_t q_tmp_3_22 = tmp_qloop_22*tmp_qloop_52;
                   const real_t q_tmp_3_23 = tmp_qloop_23*tmp_qloop_52;
                   const real_t q_tmp_3_24 = tmp_qloop_24*tmp_qloop_45;
                   const real_t q_tmp_3_25 = tmp_qloop_24*tmp_qloop_44;
                   const real_t q_tmp_3_26 = tmp_qloop_46;
                   const real_t q_tmp_3_27 = tmp_qloop_25*tmp_qloop_52;
                   const real_t q_tmp_3_28 = tmp_qloop_27*tmp_qloop_52;
                   const real_t q_tmp_3_29 = tmp_qloop_28*tmp_qloop_52;
                   q_acc_0_0 = q_acc_0_0 + q_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + q_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + q_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + q_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + q_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + q_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + q_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + q_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + q_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + q_tmp_0_9;
                   q_acc_0_10 = q_acc_0_10 + q_tmp_0_10;
                   q_acc_0_11 = q_acc_0_11 + q_tmp_0_11;
                   q_acc_0_12 = q_acc_0_12 + q_tmp_0_12;
                   q_acc_0_13 = q_acc_0_13 + q_tmp_0_13;
                   q_acc_0_14 = q_acc_0_14 + q_tmp_0_14;
                   q_acc_0_15 = q_acc_0_15 + q_tmp_0_15;
                   q_acc_0_16 = q_acc_0_16 + q_tmp_0_16;
                   q_acc_0_17 = q_acc_0_17 + q_tmp_0_17;
                   q_acc_0_18 = q_acc_0_18 + q_tmp_0_18;
                   q_acc_0_19 = q_acc_0_19 + q_tmp_0_19;
                   q_acc_0_20 = q_acc_0_20 + q_tmp_0_20;
                   q_acc_0_21 = q_acc_0_21 + q_tmp_0_21;
                   q_acc_0_22 = q_acc_0_22 + q_tmp_0_22;
                   q_acc_0_23 = q_acc_0_23 + q_tmp_0_23;
                   q_acc_0_24 = q_acc_0_24 + q_tmp_0_24;
                   q_acc_0_25 = q_acc_0_25 + q_tmp_0_25;
                   q_acc_0_26 = q_acc_0_26 + q_tmp_0_26;
                   q_acc_0_27 = q_acc_0_27 + q_tmp_0_27;
                   q_acc_0_28 = q_acc_0_28 + q_tmp_0_28;
                   q_acc_0_29 = q_acc_0_29 + q_tmp_0_29;
                   q_acc_1_0 = q_acc_1_0 + q_tmp_1_0;
                   q_acc_1_1 = q_acc_1_1 + q_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + q_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + q_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + q_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + q_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + q_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + q_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + q_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + q_tmp_1_9;
                   q_acc_1_10 = q_acc_1_10 + q_tmp_1_10;
                   q_acc_1_11 = q_acc_1_11 + q_tmp_1_11;
                   q_acc_1_12 = q_acc_1_12 + q_tmp_1_12;
                   q_acc_1_13 = q_acc_1_13 + q_tmp_1_13;
                   q_acc_1_14 = q_acc_1_14 + q_tmp_1_14;
                   q_acc_1_15 = q_acc_1_15 + q_tmp_1_15;
                   q_acc_1_16 = q_acc_1_16 + q_tmp_1_16;
                   q_acc_1_17 = q_acc_1_17 + q_tmp_1_17;
                   q_acc_1_18 = q_acc_1_18 + q_tmp_1_18;
                   q_acc_1_19 = q_acc_1_19 + q_tmp_1_19;
                   q_acc_1_20 = q_acc_1_20 + q_tmp_1_20;
                   q_acc_1_21 = q_acc_1_21 + q_tmp_1_21;
                   q_acc_1_22 = q_acc_1_22 + q_tmp_1_22;
                   q_acc_1_23 = q_acc_1_23 + q_tmp_1_23;
                   q_acc_1_24 = q_acc_1_24 + q_tmp_1_24;
                   q_acc_1_25 = q_acc_1_25 + q_tmp_1_25;
                   q_acc_1_26 = q_acc_1_26 + q_tmp_1_26;
                   q_acc_1_27 = q_acc_1_27 + q_tmp_1_27;
                   q_acc_1_28 = q_acc_1_28 + q_tmp_1_28;
                   q_acc_1_29 = q_acc_1_29 + q_tmp_1_29;
                   q_acc_2_0 = q_acc_2_0 + q_tmp_2_0;
                   q_acc_2_1 = q_acc_2_1 + q_tmp_2_1;
                   q_acc_2_2 = q_acc_2_2 + q_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + q_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + q_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + q_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + q_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + q_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + q_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + q_tmp_2_9;
                   q_acc_2_10 = q_acc_2_10 + q_tmp_2_10;
                   q_acc_2_11 = q_acc_2_11 + q_tmp_2_11;
                   q_acc_2_12 = q_acc_2_12 + q_tmp_2_12;
                   q_acc_2_13 = q_acc_2_13 + q_tmp_2_13;
                   q_acc_2_14 = q_acc_2_14 + q_tmp_2_14;
                   q_acc_2_15 = q_acc_2_15 + q_tmp_2_15;
                   q_acc_2_16 = q_acc_2_16 + q_tmp_2_16;
                   q_acc_2_17 = q_acc_2_17 + q_tmp_2_17;
                   q_acc_2_18 = q_acc_2_18 + q_tmp_2_18;
                   q_acc_2_19 = q_acc_2_19 + q_tmp_2_19;
                   q_acc_2_20 = q_acc_2_20 + q_tmp_2_20;
                   q_acc_2_21 = q_acc_2_21 + q_tmp_2_21;
                   q_acc_2_22 = q_acc_2_22 + q_tmp_2_22;
                   q_acc_2_23 = q_acc_2_23 + q_tmp_2_23;
                   q_acc_2_24 = q_acc_2_24 + q_tmp_2_24;
                   q_acc_2_25 = q_acc_2_25 + q_tmp_2_25;
                   q_acc_2_26 = q_acc_2_26 + q_tmp_2_26;
                   q_acc_2_27 = q_acc_2_27 + q_tmp_2_27;
                   q_acc_2_28 = q_acc_2_28 + q_tmp_2_28;
                   q_acc_2_29 = q_acc_2_29 + q_tmp_2_29;
                   q_acc_3_0 = q_acc_3_0 + q_tmp_3_0;
                   q_acc_3_1 = q_acc_3_1 + q_tmp_3_1;
                   q_acc_3_2 = q_acc_3_2 + q_tmp_3_2;
                   q_acc_3_3 = q_acc_3_3 + q_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + q_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + q_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + q_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + q_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + q_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + q_tmp_3_9;
                   q_acc_3_10 = q_acc_3_10 + q_tmp_3_10;
                   q_acc_3_11 = q_acc_3_11 + q_tmp_3_11;
                   q_acc_3_12 = q_acc_3_12 + q_tmp_3_12;
                   q_acc_3_13 = q_acc_3_13 + q_tmp_3_13;
                   q_acc_3_14 = q_acc_3_14 + q_tmp_3_14;
                   q_acc_3_15 = q_acc_3_15 + q_tmp_3_15;
                   q_acc_3_16 = q_acc_3_16 + q_tmp_3_16;
                   q_acc_3_17 = q_acc_3_17 + q_tmp_3_17;
                   q_acc_3_18 = q_acc_3_18 + q_tmp_3_18;
                   q_acc_3_19 = q_acc_3_19 + q_tmp_3_19;
                   q_acc_3_20 = q_acc_3_20 + q_tmp_3_20;
                   q_acc_3_21 = q_acc_3_21 + q_tmp_3_21;
                   q_acc_3_22 = q_acc_3_22 + q_tmp_3_22;
                   q_acc_3_23 = q_acc_3_23 + q_tmp_3_23;
                   q_acc_3_24 = q_acc_3_24 + q_tmp_3_24;
                   q_acc_3_25 = q_acc_3_25 + q_tmp_3_25;
                   q_acc_3_26 = q_acc_3_26 + q_tmp_3_26;
                   q_acc_3_27 = q_acc_3_27 + q_tmp_3_27;
                   q_acc_3_28 = q_acc_3_28 + q_tmp_3_28;
                   q_acc_3_29 = q_acc_3_29 + q_tmp_3_29;
                }
                const real_t elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_10*src_dof_10 + q_acc_0_11*src_dof_11 + q_acc_0_12*src_dof_12 + q_acc_0_13*src_dof_13 + q_acc_0_14*src_dof_14 + q_acc_0_15*src_dof_15 + q_acc_0_16*src_dof_16 + q_acc_0_17*src_dof_17 + q_acc_0_18*src_dof_18 + q_acc_0_19*src_dof_19 + q_acc_0_2*src_dof_2 + q_acc_0_20*src_dof_20 + q_acc_0_21*src_dof_21 + q_acc_0_22*src_dof_22 + q_acc_0_23*src_dof_23 + q_acc_0_24*src_dof_24 + q_acc_0_25*src_dof_25 + q_acc_0_26*src_dof_26 + q_acc_0_27*src_dof_27 + q_acc_0_28*src_dof_28 + q_acc_0_29*src_dof_29 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const real_t elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_10*src_dof_10 + q_acc_1_11*src_dof_11 + q_acc_1_12*src_dof_12 + q_acc_1_13*src_dof_13 + q_acc_1_14*src_dof_14 + q_acc_1_15*src_dof_15 + q_acc_1_16*src_dof_16 + q_acc_1_17*src_dof_17 + q_acc_1_18*src_dof_18 + q_acc_1_19*src_dof_19 + q_acc_1_2*src_dof_2 + q_acc_1_20*src_dof_20 + q_acc_1_21*src_dof_21 + q_acc_1_22*src_dof_22 + q_acc_1_23*src_dof_23 + q_acc_1_24*src_dof_24 + q_acc_1_25*src_dof_25 + q_acc_1_26*src_dof_26 + q_acc_1_27*src_dof_27 + q_acc_1_28*src_dof_28 + q_acc_1_29*src_dof_29 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const real_t elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_10*src_dof_10 + q_acc_2_11*src_dof_11 + q_acc_2_12*src_dof_12 + q_acc_2_13*src_dof_13 + q_acc_2_14*src_dof_14 + q_acc_2_15*src_dof_15 + q_acc_2_16*src_dof_16 + q_acc_2_17*src_dof_17 + q_acc_2_18*src_dof_18 + q_acc_2_19*src_dof_19 + q_acc_2_2*src_dof_2 + q_acc_2_20*src_dof_20 + q_acc_2_21*src_dof_21 + q_acc_2_22*src_dof_22 + q_acc_2_23*src_dof_23 + q_acc_2_24*src_dof_24 + q_acc_2_25*src_dof_25 + q_acc_2_26*src_dof_26 + q_acc_2_27*src_dof_27 + q_acc_2_28*src_dof_28 + q_acc_2_29*src_dof_29 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const real_t elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_10*src_dof_10 + q_acc_3_11*src_dof_11 + q_acc_3_12*src_dof_12 + q_acc_3_13*src_dof_13 + q_acc_3_14*src_dof_14 + q_acc_3_15*src_dof_15 + q_acc_3_16*src_dof_16 + q_acc_3_17*src_dof_17 + q_acc_3_18*src_dof_18 + q_acc_3_19*src_dof_19 + q_acc_3_2*src_dof_2 + q_acc_3_20*src_dof_20 + q_acc_3_21*src_dof_21 + q_acc_3_22*src_dof_22 + q_acc_3_23*src_dof_23 + q_acc_3_24*src_dof_24 + q_acc_3_25*src_dof_25 + q_acc_3_26*src_dof_26 + q_acc_3_27*src_dof_27 + q_acc_3_28*src_dof_28 + q_acc_3_29*src_dof_29 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             }
          }
       }
       const real_t tmp_coords_jac_0_BLUE_DOWN = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t tmp_coords_jac_1_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t tmp_coords_jac_2_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t tmp_coords_jac_3_BLUE_DOWN = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2);
       const real_t tmp_coords_jac_4_BLUE_DOWN = tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0);
       const real_t tmp_coords_jac_5_BLUE_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_BLUE_DOWN;
       const real_t tmp_coords_jac_6_BLUE_DOWN = tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1);
       const real_t tmp_coords_jac_7_BLUE_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_6_BLUE_DOWN;
       const real_t tmp_coords_jac_8_BLUE_DOWN = tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2);
       const real_t tmp_coords_jac_9_BLUE_DOWN = macro_vertex_coord_id_0comp2 + tmp_coords_jac_8_BLUE_DOWN;
       const real_t p_affine_const_0_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN;
       const real_t p_affine_const_0_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN;
       const real_t p_affine_const_0_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN;
       const real_t p_affine_const_1_0_BLUE_DOWN = tmp_coords_jac_5_BLUE_DOWN;
       const real_t p_affine_const_1_1_BLUE_DOWN = tmp_coords_jac_7_BLUE_DOWN;
       const real_t p_affine_const_1_2_BLUE_DOWN = tmp_coords_jac_9_BLUE_DOWN;
       const real_t p_affine_const_2_0_BLUE_DOWN = tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0) + tmp_coords_jac_5_BLUE_DOWN;
       const real_t p_affine_const_2_1_BLUE_DOWN = tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1) + tmp_coords_jac_7_BLUE_DOWN;
       const real_t p_affine_const_2_2_BLUE_DOWN = tmp_coords_jac_0_BLUE_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2) + tmp_coords_jac_9_BLUE_DOWN;
       const real_t p_affine_const_3_0_BLUE_DOWN = tmp_coords_jac_1_BLUE_DOWN + tmp_coords_jac_4_BLUE_DOWN;
       const real_t p_affine_const_3_1_BLUE_DOWN = tmp_coords_jac_2_BLUE_DOWN + tmp_coords_jac_6_BLUE_DOWN;
       const real_t p_affine_const_3_2_BLUE_DOWN = tmp_coords_jac_3_BLUE_DOWN + tmp_coords_jac_8_BLUE_DOWN;
       const real_t jac_affine_0_0_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_1_0_BLUE_DOWN;
       const real_t jac_affine_0_1_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_2_0_BLUE_DOWN;
       const real_t jac_affine_0_2_BLUE_DOWN = -p_affine_const_0_0_BLUE_DOWN + p_affine_const_3_0_BLUE_DOWN;
       const real_t jac_affine_1_0_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_1_1_BLUE_DOWN;
       const real_t jac_affine_1_1_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_2_1_BLUE_DOWN;
       const real_t tmp_coords_jac_14_BLUE_DOWN = jac_affine_0_2_BLUE_DOWN*jac_affine_1_1_BLUE_DOWN;
       const real_t jac_affine_1_2_BLUE_DOWN = -p_affine_const_0_1_BLUE_DOWN + p_affine_const_3_1_BLUE_DOWN;
       const real_t tmp_coords_jac_12_BLUE_DOWN = jac_affine_0_1_BLUE_DOWN*jac_affine_1_2_BLUE_DOWN;
       const real_t jac_affine_2_0_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_1_2_BLUE_DOWN;
       const real_t jac_affine_2_1_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_2_2_BLUE_DOWN;
       const real_t tmp_coords_jac_11_BLUE_DOWN = jac_affine_1_2_BLUE_DOWN*jac_affine_2_1_BLUE_DOWN;
       const real_t jac_affine_2_2_BLUE_DOWN = -p_affine_const_0_2_BLUE_DOWN + p_affine_const_3_2_BLUE_DOWN;
       const real_t tmp_coords_jac_10_BLUE_DOWN = jac_affine_1_1_BLUE_DOWN*jac_affine_2_2_BLUE_DOWN;
       const real_t tmp_coords_jac_13_BLUE_DOWN = jac_affine_0_1_BLUE_DOWN*jac_affine_2_2_BLUE_DOWN;
       const real_t tmp_coords_jac_15_BLUE_DOWN = jac_affine_0_0_BLUE_DOWN*tmp_coords_jac_10_BLUE_DOWN - jac_affine_0_0_BLUE_DOWN*tmp_coords_jac_11_BLUE_DOWN + jac_affine_0_2_BLUE_DOWN*jac_affine_1_0_BLUE_DOWN*jac_affine_2_1_BLUE_DOWN - jac_affine_1_0_BLUE_DOWN*tmp_coords_jac_13_BLUE_DOWN + jac_affine_2_0_BLUE_DOWN*tmp_coords_jac_12_BLUE_DOWN - jac_affine_2_0_BLUE_DOWN*tmp_coords_jac_14_BLUE_DOWN;
       const real_t tmp_coords_jac_16_BLUE_DOWN = 1.0 / (tmp_coords_jac_15_BLUE_DOWN);
       const real_t jac_affine_inv_0_0_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(tmp_coords_jac_10_BLUE_DOWN - tmp_coords_jac_11_BLUE_DOWN);
       const real_t jac_affine_inv_0_1_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(jac_affine_0_2_BLUE_DOWN*jac_affine_2_1_BLUE_DOWN - tmp_coords_jac_13_BLUE_DOWN);
       const real_t jac_affine_inv_0_2_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(tmp_coords_jac_12_BLUE_DOWN - tmp_coords_jac_14_BLUE_DOWN);
       const real_t jac_affine_inv_1_0_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(-jac_affine_1_0_BLUE_DOWN*jac_affine_2_2_BLUE_DOWN + jac_affine_1_2_BLUE_DOWN*jac_affine_2_0_BLUE_DOWN);
       const real_t jac_affine_inv_1_1_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(jac_affine_0_0_BLUE_DOWN*jac_affine_2_2_BLUE_DOWN - jac_affine_0_2_BLUE_DOWN*jac_affine_2_0_BLUE_DOWN);
       const real_t jac_affine_inv_1_2_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(-jac_affine_0_0_BLUE_DOWN*jac_affine_1_2_BLUE_DOWN + jac_affine_0_2_BLUE_DOWN*jac_affine_1_0_BLUE_DOWN);
       const real_t jac_affine_inv_2_0_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(jac_affine_1_0_BLUE_DOWN*jac_affine_2_1_BLUE_DOWN - jac_affine_1_1_BLUE_DOWN*jac_affine_2_0_BLUE_DOWN);
       const real_t jac_affine_inv_2_1_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(-jac_affine_0_0_BLUE_DOWN*jac_affine_2_1_BLUE_DOWN + jac_affine_0_1_BLUE_DOWN*jac_affine_2_0_BLUE_DOWN);
       const real_t jac_affine_inv_2_2_BLUE_DOWN = tmp_coords_jac_16_BLUE_DOWN*(jac_affine_0_0_BLUE_DOWN*jac_affine_1_1_BLUE_DOWN - jac_affine_0_1_BLUE_DOWN*jac_affine_1_0_BLUE_DOWN);
       const real_t abs_det_jac_affine_BLUE_DOWN = abs(tmp_coords_jac_15_BLUE_DOWN);
       {
          /* CellType.BLUE_DOWN */
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_0_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_3_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_3_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_3_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_10 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_11 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_12 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_13 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_14 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_15 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_16 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_17 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_18 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_19 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_20 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_21 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_22 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_23 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_24 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_25 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_26 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_27 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_28 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_29 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d rho_dof_0 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_1 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_2 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_3 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                const __m256d tmp_qloop_13 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_1);
                const __m256d tmp_qloop_14 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_2);
                const __m256d tmp_qloop_15 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_3);
                const __m256d tmp_qloop_16 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))));
                const __m256d tmp_qloop_29 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))));
                const __m256d tmp_qloop_31 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN,jac_affine_inv_0_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN,jac_affine_inv_0_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN,jac_affine_inv_0_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN,jac_affine_inv_1_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN,jac_affine_inv_1_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN,jac_affine_inv_1_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN,jac_affine_inv_2_0_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN,jac_affine_inv_2_1_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN,jac_affine_inv_2_2_BLUE_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))));
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const __m256d tmp_qloop_0 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_1 = _mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_2 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_3 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_4 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_5 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_6 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_7 = _mm256_mul_pd(tmp_qloop_6,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_8 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_9 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_10 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_11 = _mm256_add_pd(tmp_qloop_10,tmp_qloop_9);
                   const __m256d tmp_qloop_12 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_qloop_1),tmp_qloop_11),tmp_qloop_3),tmp_qloop_5),tmp_qloop_7);
                   const __m256d tmp_qloop_17 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0));
                   const __m256d tmp_qloop_18 = _mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(rho_dof_1,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(rho_dof_2,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(rho_dof_3,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_mul_pd(rho_dof_0,tmp_qloop_17))),_mm256_set_pd(_data_q_w[q],_data_q_w[q],_data_q_w[q],_data_q_w[q])),_mm256_set_pd(abs_det_jac_affine_BLUE_DOWN,abs_det_jac_affine_BLUE_DOWN,abs_det_jac_affine_BLUE_DOWN,abs_det_jac_affine_BLUE_DOWN)),_mm256_set_pd(abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending));
                   const __m256d tmp_qloop_19 = _mm256_mul_pd(tmp_qloop_17,tmp_qloop_18);
                   const __m256d tmp_qloop_20 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_19);
                   const __m256d tmp_qloop_21 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_qloop_1);
                   const __m256d tmp_qloop_22 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_qloop_3);
                   const __m256d tmp_qloop_23 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_qloop_5);
                   const __m256d tmp_qloop_24 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_25 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_mul_pd(tmp_qloop_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_24,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_26 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_27 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_mul_pd(tmp_qloop_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_26,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_28 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0)));
                   const __m256d tmp_qloop_30 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_29);
                   const __m256d tmp_qloop_32 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_31);
                   const __m256d tmp_qloop_33 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_34 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_33);
                   const __m256d tmp_qloop_35 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_36 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_35);
                   const __m256d tmp_qloop_37 = _mm256_mul_pd(tmp_qloop_36,tmp_qloop_9);
                   const __m256d tmp_qloop_38 = _mm256_mul_pd(tmp_qloop_0,tmp_qloop_18);
                   const __m256d tmp_qloop_39 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_38);
                   const __m256d tmp_qloop_40 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_33);
                   const __m256d tmp_qloop_41 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_35);
                   const __m256d tmp_qloop_42 = _mm256_mul_pd(tmp_qloop_41,tmp_qloop_9);
                   const __m256d tmp_qloop_43 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_38);
                   const __m256d tmp_qloop_44 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_33);
                   const __m256d tmp_qloop_45 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_35);
                   const __m256d tmp_qloop_46 = _mm256_mul_pd(tmp_qloop_45,tmp_qloop_9);
                   const __m256d tmp_qloop_47 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_38);
                   const __m256d tmp_qloop_48 = _mm256_mul_pd(_mm256_mul_pd(tmp_qloop_18,tmp_qloop_2),tmp_qloop_8);
                   const __m256d tmp_qloop_49 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_50 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_49);
                   const __m256d tmp_qloop_51 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_49);
                   const __m256d tmp_qloop_52 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_49);
                   const __m256d q_tmp_0_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_20);
                   const __m256d q_tmp_0_1 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_21);
                   const __m256d q_tmp_0_2 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_22);
                   const __m256d q_tmp_0_3 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_23);
                   const __m256d q_tmp_0_4 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_20);
                   const __m256d q_tmp_0_5 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_9);
                   const __m256d q_tmp_0_6 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_7);
                   const __m256d q_tmp_0_7 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_25);
                   const __m256d q_tmp_0_8 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_27);
                   const __m256d q_tmp_0_9 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_28);
                   const __m256d q_tmp_0_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_30);
                   const __m256d q_tmp_0_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_30);
                   const __m256d q_tmp_0_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_30);
                   const __m256d q_tmp_0_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_30);
                   const __m256d q_tmp_0_14 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_30);
                   const __m256d q_tmp_0_15 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_9);
                   const __m256d q_tmp_0_16 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_7);
                   const __m256d q_tmp_0_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_30);
                   const __m256d q_tmp_0_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_30);
                   const __m256d q_tmp_0_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_30);
                   const __m256d q_tmp_0_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_32);
                   const __m256d q_tmp_0_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_32);
                   const __m256d q_tmp_0_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_32);
                   const __m256d q_tmp_0_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_32);
                   const __m256d q_tmp_0_24 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_32);
                   const __m256d q_tmp_0_25 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_9);
                   const __m256d q_tmp_0_26 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_7);
                   const __m256d q_tmp_0_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_32);
                   const __m256d q_tmp_0_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_32);
                   const __m256d q_tmp_0_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_32);
                   const __m256d q_tmp_1_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_34);
                   const __m256d q_tmp_1_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_34);
                   const __m256d q_tmp_1_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_34);
                   const __m256d q_tmp_1_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_34);
                   const __m256d q_tmp_1_4 = tmp_qloop_37;
                   const __m256d q_tmp_1_5 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_8);
                   const __m256d q_tmp_1_6 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_6);
                   const __m256d q_tmp_1_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_34);
                   const __m256d q_tmp_1_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_34);
                   const __m256d q_tmp_1_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_34);
                   const __m256d q_tmp_1_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_40);
                   const __m256d q_tmp_1_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_40);
                   const __m256d q_tmp_1_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_40);
                   const __m256d q_tmp_1_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_40);
                   const __m256d q_tmp_1_14 = tmp_qloop_42;
                   const __m256d q_tmp_1_15 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_8);
                   const __m256d q_tmp_1_16 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_6);
                   const __m256d q_tmp_1_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_40);
                   const __m256d q_tmp_1_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_40);
                   const __m256d q_tmp_1_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_40);
                   const __m256d q_tmp_1_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_44);
                   const __m256d q_tmp_1_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_44);
                   const __m256d q_tmp_1_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_44);
                   const __m256d q_tmp_1_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_44);
                   const __m256d q_tmp_1_24 = tmp_qloop_46;
                   const __m256d q_tmp_1_25 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_8);
                   const __m256d q_tmp_1_26 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_6);
                   const __m256d q_tmp_1_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_44);
                   const __m256d q_tmp_1_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_44);
                   const __m256d q_tmp_1_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_44);
                   const __m256d q_tmp_2_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_36);
                   const __m256d q_tmp_2_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_36);
                   const __m256d q_tmp_2_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_36);
                   const __m256d q_tmp_2_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_36);
                   const __m256d q_tmp_2_4 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_48);
                   const __m256d q_tmp_2_5 = tmp_qloop_37;
                   const __m256d q_tmp_2_6 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_34);
                   const __m256d q_tmp_2_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_36);
                   const __m256d q_tmp_2_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_36);
                   const __m256d q_tmp_2_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_36);
                   const __m256d q_tmp_2_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_41);
                   const __m256d q_tmp_2_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_41);
                   const __m256d q_tmp_2_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_41);
                   const __m256d q_tmp_2_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_41);
                   const __m256d q_tmp_2_14 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_48);
                   const __m256d q_tmp_2_15 = tmp_qloop_42;
                   const __m256d q_tmp_2_16 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_40);
                   const __m256d q_tmp_2_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_41);
                   const __m256d q_tmp_2_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_41);
                   const __m256d q_tmp_2_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_41);
                   const __m256d q_tmp_2_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_45);
                   const __m256d q_tmp_2_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_45);
                   const __m256d q_tmp_2_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_45);
                   const __m256d q_tmp_2_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_45);
                   const __m256d q_tmp_2_24 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_48);
                   const __m256d q_tmp_2_25 = tmp_qloop_46;
                   const __m256d q_tmp_2_26 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_44);
                   const __m256d q_tmp_2_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_45);
                   const __m256d q_tmp_2_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_45);
                   const __m256d q_tmp_2_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_45);
                   const __m256d q_tmp_3_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_50);
                   const __m256d q_tmp_3_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_50);
                   const __m256d q_tmp_3_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_50);
                   const __m256d q_tmp_3_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_50);
                   const __m256d q_tmp_3_4 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_36);
                   const __m256d q_tmp_3_5 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_34);
                   const __m256d q_tmp_3_6 = tmp_qloop_37;
                   const __m256d q_tmp_3_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_50);
                   const __m256d q_tmp_3_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_50);
                   const __m256d q_tmp_3_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_50);
                   const __m256d q_tmp_3_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_51);
                   const __m256d q_tmp_3_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_51);
                   const __m256d q_tmp_3_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_51);
                   const __m256d q_tmp_3_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_51);
                   const __m256d q_tmp_3_14 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_41);
                   const __m256d q_tmp_3_15 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_40);
                   const __m256d q_tmp_3_16 = tmp_qloop_42;
                   const __m256d q_tmp_3_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_51);
                   const __m256d q_tmp_3_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_51);
                   const __m256d q_tmp_3_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_51);
                   const __m256d q_tmp_3_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_52);
                   const __m256d q_tmp_3_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_52);
                   const __m256d q_tmp_3_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_52);
                   const __m256d q_tmp_3_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_52);
                   const __m256d q_tmp_3_24 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_45);
                   const __m256d q_tmp_3_25 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_44);
                   const __m256d q_tmp_3_26 = tmp_qloop_46;
                   const __m256d q_tmp_3_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_52);
                   const __m256d q_tmp_3_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_52);
                   const __m256d q_tmp_3_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_52);
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,q_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,q_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,q_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,q_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,q_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,q_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,q_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,q_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,q_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,q_tmp_0_9);
                   q_acc_0_10 = _mm256_add_pd(q_acc_0_10,q_tmp_0_10);
                   q_acc_0_11 = _mm256_add_pd(q_acc_0_11,q_tmp_0_11);
                   q_acc_0_12 = _mm256_add_pd(q_acc_0_12,q_tmp_0_12);
                   q_acc_0_13 = _mm256_add_pd(q_acc_0_13,q_tmp_0_13);
                   q_acc_0_14 = _mm256_add_pd(q_acc_0_14,q_tmp_0_14);
                   q_acc_0_15 = _mm256_add_pd(q_acc_0_15,q_tmp_0_15);
                   q_acc_0_16 = _mm256_add_pd(q_acc_0_16,q_tmp_0_16);
                   q_acc_0_17 = _mm256_add_pd(q_acc_0_17,q_tmp_0_17);
                   q_acc_0_18 = _mm256_add_pd(q_acc_0_18,q_tmp_0_18);
                   q_acc_0_19 = _mm256_add_pd(q_acc_0_19,q_tmp_0_19);
                   q_acc_0_20 = _mm256_add_pd(q_acc_0_20,q_tmp_0_20);
                   q_acc_0_21 = _mm256_add_pd(q_acc_0_21,q_tmp_0_21);
                   q_acc_0_22 = _mm256_add_pd(q_acc_0_22,q_tmp_0_22);
                   q_acc_0_23 = _mm256_add_pd(q_acc_0_23,q_tmp_0_23);
                   q_acc_0_24 = _mm256_add_pd(q_acc_0_24,q_tmp_0_24);
                   q_acc_0_25 = _mm256_add_pd(q_acc_0_25,q_tmp_0_25);
                   q_acc_0_26 = _mm256_add_pd(q_acc_0_26,q_tmp_0_26);
                   q_acc_0_27 = _mm256_add_pd(q_acc_0_27,q_tmp_0_27);
                   q_acc_0_28 = _mm256_add_pd(q_acc_0_28,q_tmp_0_28);
                   q_acc_0_29 = _mm256_add_pd(q_acc_0_29,q_tmp_0_29);
                   q_acc_1_0 = _mm256_add_pd(q_acc_1_0,q_tmp_1_0);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,q_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,q_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,q_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,q_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,q_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,q_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,q_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,q_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,q_tmp_1_9);
                   q_acc_1_10 = _mm256_add_pd(q_acc_1_10,q_tmp_1_10);
                   q_acc_1_11 = _mm256_add_pd(q_acc_1_11,q_tmp_1_11);
                   q_acc_1_12 = _mm256_add_pd(q_acc_1_12,q_tmp_1_12);
                   q_acc_1_13 = _mm256_add_pd(q_acc_1_13,q_tmp_1_13);
                   q_acc_1_14 = _mm256_add_pd(q_acc_1_14,q_tmp_1_14);
                   q_acc_1_15 = _mm256_add_pd(q_acc_1_15,q_tmp_1_15);
                   q_acc_1_16 = _mm256_add_pd(q_acc_1_16,q_tmp_1_16);
                   q_acc_1_17 = _mm256_add_pd(q_acc_1_17,q_tmp_1_17);
                   q_acc_1_18 = _mm256_add_pd(q_acc_1_18,q_tmp_1_18);
                   q_acc_1_19 = _mm256_add_pd(q_acc_1_19,q_tmp_1_19);
                   q_acc_1_20 = _mm256_add_pd(q_acc_1_20,q_tmp_1_20);
                   q_acc_1_21 = _mm256_add_pd(q_acc_1_21,q_tmp_1_21);
                   q_acc_1_22 = _mm256_add_pd(q_acc_1_22,q_tmp_1_22);
                   q_acc_1_23 = _mm256_add_pd(q_acc_1_23,q_tmp_1_23);
                   q_acc_1_24 = _mm256_add_pd(q_acc_1_24,q_tmp_1_24);
                   q_acc_1_25 = _mm256_add_pd(q_acc_1_25,q_tmp_1_25);
                   q_acc_1_26 = _mm256_add_pd(q_acc_1_26,q_tmp_1_26);
                   q_acc_1_27 = _mm256_add_pd(q_acc_1_27,q_tmp_1_27);
                   q_acc_1_28 = _mm256_add_pd(q_acc_1_28,q_tmp_1_28);
                   q_acc_1_29 = _mm256_add_pd(q_acc_1_29,q_tmp_1_29);
                   q_acc_2_0 = _mm256_add_pd(q_acc_2_0,q_tmp_2_0);
                   q_acc_2_1 = _mm256_add_pd(q_acc_2_1,q_tmp_2_1);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,q_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,q_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,q_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,q_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,q_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,q_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,q_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,q_tmp_2_9);
                   q_acc_2_10 = _mm256_add_pd(q_acc_2_10,q_tmp_2_10);
                   q_acc_2_11 = _mm256_add_pd(q_acc_2_11,q_tmp_2_11);
                   q_acc_2_12 = _mm256_add_pd(q_acc_2_12,q_tmp_2_12);
                   q_acc_2_13 = _mm256_add_pd(q_acc_2_13,q_tmp_2_13);
                   q_acc_2_14 = _mm256_add_pd(q_acc_2_14,q_tmp_2_14);
                   q_acc_2_15 = _mm256_add_pd(q_acc_2_15,q_tmp_2_15);
                   q_acc_2_16 = _mm256_add_pd(q_acc_2_16,q_tmp_2_16);
                   q_acc_2_17 = _mm256_add_pd(q_acc_2_17,q_tmp_2_17);
                   q_acc_2_18 = _mm256_add_pd(q_acc_2_18,q_tmp_2_18);
                   q_acc_2_19 = _mm256_add_pd(q_acc_2_19,q_tmp_2_19);
                   q_acc_2_20 = _mm256_add_pd(q_acc_2_20,q_tmp_2_20);
                   q_acc_2_21 = _mm256_add_pd(q_acc_2_21,q_tmp_2_21);
                   q_acc_2_22 = _mm256_add_pd(q_acc_2_22,q_tmp_2_22);
                   q_acc_2_23 = _mm256_add_pd(q_acc_2_23,q_tmp_2_23);
                   q_acc_2_24 = _mm256_add_pd(q_acc_2_24,q_tmp_2_24);
                   q_acc_2_25 = _mm256_add_pd(q_acc_2_25,q_tmp_2_25);
                   q_acc_2_26 = _mm256_add_pd(q_acc_2_26,q_tmp_2_26);
                   q_acc_2_27 = _mm256_add_pd(q_acc_2_27,q_tmp_2_27);
                   q_acc_2_28 = _mm256_add_pd(q_acc_2_28,q_tmp_2_28);
                   q_acc_2_29 = _mm256_add_pd(q_acc_2_29,q_tmp_2_29);
                   q_acc_3_0 = _mm256_add_pd(q_acc_3_0,q_tmp_3_0);
                   q_acc_3_1 = _mm256_add_pd(q_acc_3_1,q_tmp_3_1);
                   q_acc_3_2 = _mm256_add_pd(q_acc_3_2,q_tmp_3_2);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,q_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,q_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,q_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,q_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,q_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,q_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,q_tmp_3_9);
                   q_acc_3_10 = _mm256_add_pd(q_acc_3_10,q_tmp_3_10);
                   q_acc_3_11 = _mm256_add_pd(q_acc_3_11,q_tmp_3_11);
                   q_acc_3_12 = _mm256_add_pd(q_acc_3_12,q_tmp_3_12);
                   q_acc_3_13 = _mm256_add_pd(q_acc_3_13,q_tmp_3_13);
                   q_acc_3_14 = _mm256_add_pd(q_acc_3_14,q_tmp_3_14);
                   q_acc_3_15 = _mm256_add_pd(q_acc_3_15,q_tmp_3_15);
                   q_acc_3_16 = _mm256_add_pd(q_acc_3_16,q_tmp_3_16);
                   q_acc_3_17 = _mm256_add_pd(q_acc_3_17,q_tmp_3_17);
                   q_acc_3_18 = _mm256_add_pd(q_acc_3_18,q_tmp_3_18);
                   q_acc_3_19 = _mm256_add_pd(q_acc_3_19,q_tmp_3_19);
                   q_acc_3_20 = _mm256_add_pd(q_acc_3_20,q_tmp_3_20);
                   q_acc_3_21 = _mm256_add_pd(q_acc_3_21,q_tmp_3_21);
                   q_acc_3_22 = _mm256_add_pd(q_acc_3_22,q_tmp_3_22);
                   q_acc_3_23 = _mm256_add_pd(q_acc_3_23,q_tmp_3_23);
                   q_acc_3_24 = _mm256_add_pd(q_acc_3_24,q_tmp_3_24);
                   q_acc_3_25 = _mm256_add_pd(q_acc_3_25,q_tmp_3_25);
                   q_acc_3_26 = _mm256_add_pd(q_acc_3_26,q_tmp_3_26);
                   q_acc_3_27 = _mm256_add_pd(q_acc_3_27,q_tmp_3_27);
                   q_acc_3_28 = _mm256_add_pd(q_acc_3_28,q_tmp_3_28);
                   q_acc_3_29 = _mm256_add_pd(q_acc_3_29,q_tmp_3_29);
                }
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_10,src_dof_10)),_mm256_mul_pd(q_acc_0_11,src_dof_11)),_mm256_mul_pd(q_acc_0_12,src_dof_12)),_mm256_mul_pd(q_acc_0_13,src_dof_13)),_mm256_mul_pd(q_acc_0_14,src_dof_14)),_mm256_mul_pd(q_acc_0_15,src_dof_15)),_mm256_mul_pd(q_acc_0_16,src_dof_16)),_mm256_mul_pd(q_acc_0_17,src_dof_17)),_mm256_mul_pd(q_acc_0_18,src_dof_18)),_mm256_mul_pd(q_acc_0_19,src_dof_19)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_20,src_dof_20)),_mm256_mul_pd(q_acc_0_21,src_dof_21)),_mm256_mul_pd(q_acc_0_22,src_dof_22)),_mm256_mul_pd(q_acc_0_23,src_dof_23)),_mm256_mul_pd(q_acc_0_24,src_dof_24)),_mm256_mul_pd(q_acc_0_25,src_dof_25)),_mm256_mul_pd(q_acc_0_26,src_dof_26)),_mm256_mul_pd(q_acc_0_27,src_dof_27)),_mm256_mul_pd(q_acc_0_28,src_dof_28)),_mm256_mul_pd(q_acc_0_29,src_dof_29)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_10,src_dof_10)),_mm256_mul_pd(q_acc_1_11,src_dof_11)),_mm256_mul_pd(q_acc_1_12,src_dof_12)),_mm256_mul_pd(q_acc_1_13,src_dof_13)),_mm256_mul_pd(q_acc_1_14,src_dof_14)),_mm256_mul_pd(q_acc_1_15,src_dof_15)),_mm256_mul_pd(q_acc_1_16,src_dof_16)),_mm256_mul_pd(q_acc_1_17,src_dof_17)),_mm256_mul_pd(q_acc_1_18,src_dof_18)),_mm256_mul_pd(q_acc_1_19,src_dof_19)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_20,src_dof_20)),_mm256_mul_pd(q_acc_1_21,src_dof_21)),_mm256_mul_pd(q_acc_1_22,src_dof_22)),_mm256_mul_pd(q_acc_1_23,src_dof_23)),_mm256_mul_pd(q_acc_1_24,src_dof_24)),_mm256_mul_pd(q_acc_1_25,src_dof_25)),_mm256_mul_pd(q_acc_1_26,src_dof_26)),_mm256_mul_pd(q_acc_1_27,src_dof_27)),_mm256_mul_pd(q_acc_1_28,src_dof_28)),_mm256_mul_pd(q_acc_1_29,src_dof_29)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_10,src_dof_10)),_mm256_mul_pd(q_acc_2_11,src_dof_11)),_mm256_mul_pd(q_acc_2_12,src_dof_12)),_mm256_mul_pd(q_acc_2_13,src_dof_13)),_mm256_mul_pd(q_acc_2_14,src_dof_14)),_mm256_mul_pd(q_acc_2_15,src_dof_15)),_mm256_mul_pd(q_acc_2_16,src_dof_16)),_mm256_mul_pd(q_acc_2_17,src_dof_17)),_mm256_mul_pd(q_acc_2_18,src_dof_18)),_mm256_mul_pd(q_acc_2_19,src_dof_19)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_20,src_dof_20)),_mm256_mul_pd(q_acc_2_21,src_dof_21)),_mm256_mul_pd(q_acc_2_22,src_dof_22)),_mm256_mul_pd(q_acc_2_23,src_dof_23)),_mm256_mul_pd(q_acc_2_24,src_dof_24)),_mm256_mul_pd(q_acc_2_25,src_dof_25)),_mm256_mul_pd(q_acc_2_26,src_dof_26)),_mm256_mul_pd(q_acc_2_27,src_dof_27)),_mm256_mul_pd(q_acc_2_28,src_dof_28)),_mm256_mul_pd(q_acc_2_29,src_dof_29)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_10,src_dof_10)),_mm256_mul_pd(q_acc_3_11,src_dof_11)),_mm256_mul_pd(q_acc_3_12,src_dof_12)),_mm256_mul_pd(q_acc_3_13,src_dof_13)),_mm256_mul_pd(q_acc_3_14,src_dof_14)),_mm256_mul_pd(q_acc_3_15,src_dof_15)),_mm256_mul_pd(q_acc_3_16,src_dof_16)),_mm256_mul_pd(q_acc_3_17,src_dof_17)),_mm256_mul_pd(q_acc_3_18,src_dof_18)),_mm256_mul_pd(q_acc_3_19,src_dof_19)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_20,src_dof_20)),_mm256_mul_pd(q_acc_3_21,src_dof_21)),_mm256_mul_pd(q_acc_3_22,src_dof_22)),_mm256_mul_pd(q_acc_3_23,src_dof_23)),_mm256_mul_pd(q_acc_3_24,src_dof_24)),_mm256_mul_pd(q_acc_3_25,src_dof_25)),_mm256_mul_pd(q_acc_3_26,src_dof_26)),_mm256_mul_pd(q_acc_3_27,src_dof_27)),_mm256_mul_pd(q_acc_3_28,src_dof_28)),_mm256_mul_pd(q_acc_3_29,src_dof_29)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t src_dof_0 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_1 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_2 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_3 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_4 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_5 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_6 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_7 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_8 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_9 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_10 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_11 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_12 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_13 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_14 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_15 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_16 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_17 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_18 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_19 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_20 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_21 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_22 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_23 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_24 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_25 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_26 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_27 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_28 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_29 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t rho_dof_0 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_1 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_2 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_3 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                real_t q_acc_0_0 = 0.0;
                real_t q_acc_0_1 = 0.0;
                real_t q_acc_0_2 = 0.0;
                real_t q_acc_0_3 = 0.0;
                real_t q_acc_0_4 = 0.0;
                real_t q_acc_0_5 = 0.0;
                real_t q_acc_0_6 = 0.0;
                real_t q_acc_0_7 = 0.0;
                real_t q_acc_0_8 = 0.0;
                real_t q_acc_0_9 = 0.0;
                real_t q_acc_0_10 = 0.0;
                real_t q_acc_0_11 = 0.0;
                real_t q_acc_0_12 = 0.0;
                real_t q_acc_0_13 = 0.0;
                real_t q_acc_0_14 = 0.0;
                real_t q_acc_0_15 = 0.0;
                real_t q_acc_0_16 = 0.0;
                real_t q_acc_0_17 = 0.0;
                real_t q_acc_0_18 = 0.0;
                real_t q_acc_0_19 = 0.0;
                real_t q_acc_0_20 = 0.0;
                real_t q_acc_0_21 = 0.0;
                real_t q_acc_0_22 = 0.0;
                real_t q_acc_0_23 = 0.0;
                real_t q_acc_0_24 = 0.0;
                real_t q_acc_0_25 = 0.0;
                real_t q_acc_0_26 = 0.0;
                real_t q_acc_0_27 = 0.0;
                real_t q_acc_0_28 = 0.0;
                real_t q_acc_0_29 = 0.0;
                real_t q_acc_1_0 = 0.0;
                real_t q_acc_1_1 = 0.0;
                real_t q_acc_1_2 = 0.0;
                real_t q_acc_1_3 = 0.0;
                real_t q_acc_1_4 = 0.0;
                real_t q_acc_1_5 = 0.0;
                real_t q_acc_1_6 = 0.0;
                real_t q_acc_1_7 = 0.0;
                real_t q_acc_1_8 = 0.0;
                real_t q_acc_1_9 = 0.0;
                real_t q_acc_1_10 = 0.0;
                real_t q_acc_1_11 = 0.0;
                real_t q_acc_1_12 = 0.0;
                real_t q_acc_1_13 = 0.0;
                real_t q_acc_1_14 = 0.0;
                real_t q_acc_1_15 = 0.0;
                real_t q_acc_1_16 = 0.0;
                real_t q_acc_1_17 = 0.0;
                real_t q_acc_1_18 = 0.0;
                real_t q_acc_1_19 = 0.0;
                real_t q_acc_1_20 = 0.0;
                real_t q_acc_1_21 = 0.0;
                real_t q_acc_1_22 = 0.0;
                real_t q_acc_1_23 = 0.0;
                real_t q_acc_1_24 = 0.0;
                real_t q_acc_1_25 = 0.0;
                real_t q_acc_1_26 = 0.0;
                real_t q_acc_1_27 = 0.0;
                real_t q_acc_1_28 = 0.0;
                real_t q_acc_1_29 = 0.0;
                real_t q_acc_2_0 = 0.0;
                real_t q_acc_2_1 = 0.0;
                real_t q_acc_2_2 = 0.0;
                real_t q_acc_2_3 = 0.0;
                real_t q_acc_2_4 = 0.0;
                real_t q_acc_2_5 = 0.0;
                real_t q_acc_2_6 = 0.0;
                real_t q_acc_2_7 = 0.0;
                real_t q_acc_2_8 = 0.0;
                real_t q_acc_2_9 = 0.0;
                real_t q_acc_2_10 = 0.0;
                real_t q_acc_2_11 = 0.0;
                real_t q_acc_2_12 = 0.0;
                real_t q_acc_2_13 = 0.0;
                real_t q_acc_2_14 = 0.0;
                real_t q_acc_2_15 = 0.0;
                real_t q_acc_2_16 = 0.0;
                real_t q_acc_2_17 = 0.0;
                real_t q_acc_2_18 = 0.0;
                real_t q_acc_2_19 = 0.0;
                real_t q_acc_2_20 = 0.0;
                real_t q_acc_2_21 = 0.0;
                real_t q_acc_2_22 = 0.0;
                real_t q_acc_2_23 = 0.0;
                real_t q_acc_2_24 = 0.0;
                real_t q_acc_2_25 = 0.0;
                real_t q_acc_2_26 = 0.0;
                real_t q_acc_2_27 = 0.0;
                real_t q_acc_2_28 = 0.0;
                real_t q_acc_2_29 = 0.0;
                real_t q_acc_3_0 = 0.0;
                real_t q_acc_3_1 = 0.0;
                real_t q_acc_3_2 = 0.0;
                real_t q_acc_3_3 = 0.0;
                real_t q_acc_3_4 = 0.0;
                real_t q_acc_3_5 = 0.0;
                real_t q_acc_3_6 = 0.0;
                real_t q_acc_3_7 = 0.0;
                real_t q_acc_3_8 = 0.0;
                real_t q_acc_3_9 = 0.0;
                real_t q_acc_3_10 = 0.0;
                real_t q_acc_3_11 = 0.0;
                real_t q_acc_3_12 = 0.0;
                real_t q_acc_3_13 = 0.0;
                real_t q_acc_3_14 = 0.0;
                real_t q_acc_3_15 = 0.0;
                real_t q_acc_3_16 = 0.0;
                real_t q_acc_3_17 = 0.0;
                real_t q_acc_3_18 = 0.0;
                real_t q_acc_3_19 = 0.0;
                real_t q_acc_3_20 = 0.0;
                real_t q_acc_3_21 = 0.0;
                real_t q_acc_3_22 = 0.0;
                real_t q_acc_3_23 = 0.0;
                real_t q_acc_3_24 = 0.0;
                real_t q_acc_3_25 = 0.0;
                real_t q_acc_3_26 = 0.0;
                real_t q_acc_3_27 = 0.0;
                real_t q_acc_3_28 = 0.0;
                real_t q_acc_3_29 = 0.0;
                const real_t tmp_qloop_13 = -rho_dof_0 + rho_dof_1;
                const real_t tmp_qloop_14 = -rho_dof_0 + rho_dof_2;
                const real_t tmp_qloop_15 = -rho_dof_0 + rho_dof_3;
                const real_t tmp_qloop_16 = tmp_qloop_13*(jac_affine_inv_0_0_BLUE_DOWN*jac_blending_inv_0_0 + jac_affine_inv_0_1_BLUE_DOWN*jac_blending_inv_1_0 + jac_affine_inv_0_2_BLUE_DOWN*jac_blending_inv_2_0) + tmp_qloop_14*(jac_affine_inv_1_0_BLUE_DOWN*jac_blending_inv_0_0 + jac_affine_inv_1_1_BLUE_DOWN*jac_blending_inv_1_0 + jac_affine_inv_1_2_BLUE_DOWN*jac_blending_inv_2_0) + tmp_qloop_15*(jac_affine_inv_2_0_BLUE_DOWN*jac_blending_inv_0_0 + jac_affine_inv_2_1_BLUE_DOWN*jac_blending_inv_1_0 + jac_affine_inv_2_2_BLUE_DOWN*jac_blending_inv_2_0);
                const real_t tmp_qloop_29 = tmp_qloop_13*(jac_affine_inv_0_0_BLUE_DOWN*jac_blending_inv_0_1 + jac_affine_inv_0_1_BLUE_DOWN*jac_blending_inv_1_1 + jac_affine_inv_0_2_BLUE_DOWN*jac_blending_inv_2_1) + tmp_qloop_14*(jac_affine_inv_1_0_BLUE_DOWN*jac_blending_inv_0_1 + jac_affine_inv_1_1_BLUE_DOWN*jac_blending_inv_1_1 + jac_affine_inv_1_2_BLUE_DOWN*jac_blending_inv_2_1) + tmp_qloop_15*(jac_affine_inv_2_0_BLUE_DOWN*jac_blending_inv_0_1 + jac_affine_inv_2_1_BLUE_DOWN*jac_blending_inv_1_1 + jac_affine_inv_2_2_BLUE_DOWN*jac_blending_inv_2_1);
                const real_t tmp_qloop_31 = tmp_qloop_13*(jac_affine_inv_0_0_BLUE_DOWN*jac_blending_inv_0_2 + jac_affine_inv_0_1_BLUE_DOWN*jac_blending_inv_1_2 + jac_affine_inv_0_2_BLUE_DOWN*jac_blending_inv_2_2) + tmp_qloop_14*(jac_affine_inv_1_0_BLUE_DOWN*jac_blending_inv_0_2 + jac_affine_inv_1_1_BLUE_DOWN*jac_blending_inv_1_2 + jac_affine_inv_1_2_BLUE_DOWN*jac_blending_inv_2_2) + tmp_qloop_15*(jac_affine_inv_2_0_BLUE_DOWN*jac_blending_inv_0_2 + jac_affine_inv_2_1_BLUE_DOWN*jac_blending_inv_1_2 + jac_affine_inv_2_2_BLUE_DOWN*jac_blending_inv_2_2);
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const real_t tmp_qloop_0 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const real_t tmp_qloop_1 = tmp_qloop_0*2.0;
                   const real_t tmp_qloop_2 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const real_t tmp_qloop_3 = tmp_qloop_2*2.0;
                   const real_t tmp_qloop_4 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const real_t tmp_qloop_5 = tmp_qloop_4*2.0;
                   const real_t tmp_qloop_6 = 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_7 = tmp_qloop_6*_data_q_p_0[q];
                   const real_t tmp_qloop_8 = 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_9 = tmp_qloop_8*_data_q_p_0[q];
                   const real_t tmp_qloop_10 = tmp_qloop_8*_data_q_p_1[q];
                   const real_t tmp_qloop_11 = tmp_qloop_10 + tmp_qloop_9;
                   const real_t tmp_qloop_12 = tmp_qloop_1 + tmp_qloop_11 + tmp_qloop_3 + tmp_qloop_5 + tmp_qloop_7 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0;
                   const real_t tmp_qloop_17 = 1.0 - _data_q_p_0[q] - _data_q_p_1[q] - _data_q_p_2[q];
                   const real_t tmp_qloop_18 = abs_det_jac_affine_BLUE_DOWN*abs_det_jac_blending*1.0 / (rho_dof_0*tmp_qloop_17 + rho_dof_1*_data_q_p_0[q] + rho_dof_2*_data_q_p_1[q] + rho_dof_3*_data_q_p_2[q])*_data_q_w[q];
                   const real_t tmp_qloop_19 = tmp_qloop_17*tmp_qloop_18;
                   const real_t tmp_qloop_20 = tmp_qloop_16*tmp_qloop_19;
                   const real_t tmp_qloop_21 = tmp_qloop_1 - _data_q_p_0[q];
                   const real_t tmp_qloop_22 = tmp_qloop_3 - _data_q_p_1[q];
                   const real_t tmp_qloop_23 = tmp_qloop_5 - _data_q_p_2[q];
                   const real_t tmp_qloop_24 = tmp_qloop_4*4.0;
                   const real_t tmp_qloop_25 = -tmp_qloop_11 - tmp_qloop_24 + 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_26 = tmp_qloop_2*4.0;
                   const real_t tmp_qloop_27 = -tmp_qloop_10 - tmp_qloop_26 - tmp_qloop_7 + 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_28 = tmp_qloop_0*-4.0 - tmp_qloop_7 - tmp_qloop_9 + 4.0*_data_q_p_0[q];
                   const real_t tmp_qloop_30 = tmp_qloop_19*tmp_qloop_29;
                   const real_t tmp_qloop_32 = tmp_qloop_19*tmp_qloop_31;
                   const real_t tmp_qloop_33 = tmp_qloop_18*_data_q_p_0[q];
                   const real_t tmp_qloop_34 = tmp_qloop_16*tmp_qloop_33;
                   const real_t tmp_qloop_35 = tmp_qloop_18*_data_q_p_1[q];
                   const real_t tmp_qloop_36 = tmp_qloop_16*tmp_qloop_35;
                   const real_t tmp_qloop_37 = tmp_qloop_36*tmp_qloop_9;
                   const real_t tmp_qloop_38 = tmp_qloop_0*tmp_qloop_18;
                   const real_t tmp_qloop_39 = tmp_qloop_16*tmp_qloop_38;
                   const real_t tmp_qloop_40 = tmp_qloop_29*tmp_qloop_33;
                   const real_t tmp_qloop_41 = tmp_qloop_29*tmp_qloop_35;
                   const real_t tmp_qloop_42 = tmp_qloop_41*tmp_qloop_9;
                   const real_t tmp_qloop_43 = tmp_qloop_29*tmp_qloop_38;
                   const real_t tmp_qloop_44 = tmp_qloop_31*tmp_qloop_33;
                   const real_t tmp_qloop_45 = tmp_qloop_31*tmp_qloop_35;
                   const real_t tmp_qloop_46 = tmp_qloop_45*tmp_qloop_9;
                   const real_t tmp_qloop_47 = tmp_qloop_31*tmp_qloop_38;
                   const real_t tmp_qloop_48 = tmp_qloop_18*tmp_qloop_2*tmp_qloop_8;
                   const real_t tmp_qloop_49 = tmp_qloop_18*_data_q_p_2[q];
                   const real_t tmp_qloop_50 = tmp_qloop_16*tmp_qloop_49;
                   const real_t tmp_qloop_51 = tmp_qloop_29*tmp_qloop_49;
                   const real_t tmp_qloop_52 = tmp_qloop_31*tmp_qloop_49;
                   const real_t q_tmp_0_0 = tmp_qloop_12*tmp_qloop_20;
                   const real_t q_tmp_0_1 = tmp_qloop_20*tmp_qloop_21;
                   const real_t q_tmp_0_2 = tmp_qloop_20*tmp_qloop_22;
                   const real_t q_tmp_0_3 = tmp_qloop_20*tmp_qloop_23;
                   const real_t q_tmp_0_4 = tmp_qloop_10*tmp_qloop_20;
                   const real_t q_tmp_0_5 = tmp_qloop_20*tmp_qloop_9;
                   const real_t q_tmp_0_6 = tmp_qloop_20*tmp_qloop_7;
                   const real_t q_tmp_0_7 = tmp_qloop_20*tmp_qloop_25;
                   const real_t q_tmp_0_8 = tmp_qloop_20*tmp_qloop_27;
                   const real_t q_tmp_0_9 = tmp_qloop_20*tmp_qloop_28;
                   const real_t q_tmp_0_10 = tmp_qloop_12*tmp_qloop_30;
                   const real_t q_tmp_0_11 = tmp_qloop_21*tmp_qloop_30;
                   const real_t q_tmp_0_12 = tmp_qloop_22*tmp_qloop_30;
                   const real_t q_tmp_0_13 = tmp_qloop_23*tmp_qloop_30;
                   const real_t q_tmp_0_14 = tmp_qloop_10*tmp_qloop_30;
                   const real_t q_tmp_0_15 = tmp_qloop_30*tmp_qloop_9;
                   const real_t q_tmp_0_16 = tmp_qloop_30*tmp_qloop_7;
                   const real_t q_tmp_0_17 = tmp_qloop_25*tmp_qloop_30;
                   const real_t q_tmp_0_18 = tmp_qloop_27*tmp_qloop_30;
                   const real_t q_tmp_0_19 = tmp_qloop_28*tmp_qloop_30;
                   const real_t q_tmp_0_20 = tmp_qloop_12*tmp_qloop_32;
                   const real_t q_tmp_0_21 = tmp_qloop_21*tmp_qloop_32;
                   const real_t q_tmp_0_22 = tmp_qloop_22*tmp_qloop_32;
                   const real_t q_tmp_0_23 = tmp_qloop_23*tmp_qloop_32;
                   const real_t q_tmp_0_24 = tmp_qloop_10*tmp_qloop_32;
                   const real_t q_tmp_0_25 = tmp_qloop_32*tmp_qloop_9;
                   const real_t q_tmp_0_26 = tmp_qloop_32*tmp_qloop_7;
                   const real_t q_tmp_0_27 = tmp_qloop_25*tmp_qloop_32;
                   const real_t q_tmp_0_28 = tmp_qloop_27*tmp_qloop_32;
                   const real_t q_tmp_0_29 = tmp_qloop_28*tmp_qloop_32;
                   const real_t q_tmp_1_0 = tmp_qloop_12*tmp_qloop_34;
                   const real_t q_tmp_1_1 = tmp_qloop_21*tmp_qloop_34;
                   const real_t q_tmp_1_2 = tmp_qloop_22*tmp_qloop_34;
                   const real_t q_tmp_1_3 = tmp_qloop_23*tmp_qloop_34;
                   const real_t q_tmp_1_4 = tmp_qloop_37;
                   const real_t q_tmp_1_5 = tmp_qloop_39*tmp_qloop_8;
                   const real_t q_tmp_1_6 = tmp_qloop_39*tmp_qloop_6;
                   const real_t q_tmp_1_7 = tmp_qloop_25*tmp_qloop_34;
                   const real_t q_tmp_1_8 = tmp_qloop_27*tmp_qloop_34;
                   const real_t q_tmp_1_9 = tmp_qloop_28*tmp_qloop_34;
                   const real_t q_tmp_1_10 = tmp_qloop_12*tmp_qloop_40;
                   const real_t q_tmp_1_11 = tmp_qloop_21*tmp_qloop_40;
                   const real_t q_tmp_1_12 = tmp_qloop_22*tmp_qloop_40;
                   const real_t q_tmp_1_13 = tmp_qloop_23*tmp_qloop_40;
                   const real_t q_tmp_1_14 = tmp_qloop_42;
                   const real_t q_tmp_1_15 = tmp_qloop_43*tmp_qloop_8;
                   const real_t q_tmp_1_16 = tmp_qloop_43*tmp_qloop_6;
                   const real_t q_tmp_1_17 = tmp_qloop_25*tmp_qloop_40;
                   const real_t q_tmp_1_18 = tmp_qloop_27*tmp_qloop_40;
                   const real_t q_tmp_1_19 = tmp_qloop_28*tmp_qloop_40;
                   const real_t q_tmp_1_20 = tmp_qloop_12*tmp_qloop_44;
                   const real_t q_tmp_1_21 = tmp_qloop_21*tmp_qloop_44;
                   const real_t q_tmp_1_22 = tmp_qloop_22*tmp_qloop_44;
                   const real_t q_tmp_1_23 = tmp_qloop_23*tmp_qloop_44;
                   const real_t q_tmp_1_24 = tmp_qloop_46;
                   const real_t q_tmp_1_25 = tmp_qloop_47*tmp_qloop_8;
                   const real_t q_tmp_1_26 = tmp_qloop_47*tmp_qloop_6;
                   const real_t q_tmp_1_27 = tmp_qloop_25*tmp_qloop_44;
                   const real_t q_tmp_1_28 = tmp_qloop_27*tmp_qloop_44;
                   const real_t q_tmp_1_29 = tmp_qloop_28*tmp_qloop_44;
                   const real_t q_tmp_2_0 = tmp_qloop_12*tmp_qloop_36;
                   const real_t q_tmp_2_1 = tmp_qloop_21*tmp_qloop_36;
                   const real_t q_tmp_2_2 = tmp_qloop_22*tmp_qloop_36;
                   const real_t q_tmp_2_3 = tmp_qloop_23*tmp_qloop_36;
                   const real_t q_tmp_2_4 = tmp_qloop_16*tmp_qloop_48;
                   const real_t q_tmp_2_5 = tmp_qloop_37;
                   const real_t q_tmp_2_6 = tmp_qloop_26*tmp_qloop_34;
                   const real_t q_tmp_2_7 = tmp_qloop_25*tmp_qloop_36;
                   const real_t q_tmp_2_8 = tmp_qloop_27*tmp_qloop_36;
                   const real_t q_tmp_2_9 = tmp_qloop_28*tmp_qloop_36;
                   const real_t q_tmp_2_10 = tmp_qloop_12*tmp_qloop_41;
                   const real_t q_tmp_2_11 = tmp_qloop_21*tmp_qloop_41;
                   const real_t q_tmp_2_12 = tmp_qloop_22*tmp_qloop_41;
                   const real_t q_tmp_2_13 = tmp_qloop_23*tmp_qloop_41;
                   const real_t q_tmp_2_14 = tmp_qloop_29*tmp_qloop_48;
                   const real_t q_tmp_2_15 = tmp_qloop_42;
                   const real_t q_tmp_2_16 = tmp_qloop_26*tmp_qloop_40;
                   const real_t q_tmp_2_17 = tmp_qloop_25*tmp_qloop_41;
                   const real_t q_tmp_2_18 = tmp_qloop_27*tmp_qloop_41;
                   const real_t q_tmp_2_19 = tmp_qloop_28*tmp_qloop_41;
                   const real_t q_tmp_2_20 = tmp_qloop_12*tmp_qloop_45;
                   const real_t q_tmp_2_21 = tmp_qloop_21*tmp_qloop_45;
                   const real_t q_tmp_2_22 = tmp_qloop_22*tmp_qloop_45;
                   const real_t q_tmp_2_23 = tmp_qloop_23*tmp_qloop_45;
                   const real_t q_tmp_2_24 = tmp_qloop_31*tmp_qloop_48;
                   const real_t q_tmp_2_25 = tmp_qloop_46;
                   const real_t q_tmp_2_26 = tmp_qloop_26*tmp_qloop_44;
                   const real_t q_tmp_2_27 = tmp_qloop_25*tmp_qloop_45;
                   const real_t q_tmp_2_28 = tmp_qloop_27*tmp_qloop_45;
                   const real_t q_tmp_2_29 = tmp_qloop_28*tmp_qloop_45;
                   const real_t q_tmp_3_0 = tmp_qloop_12*tmp_qloop_50;
                   const real_t q_tmp_3_1 = tmp_qloop_21*tmp_qloop_50;
                   const real_t q_tmp_3_2 = tmp_qloop_22*tmp_qloop_50;
                   const real_t q_tmp_3_3 = tmp_qloop_23*tmp_qloop_50;
                   const real_t q_tmp_3_4 = tmp_qloop_24*tmp_qloop_36;
                   const real_t q_tmp_3_5 = tmp_qloop_24*tmp_qloop_34;
                   const real_t q_tmp_3_6 = tmp_qloop_37;
                   const real_t q_tmp_3_7 = tmp_qloop_25*tmp_qloop_50;
                   const real_t q_tmp_3_8 = tmp_qloop_27*tmp_qloop_50;
                   const real_t q_tmp_3_9 = tmp_qloop_28*tmp_qloop_50;
                   const real_t q_tmp_3_10 = tmp_qloop_12*tmp_qloop_51;
                   const real_t q_tmp_3_11 = tmp_qloop_21*tmp_qloop_51;
                   const real_t q_tmp_3_12 = tmp_qloop_22*tmp_qloop_51;
                   const real_t q_tmp_3_13 = tmp_qloop_23*tmp_qloop_51;
                   const real_t q_tmp_3_14 = tmp_qloop_24*tmp_qloop_41;
                   const real_t q_tmp_3_15 = tmp_qloop_24*tmp_qloop_40;
                   const real_t q_tmp_3_16 = tmp_qloop_42;
                   const real_t q_tmp_3_17 = tmp_qloop_25*tmp_qloop_51;
                   const real_t q_tmp_3_18 = tmp_qloop_27*tmp_qloop_51;
                   const real_t q_tmp_3_19 = tmp_qloop_28*tmp_qloop_51;
                   const real_t q_tmp_3_20 = tmp_qloop_12*tmp_qloop_52;
                   const real_t q_tmp_3_21 = tmp_qloop_21*tmp_qloop_52;
                   const real_t q_tmp_3_22 = tmp_qloop_22*tmp_qloop_52;
                   const real_t q_tmp_3_23 = tmp_qloop_23*tmp_qloop_52;
                   const real_t q_tmp_3_24 = tmp_qloop_24*tmp_qloop_45;
                   const real_t q_tmp_3_25 = tmp_qloop_24*tmp_qloop_44;
                   const real_t q_tmp_3_26 = tmp_qloop_46;
                   const real_t q_tmp_3_27 = tmp_qloop_25*tmp_qloop_52;
                   const real_t q_tmp_3_28 = tmp_qloop_27*tmp_qloop_52;
                   const real_t q_tmp_3_29 = tmp_qloop_28*tmp_qloop_52;
                   q_acc_0_0 = q_acc_0_0 + q_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + q_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + q_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + q_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + q_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + q_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + q_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + q_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + q_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + q_tmp_0_9;
                   q_acc_0_10 = q_acc_0_10 + q_tmp_0_10;
                   q_acc_0_11 = q_acc_0_11 + q_tmp_0_11;
                   q_acc_0_12 = q_acc_0_12 + q_tmp_0_12;
                   q_acc_0_13 = q_acc_0_13 + q_tmp_0_13;
                   q_acc_0_14 = q_acc_0_14 + q_tmp_0_14;
                   q_acc_0_15 = q_acc_0_15 + q_tmp_0_15;
                   q_acc_0_16 = q_acc_0_16 + q_tmp_0_16;
                   q_acc_0_17 = q_acc_0_17 + q_tmp_0_17;
                   q_acc_0_18 = q_acc_0_18 + q_tmp_0_18;
                   q_acc_0_19 = q_acc_0_19 + q_tmp_0_19;
                   q_acc_0_20 = q_acc_0_20 + q_tmp_0_20;
                   q_acc_0_21 = q_acc_0_21 + q_tmp_0_21;
                   q_acc_0_22 = q_acc_0_22 + q_tmp_0_22;
                   q_acc_0_23 = q_acc_0_23 + q_tmp_0_23;
                   q_acc_0_24 = q_acc_0_24 + q_tmp_0_24;
                   q_acc_0_25 = q_acc_0_25 + q_tmp_0_25;
                   q_acc_0_26 = q_acc_0_26 + q_tmp_0_26;
                   q_acc_0_27 = q_acc_0_27 + q_tmp_0_27;
                   q_acc_0_28 = q_acc_0_28 + q_tmp_0_28;
                   q_acc_0_29 = q_acc_0_29 + q_tmp_0_29;
                   q_acc_1_0 = q_acc_1_0 + q_tmp_1_0;
                   q_acc_1_1 = q_acc_1_1 + q_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + q_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + q_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + q_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + q_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + q_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + q_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + q_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + q_tmp_1_9;
                   q_acc_1_10 = q_acc_1_10 + q_tmp_1_10;
                   q_acc_1_11 = q_acc_1_11 + q_tmp_1_11;
                   q_acc_1_12 = q_acc_1_12 + q_tmp_1_12;
                   q_acc_1_13 = q_acc_1_13 + q_tmp_1_13;
                   q_acc_1_14 = q_acc_1_14 + q_tmp_1_14;
                   q_acc_1_15 = q_acc_1_15 + q_tmp_1_15;
                   q_acc_1_16 = q_acc_1_16 + q_tmp_1_16;
                   q_acc_1_17 = q_acc_1_17 + q_tmp_1_17;
                   q_acc_1_18 = q_acc_1_18 + q_tmp_1_18;
                   q_acc_1_19 = q_acc_1_19 + q_tmp_1_19;
                   q_acc_1_20 = q_acc_1_20 + q_tmp_1_20;
                   q_acc_1_21 = q_acc_1_21 + q_tmp_1_21;
                   q_acc_1_22 = q_acc_1_22 + q_tmp_1_22;
                   q_acc_1_23 = q_acc_1_23 + q_tmp_1_23;
                   q_acc_1_24 = q_acc_1_24 + q_tmp_1_24;
                   q_acc_1_25 = q_acc_1_25 + q_tmp_1_25;
                   q_acc_1_26 = q_acc_1_26 + q_tmp_1_26;
                   q_acc_1_27 = q_acc_1_27 + q_tmp_1_27;
                   q_acc_1_28 = q_acc_1_28 + q_tmp_1_28;
                   q_acc_1_29 = q_acc_1_29 + q_tmp_1_29;
                   q_acc_2_0 = q_acc_2_0 + q_tmp_2_0;
                   q_acc_2_1 = q_acc_2_1 + q_tmp_2_1;
                   q_acc_2_2 = q_acc_2_2 + q_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + q_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + q_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + q_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + q_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + q_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + q_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + q_tmp_2_9;
                   q_acc_2_10 = q_acc_2_10 + q_tmp_2_10;
                   q_acc_2_11 = q_acc_2_11 + q_tmp_2_11;
                   q_acc_2_12 = q_acc_2_12 + q_tmp_2_12;
                   q_acc_2_13 = q_acc_2_13 + q_tmp_2_13;
                   q_acc_2_14 = q_acc_2_14 + q_tmp_2_14;
                   q_acc_2_15 = q_acc_2_15 + q_tmp_2_15;
                   q_acc_2_16 = q_acc_2_16 + q_tmp_2_16;
                   q_acc_2_17 = q_acc_2_17 + q_tmp_2_17;
                   q_acc_2_18 = q_acc_2_18 + q_tmp_2_18;
                   q_acc_2_19 = q_acc_2_19 + q_tmp_2_19;
                   q_acc_2_20 = q_acc_2_20 + q_tmp_2_20;
                   q_acc_2_21 = q_acc_2_21 + q_tmp_2_21;
                   q_acc_2_22 = q_acc_2_22 + q_tmp_2_22;
                   q_acc_2_23 = q_acc_2_23 + q_tmp_2_23;
                   q_acc_2_24 = q_acc_2_24 + q_tmp_2_24;
                   q_acc_2_25 = q_acc_2_25 + q_tmp_2_25;
                   q_acc_2_26 = q_acc_2_26 + q_tmp_2_26;
                   q_acc_2_27 = q_acc_2_27 + q_tmp_2_27;
                   q_acc_2_28 = q_acc_2_28 + q_tmp_2_28;
                   q_acc_2_29 = q_acc_2_29 + q_tmp_2_29;
                   q_acc_3_0 = q_acc_3_0 + q_tmp_3_0;
                   q_acc_3_1 = q_acc_3_1 + q_tmp_3_1;
                   q_acc_3_2 = q_acc_3_2 + q_tmp_3_2;
                   q_acc_3_3 = q_acc_3_3 + q_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + q_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + q_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + q_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + q_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + q_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + q_tmp_3_9;
                   q_acc_3_10 = q_acc_3_10 + q_tmp_3_10;
                   q_acc_3_11 = q_acc_3_11 + q_tmp_3_11;
                   q_acc_3_12 = q_acc_3_12 + q_tmp_3_12;
                   q_acc_3_13 = q_acc_3_13 + q_tmp_3_13;
                   q_acc_3_14 = q_acc_3_14 + q_tmp_3_14;
                   q_acc_3_15 = q_acc_3_15 + q_tmp_3_15;
                   q_acc_3_16 = q_acc_3_16 + q_tmp_3_16;
                   q_acc_3_17 = q_acc_3_17 + q_tmp_3_17;
                   q_acc_3_18 = q_acc_3_18 + q_tmp_3_18;
                   q_acc_3_19 = q_acc_3_19 + q_tmp_3_19;
                   q_acc_3_20 = q_acc_3_20 + q_tmp_3_20;
                   q_acc_3_21 = q_acc_3_21 + q_tmp_3_21;
                   q_acc_3_22 = q_acc_3_22 + q_tmp_3_22;
                   q_acc_3_23 = q_acc_3_23 + q_tmp_3_23;
                   q_acc_3_24 = q_acc_3_24 + q_tmp_3_24;
                   q_acc_3_25 = q_acc_3_25 + q_tmp_3_25;
                   q_acc_3_26 = q_acc_3_26 + q_tmp_3_26;
                   q_acc_3_27 = q_acc_3_27 + q_tmp_3_27;
                   q_acc_3_28 = q_acc_3_28 + q_tmp_3_28;
                   q_acc_3_29 = q_acc_3_29 + q_tmp_3_29;
                }
                const real_t elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_10*src_dof_10 + q_acc_0_11*src_dof_11 + q_acc_0_12*src_dof_12 + q_acc_0_13*src_dof_13 + q_acc_0_14*src_dof_14 + q_acc_0_15*src_dof_15 + q_acc_0_16*src_dof_16 + q_acc_0_17*src_dof_17 + q_acc_0_18*src_dof_18 + q_acc_0_19*src_dof_19 + q_acc_0_2*src_dof_2 + q_acc_0_20*src_dof_20 + q_acc_0_21*src_dof_21 + q_acc_0_22*src_dof_22 + q_acc_0_23*src_dof_23 + q_acc_0_24*src_dof_24 + q_acc_0_25*src_dof_25 + q_acc_0_26*src_dof_26 + q_acc_0_27*src_dof_27 + q_acc_0_28*src_dof_28 + q_acc_0_29*src_dof_29 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const real_t elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_10*src_dof_10 + q_acc_1_11*src_dof_11 + q_acc_1_12*src_dof_12 + q_acc_1_13*src_dof_13 + q_acc_1_14*src_dof_14 + q_acc_1_15*src_dof_15 + q_acc_1_16*src_dof_16 + q_acc_1_17*src_dof_17 + q_acc_1_18*src_dof_18 + q_acc_1_19*src_dof_19 + q_acc_1_2*src_dof_2 + q_acc_1_20*src_dof_20 + q_acc_1_21*src_dof_21 + q_acc_1_22*src_dof_22 + q_acc_1_23*src_dof_23 + q_acc_1_24*src_dof_24 + q_acc_1_25*src_dof_25 + q_acc_1_26*src_dof_26 + q_acc_1_27*src_dof_27 + q_acc_1_28*src_dof_28 + q_acc_1_29*src_dof_29 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const real_t elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_10*src_dof_10 + q_acc_2_11*src_dof_11 + q_acc_2_12*src_dof_12 + q_acc_2_13*src_dof_13 + q_acc_2_14*src_dof_14 + q_acc_2_15*src_dof_15 + q_acc_2_16*src_dof_16 + q_acc_2_17*src_dof_17 + q_acc_2_18*src_dof_18 + q_acc_2_19*src_dof_19 + q_acc_2_2*src_dof_2 + q_acc_2_20*src_dof_20 + q_acc_2_21*src_dof_21 + q_acc_2_22*src_dof_22 + q_acc_2_23*src_dof_23 + q_acc_2_24*src_dof_24 + q_acc_2_25*src_dof_25 + q_acc_2_26*src_dof_26 + q_acc_2_27*src_dof_27 + q_acc_2_28*src_dof_28 + q_acc_2_29*src_dof_29 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const real_t elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_10*src_dof_10 + q_acc_3_11*src_dof_11 + q_acc_3_12*src_dof_12 + q_acc_3_13*src_dof_13 + q_acc_3_14*src_dof_14 + q_acc_3_15*src_dof_15 + q_acc_3_16*src_dof_16 + q_acc_3_17*src_dof_17 + q_acc_3_18*src_dof_18 + q_acc_3_19*src_dof_19 + q_acc_3_2*src_dof_2 + q_acc_3_20*src_dof_20 + q_acc_3_21*src_dof_21 + q_acc_3_22*src_dof_22 + q_acc_3_23*src_dof_23 + q_acc_3_24*src_dof_24 + q_acc_3_25*src_dof_25 + q_acc_3_26*src_dof_26 + q_acc_3_27*src_dof_27 + q_acc_3_28*src_dof_28 + q_acc_3_29*src_dof_29 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             }
          }
       }
       const real_t tmp_coords_jac_0_GREEN_UP = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t tmp_coords_jac_1_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t tmp_coords_jac_2_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t tmp_coords_jac_3_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2);
       const real_t tmp_coords_jac_4_GREEN_UP = tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0);
       const real_t tmp_coords_jac_5_GREEN_UP = tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1);
       const real_t tmp_coords_jac_6_GREEN_UP = tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2);
       const real_t p_affine_const_0_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP;
       const real_t p_affine_const_0_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP;
       const real_t p_affine_const_0_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP;
       const real_t p_affine_const_1_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t p_affine_const_1_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t p_affine_const_1_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_GREEN_UP*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2);
       const real_t p_affine_const_2_0_GREEN_UP = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_UP;
       const real_t p_affine_const_2_1_GREEN_UP = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_UP;
       const real_t p_affine_const_2_2_GREEN_UP = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_UP;
       const real_t p_affine_const_3_0_GREEN_UP = tmp_coords_jac_1_GREEN_UP + tmp_coords_jac_4_GREEN_UP;
       const real_t p_affine_const_3_1_GREEN_UP = tmp_coords_jac_2_GREEN_UP + tmp_coords_jac_5_GREEN_UP;
       const real_t p_affine_const_3_2_GREEN_UP = tmp_coords_jac_3_GREEN_UP + tmp_coords_jac_6_GREEN_UP;
       const real_t jac_affine_0_0_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_1_0_GREEN_UP;
       const real_t jac_affine_0_1_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_2_0_GREEN_UP;
       const real_t jac_affine_0_2_GREEN_UP = -p_affine_const_0_0_GREEN_UP + p_affine_const_3_0_GREEN_UP;
       const real_t jac_affine_1_0_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_1_1_GREEN_UP;
       const real_t jac_affine_1_1_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_2_1_GREEN_UP;
       const real_t tmp_coords_jac_11_GREEN_UP = jac_affine_0_2_GREEN_UP*jac_affine_1_1_GREEN_UP;
       const real_t jac_affine_1_2_GREEN_UP = -p_affine_const_0_1_GREEN_UP + p_affine_const_3_1_GREEN_UP;
       const real_t tmp_coords_jac_9_GREEN_UP = jac_affine_0_1_GREEN_UP*jac_affine_1_2_GREEN_UP;
       const real_t jac_affine_2_0_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_1_2_GREEN_UP;
       const real_t jac_affine_2_1_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_2_2_GREEN_UP;
       const real_t tmp_coords_jac_8_GREEN_UP = jac_affine_1_2_GREEN_UP*jac_affine_2_1_GREEN_UP;
       const real_t jac_affine_2_2_GREEN_UP = -p_affine_const_0_2_GREEN_UP + p_affine_const_3_2_GREEN_UP;
       const real_t tmp_coords_jac_7_GREEN_UP = jac_affine_1_1_GREEN_UP*jac_affine_2_2_GREEN_UP;
       const real_t tmp_coords_jac_10_GREEN_UP = jac_affine_0_1_GREEN_UP*jac_affine_2_2_GREEN_UP;
       const real_t tmp_coords_jac_12_GREEN_UP = jac_affine_0_0_GREEN_UP*tmp_coords_jac_7_GREEN_UP - jac_affine_0_0_GREEN_UP*tmp_coords_jac_8_GREEN_UP + jac_affine_0_2_GREEN_UP*jac_affine_1_0_GREEN_UP*jac_affine_2_1_GREEN_UP - jac_affine_1_0_GREEN_UP*tmp_coords_jac_10_GREEN_UP - jac_affine_2_0_GREEN_UP*tmp_coords_jac_11_GREEN_UP + jac_affine_2_0_GREEN_UP*tmp_coords_jac_9_GREEN_UP;
       const real_t tmp_coords_jac_13_GREEN_UP = 1.0 / (tmp_coords_jac_12_GREEN_UP);
       const real_t jac_affine_inv_0_0_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(tmp_coords_jac_7_GREEN_UP - tmp_coords_jac_8_GREEN_UP);
       const real_t jac_affine_inv_0_1_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(jac_affine_0_2_GREEN_UP*jac_affine_2_1_GREEN_UP - tmp_coords_jac_10_GREEN_UP);
       const real_t jac_affine_inv_0_2_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(-tmp_coords_jac_11_GREEN_UP + tmp_coords_jac_9_GREEN_UP);
       const real_t jac_affine_inv_1_0_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(-jac_affine_1_0_GREEN_UP*jac_affine_2_2_GREEN_UP + jac_affine_1_2_GREEN_UP*jac_affine_2_0_GREEN_UP);
       const real_t jac_affine_inv_1_1_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(jac_affine_0_0_GREEN_UP*jac_affine_2_2_GREEN_UP - jac_affine_0_2_GREEN_UP*jac_affine_2_0_GREEN_UP);
       const real_t jac_affine_inv_1_2_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(-jac_affine_0_0_GREEN_UP*jac_affine_1_2_GREEN_UP + jac_affine_0_2_GREEN_UP*jac_affine_1_0_GREEN_UP);
       const real_t jac_affine_inv_2_0_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(jac_affine_1_0_GREEN_UP*jac_affine_2_1_GREEN_UP - jac_affine_1_1_GREEN_UP*jac_affine_2_0_GREEN_UP);
       const real_t jac_affine_inv_2_1_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(-jac_affine_0_0_GREEN_UP*jac_affine_2_1_GREEN_UP + jac_affine_0_1_GREEN_UP*jac_affine_2_0_GREEN_UP);
       const real_t jac_affine_inv_2_2_GREEN_UP = tmp_coords_jac_13_GREEN_UP*(jac_affine_0_0_GREEN_UP*jac_affine_1_1_GREEN_UP - jac_affine_0_1_GREEN_UP*jac_affine_1_0_GREEN_UP);
       const real_t abs_det_jac_affine_GREEN_UP = abs(tmp_coords_jac_12_GREEN_UP);
       {
          /* CellType.GREEN_UP */
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_0_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_3_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_3_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_3_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_10 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_11 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_12 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_13 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_14 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_15 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_16 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_17 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_18 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_19 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_20 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_21 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_22 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_23 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_24 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_25 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_26 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_27 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_28 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_29 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d rho_dof_0 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_1 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_2 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_3 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                const __m256d tmp_qloop_13 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_1);
                const __m256d tmp_qloop_14 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_2);
                const __m256d tmp_qloop_15 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_3);
                const __m256d tmp_qloop_16 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))));
                const __m256d tmp_qloop_29 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))));
                const __m256d tmp_qloop_31 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP,jac_affine_inv_0_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP,jac_affine_inv_0_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP,jac_affine_inv_0_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP,jac_affine_inv_1_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP,jac_affine_inv_1_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP,jac_affine_inv_1_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP,jac_affine_inv_2_0_GREEN_UP),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP,jac_affine_inv_2_1_GREEN_UP),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP,jac_affine_inv_2_2_GREEN_UP),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))));
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const __m256d tmp_qloop_0 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_1 = _mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_2 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_3 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_4 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_5 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_6 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_7 = _mm256_mul_pd(tmp_qloop_6,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_8 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_9 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_10 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_11 = _mm256_add_pd(tmp_qloop_10,tmp_qloop_9);
                   const __m256d tmp_qloop_12 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_qloop_1),tmp_qloop_11),tmp_qloop_3),tmp_qloop_5),tmp_qloop_7);
                   const __m256d tmp_qloop_17 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0));
                   const __m256d tmp_qloop_18 = _mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(rho_dof_1,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(rho_dof_2,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(rho_dof_3,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_mul_pd(rho_dof_0,tmp_qloop_17))),_mm256_set_pd(_data_q_w[q],_data_q_w[q],_data_q_w[q],_data_q_w[q])),_mm256_set_pd(abs_det_jac_affine_GREEN_UP,abs_det_jac_affine_GREEN_UP,abs_det_jac_affine_GREEN_UP,abs_det_jac_affine_GREEN_UP)),_mm256_set_pd(abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending));
                   const __m256d tmp_qloop_19 = _mm256_mul_pd(tmp_qloop_17,tmp_qloop_18);
                   const __m256d tmp_qloop_20 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_19);
                   const __m256d tmp_qloop_21 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_qloop_1);
                   const __m256d tmp_qloop_22 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_qloop_3);
                   const __m256d tmp_qloop_23 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_qloop_5);
                   const __m256d tmp_qloop_24 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_25 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_mul_pd(tmp_qloop_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_24,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_26 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_27 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_mul_pd(tmp_qloop_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_26,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_28 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0)));
                   const __m256d tmp_qloop_30 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_29);
                   const __m256d tmp_qloop_32 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_31);
                   const __m256d tmp_qloop_33 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_34 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_33);
                   const __m256d tmp_qloop_35 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_36 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_35);
                   const __m256d tmp_qloop_37 = _mm256_mul_pd(tmp_qloop_36,tmp_qloop_9);
                   const __m256d tmp_qloop_38 = _mm256_mul_pd(tmp_qloop_0,tmp_qloop_18);
                   const __m256d tmp_qloop_39 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_38);
                   const __m256d tmp_qloop_40 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_33);
                   const __m256d tmp_qloop_41 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_35);
                   const __m256d tmp_qloop_42 = _mm256_mul_pd(tmp_qloop_41,tmp_qloop_9);
                   const __m256d tmp_qloop_43 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_38);
                   const __m256d tmp_qloop_44 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_33);
                   const __m256d tmp_qloop_45 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_35);
                   const __m256d tmp_qloop_46 = _mm256_mul_pd(tmp_qloop_45,tmp_qloop_9);
                   const __m256d tmp_qloop_47 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_38);
                   const __m256d tmp_qloop_48 = _mm256_mul_pd(_mm256_mul_pd(tmp_qloop_18,tmp_qloop_2),tmp_qloop_8);
                   const __m256d tmp_qloop_49 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_50 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_49);
                   const __m256d tmp_qloop_51 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_49);
                   const __m256d tmp_qloop_52 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_49);
                   const __m256d q_tmp_0_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_20);
                   const __m256d q_tmp_0_1 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_21);
                   const __m256d q_tmp_0_2 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_22);
                   const __m256d q_tmp_0_3 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_23);
                   const __m256d q_tmp_0_4 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_20);
                   const __m256d q_tmp_0_5 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_9);
                   const __m256d q_tmp_0_6 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_7);
                   const __m256d q_tmp_0_7 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_25);
                   const __m256d q_tmp_0_8 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_27);
                   const __m256d q_tmp_0_9 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_28);
                   const __m256d q_tmp_0_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_30);
                   const __m256d q_tmp_0_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_30);
                   const __m256d q_tmp_0_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_30);
                   const __m256d q_tmp_0_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_30);
                   const __m256d q_tmp_0_14 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_30);
                   const __m256d q_tmp_0_15 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_9);
                   const __m256d q_tmp_0_16 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_7);
                   const __m256d q_tmp_0_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_30);
                   const __m256d q_tmp_0_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_30);
                   const __m256d q_tmp_0_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_30);
                   const __m256d q_tmp_0_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_32);
                   const __m256d q_tmp_0_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_32);
                   const __m256d q_tmp_0_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_32);
                   const __m256d q_tmp_0_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_32);
                   const __m256d q_tmp_0_24 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_32);
                   const __m256d q_tmp_0_25 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_9);
                   const __m256d q_tmp_0_26 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_7);
                   const __m256d q_tmp_0_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_32);
                   const __m256d q_tmp_0_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_32);
                   const __m256d q_tmp_0_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_32);
                   const __m256d q_tmp_1_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_34);
                   const __m256d q_tmp_1_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_34);
                   const __m256d q_tmp_1_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_34);
                   const __m256d q_tmp_1_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_34);
                   const __m256d q_tmp_1_4 = tmp_qloop_37;
                   const __m256d q_tmp_1_5 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_8);
                   const __m256d q_tmp_1_6 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_6);
                   const __m256d q_tmp_1_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_34);
                   const __m256d q_tmp_1_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_34);
                   const __m256d q_tmp_1_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_34);
                   const __m256d q_tmp_1_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_40);
                   const __m256d q_tmp_1_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_40);
                   const __m256d q_tmp_1_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_40);
                   const __m256d q_tmp_1_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_40);
                   const __m256d q_tmp_1_14 = tmp_qloop_42;
                   const __m256d q_tmp_1_15 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_8);
                   const __m256d q_tmp_1_16 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_6);
                   const __m256d q_tmp_1_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_40);
                   const __m256d q_tmp_1_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_40);
                   const __m256d q_tmp_1_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_40);
                   const __m256d q_tmp_1_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_44);
                   const __m256d q_tmp_1_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_44);
                   const __m256d q_tmp_1_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_44);
                   const __m256d q_tmp_1_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_44);
                   const __m256d q_tmp_1_24 = tmp_qloop_46;
                   const __m256d q_tmp_1_25 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_8);
                   const __m256d q_tmp_1_26 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_6);
                   const __m256d q_tmp_1_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_44);
                   const __m256d q_tmp_1_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_44);
                   const __m256d q_tmp_1_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_44);
                   const __m256d q_tmp_2_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_36);
                   const __m256d q_tmp_2_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_36);
                   const __m256d q_tmp_2_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_36);
                   const __m256d q_tmp_2_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_36);
                   const __m256d q_tmp_2_4 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_48);
                   const __m256d q_tmp_2_5 = tmp_qloop_37;
                   const __m256d q_tmp_2_6 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_34);
                   const __m256d q_tmp_2_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_36);
                   const __m256d q_tmp_2_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_36);
                   const __m256d q_tmp_2_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_36);
                   const __m256d q_tmp_2_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_41);
                   const __m256d q_tmp_2_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_41);
                   const __m256d q_tmp_2_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_41);
                   const __m256d q_tmp_2_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_41);
                   const __m256d q_tmp_2_14 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_48);
                   const __m256d q_tmp_2_15 = tmp_qloop_42;
                   const __m256d q_tmp_2_16 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_40);
                   const __m256d q_tmp_2_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_41);
                   const __m256d q_tmp_2_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_41);
                   const __m256d q_tmp_2_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_41);
                   const __m256d q_tmp_2_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_45);
                   const __m256d q_tmp_2_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_45);
                   const __m256d q_tmp_2_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_45);
                   const __m256d q_tmp_2_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_45);
                   const __m256d q_tmp_2_24 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_48);
                   const __m256d q_tmp_2_25 = tmp_qloop_46;
                   const __m256d q_tmp_2_26 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_44);
                   const __m256d q_tmp_2_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_45);
                   const __m256d q_tmp_2_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_45);
                   const __m256d q_tmp_2_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_45);
                   const __m256d q_tmp_3_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_50);
                   const __m256d q_tmp_3_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_50);
                   const __m256d q_tmp_3_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_50);
                   const __m256d q_tmp_3_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_50);
                   const __m256d q_tmp_3_4 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_36);
                   const __m256d q_tmp_3_5 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_34);
                   const __m256d q_tmp_3_6 = tmp_qloop_37;
                   const __m256d q_tmp_3_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_50);
                   const __m256d q_tmp_3_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_50);
                   const __m256d q_tmp_3_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_50);
                   const __m256d q_tmp_3_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_51);
                   const __m256d q_tmp_3_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_51);
                   const __m256d q_tmp_3_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_51);
                   const __m256d q_tmp_3_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_51);
                   const __m256d q_tmp_3_14 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_41);
                   const __m256d q_tmp_3_15 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_40);
                   const __m256d q_tmp_3_16 = tmp_qloop_42;
                   const __m256d q_tmp_3_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_51);
                   const __m256d q_tmp_3_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_51);
                   const __m256d q_tmp_3_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_51);
                   const __m256d q_tmp_3_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_52);
                   const __m256d q_tmp_3_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_52);
                   const __m256d q_tmp_3_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_52);
                   const __m256d q_tmp_3_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_52);
                   const __m256d q_tmp_3_24 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_45);
                   const __m256d q_tmp_3_25 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_44);
                   const __m256d q_tmp_3_26 = tmp_qloop_46;
                   const __m256d q_tmp_3_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_52);
                   const __m256d q_tmp_3_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_52);
                   const __m256d q_tmp_3_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_52);
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,q_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,q_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,q_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,q_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,q_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,q_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,q_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,q_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,q_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,q_tmp_0_9);
                   q_acc_0_10 = _mm256_add_pd(q_acc_0_10,q_tmp_0_10);
                   q_acc_0_11 = _mm256_add_pd(q_acc_0_11,q_tmp_0_11);
                   q_acc_0_12 = _mm256_add_pd(q_acc_0_12,q_tmp_0_12);
                   q_acc_0_13 = _mm256_add_pd(q_acc_0_13,q_tmp_0_13);
                   q_acc_0_14 = _mm256_add_pd(q_acc_0_14,q_tmp_0_14);
                   q_acc_0_15 = _mm256_add_pd(q_acc_0_15,q_tmp_0_15);
                   q_acc_0_16 = _mm256_add_pd(q_acc_0_16,q_tmp_0_16);
                   q_acc_0_17 = _mm256_add_pd(q_acc_0_17,q_tmp_0_17);
                   q_acc_0_18 = _mm256_add_pd(q_acc_0_18,q_tmp_0_18);
                   q_acc_0_19 = _mm256_add_pd(q_acc_0_19,q_tmp_0_19);
                   q_acc_0_20 = _mm256_add_pd(q_acc_0_20,q_tmp_0_20);
                   q_acc_0_21 = _mm256_add_pd(q_acc_0_21,q_tmp_0_21);
                   q_acc_0_22 = _mm256_add_pd(q_acc_0_22,q_tmp_0_22);
                   q_acc_0_23 = _mm256_add_pd(q_acc_0_23,q_tmp_0_23);
                   q_acc_0_24 = _mm256_add_pd(q_acc_0_24,q_tmp_0_24);
                   q_acc_0_25 = _mm256_add_pd(q_acc_0_25,q_tmp_0_25);
                   q_acc_0_26 = _mm256_add_pd(q_acc_0_26,q_tmp_0_26);
                   q_acc_0_27 = _mm256_add_pd(q_acc_0_27,q_tmp_0_27);
                   q_acc_0_28 = _mm256_add_pd(q_acc_0_28,q_tmp_0_28);
                   q_acc_0_29 = _mm256_add_pd(q_acc_0_29,q_tmp_0_29);
                   q_acc_1_0 = _mm256_add_pd(q_acc_1_0,q_tmp_1_0);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,q_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,q_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,q_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,q_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,q_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,q_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,q_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,q_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,q_tmp_1_9);
                   q_acc_1_10 = _mm256_add_pd(q_acc_1_10,q_tmp_1_10);
                   q_acc_1_11 = _mm256_add_pd(q_acc_1_11,q_tmp_1_11);
                   q_acc_1_12 = _mm256_add_pd(q_acc_1_12,q_tmp_1_12);
                   q_acc_1_13 = _mm256_add_pd(q_acc_1_13,q_tmp_1_13);
                   q_acc_1_14 = _mm256_add_pd(q_acc_1_14,q_tmp_1_14);
                   q_acc_1_15 = _mm256_add_pd(q_acc_1_15,q_tmp_1_15);
                   q_acc_1_16 = _mm256_add_pd(q_acc_1_16,q_tmp_1_16);
                   q_acc_1_17 = _mm256_add_pd(q_acc_1_17,q_tmp_1_17);
                   q_acc_1_18 = _mm256_add_pd(q_acc_1_18,q_tmp_1_18);
                   q_acc_1_19 = _mm256_add_pd(q_acc_1_19,q_tmp_1_19);
                   q_acc_1_20 = _mm256_add_pd(q_acc_1_20,q_tmp_1_20);
                   q_acc_1_21 = _mm256_add_pd(q_acc_1_21,q_tmp_1_21);
                   q_acc_1_22 = _mm256_add_pd(q_acc_1_22,q_tmp_1_22);
                   q_acc_1_23 = _mm256_add_pd(q_acc_1_23,q_tmp_1_23);
                   q_acc_1_24 = _mm256_add_pd(q_acc_1_24,q_tmp_1_24);
                   q_acc_1_25 = _mm256_add_pd(q_acc_1_25,q_tmp_1_25);
                   q_acc_1_26 = _mm256_add_pd(q_acc_1_26,q_tmp_1_26);
                   q_acc_1_27 = _mm256_add_pd(q_acc_1_27,q_tmp_1_27);
                   q_acc_1_28 = _mm256_add_pd(q_acc_1_28,q_tmp_1_28);
                   q_acc_1_29 = _mm256_add_pd(q_acc_1_29,q_tmp_1_29);
                   q_acc_2_0 = _mm256_add_pd(q_acc_2_0,q_tmp_2_0);
                   q_acc_2_1 = _mm256_add_pd(q_acc_2_1,q_tmp_2_1);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,q_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,q_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,q_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,q_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,q_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,q_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,q_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,q_tmp_2_9);
                   q_acc_2_10 = _mm256_add_pd(q_acc_2_10,q_tmp_2_10);
                   q_acc_2_11 = _mm256_add_pd(q_acc_2_11,q_tmp_2_11);
                   q_acc_2_12 = _mm256_add_pd(q_acc_2_12,q_tmp_2_12);
                   q_acc_2_13 = _mm256_add_pd(q_acc_2_13,q_tmp_2_13);
                   q_acc_2_14 = _mm256_add_pd(q_acc_2_14,q_tmp_2_14);
                   q_acc_2_15 = _mm256_add_pd(q_acc_2_15,q_tmp_2_15);
                   q_acc_2_16 = _mm256_add_pd(q_acc_2_16,q_tmp_2_16);
                   q_acc_2_17 = _mm256_add_pd(q_acc_2_17,q_tmp_2_17);
                   q_acc_2_18 = _mm256_add_pd(q_acc_2_18,q_tmp_2_18);
                   q_acc_2_19 = _mm256_add_pd(q_acc_2_19,q_tmp_2_19);
                   q_acc_2_20 = _mm256_add_pd(q_acc_2_20,q_tmp_2_20);
                   q_acc_2_21 = _mm256_add_pd(q_acc_2_21,q_tmp_2_21);
                   q_acc_2_22 = _mm256_add_pd(q_acc_2_22,q_tmp_2_22);
                   q_acc_2_23 = _mm256_add_pd(q_acc_2_23,q_tmp_2_23);
                   q_acc_2_24 = _mm256_add_pd(q_acc_2_24,q_tmp_2_24);
                   q_acc_2_25 = _mm256_add_pd(q_acc_2_25,q_tmp_2_25);
                   q_acc_2_26 = _mm256_add_pd(q_acc_2_26,q_tmp_2_26);
                   q_acc_2_27 = _mm256_add_pd(q_acc_2_27,q_tmp_2_27);
                   q_acc_2_28 = _mm256_add_pd(q_acc_2_28,q_tmp_2_28);
                   q_acc_2_29 = _mm256_add_pd(q_acc_2_29,q_tmp_2_29);
                   q_acc_3_0 = _mm256_add_pd(q_acc_3_0,q_tmp_3_0);
                   q_acc_3_1 = _mm256_add_pd(q_acc_3_1,q_tmp_3_1);
                   q_acc_3_2 = _mm256_add_pd(q_acc_3_2,q_tmp_3_2);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,q_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,q_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,q_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,q_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,q_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,q_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,q_tmp_3_9);
                   q_acc_3_10 = _mm256_add_pd(q_acc_3_10,q_tmp_3_10);
                   q_acc_3_11 = _mm256_add_pd(q_acc_3_11,q_tmp_3_11);
                   q_acc_3_12 = _mm256_add_pd(q_acc_3_12,q_tmp_3_12);
                   q_acc_3_13 = _mm256_add_pd(q_acc_3_13,q_tmp_3_13);
                   q_acc_3_14 = _mm256_add_pd(q_acc_3_14,q_tmp_3_14);
                   q_acc_3_15 = _mm256_add_pd(q_acc_3_15,q_tmp_3_15);
                   q_acc_3_16 = _mm256_add_pd(q_acc_3_16,q_tmp_3_16);
                   q_acc_3_17 = _mm256_add_pd(q_acc_3_17,q_tmp_3_17);
                   q_acc_3_18 = _mm256_add_pd(q_acc_3_18,q_tmp_3_18);
                   q_acc_3_19 = _mm256_add_pd(q_acc_3_19,q_tmp_3_19);
                   q_acc_3_20 = _mm256_add_pd(q_acc_3_20,q_tmp_3_20);
                   q_acc_3_21 = _mm256_add_pd(q_acc_3_21,q_tmp_3_21);
                   q_acc_3_22 = _mm256_add_pd(q_acc_3_22,q_tmp_3_22);
                   q_acc_3_23 = _mm256_add_pd(q_acc_3_23,q_tmp_3_23);
                   q_acc_3_24 = _mm256_add_pd(q_acc_3_24,q_tmp_3_24);
                   q_acc_3_25 = _mm256_add_pd(q_acc_3_25,q_tmp_3_25);
                   q_acc_3_26 = _mm256_add_pd(q_acc_3_26,q_tmp_3_26);
                   q_acc_3_27 = _mm256_add_pd(q_acc_3_27,q_tmp_3_27);
                   q_acc_3_28 = _mm256_add_pd(q_acc_3_28,q_tmp_3_28);
                   q_acc_3_29 = _mm256_add_pd(q_acc_3_29,q_tmp_3_29);
                }
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_10,src_dof_10)),_mm256_mul_pd(q_acc_0_11,src_dof_11)),_mm256_mul_pd(q_acc_0_12,src_dof_12)),_mm256_mul_pd(q_acc_0_13,src_dof_13)),_mm256_mul_pd(q_acc_0_14,src_dof_14)),_mm256_mul_pd(q_acc_0_15,src_dof_15)),_mm256_mul_pd(q_acc_0_16,src_dof_16)),_mm256_mul_pd(q_acc_0_17,src_dof_17)),_mm256_mul_pd(q_acc_0_18,src_dof_18)),_mm256_mul_pd(q_acc_0_19,src_dof_19)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_20,src_dof_20)),_mm256_mul_pd(q_acc_0_21,src_dof_21)),_mm256_mul_pd(q_acc_0_22,src_dof_22)),_mm256_mul_pd(q_acc_0_23,src_dof_23)),_mm256_mul_pd(q_acc_0_24,src_dof_24)),_mm256_mul_pd(q_acc_0_25,src_dof_25)),_mm256_mul_pd(q_acc_0_26,src_dof_26)),_mm256_mul_pd(q_acc_0_27,src_dof_27)),_mm256_mul_pd(q_acc_0_28,src_dof_28)),_mm256_mul_pd(q_acc_0_29,src_dof_29)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_10,src_dof_10)),_mm256_mul_pd(q_acc_1_11,src_dof_11)),_mm256_mul_pd(q_acc_1_12,src_dof_12)),_mm256_mul_pd(q_acc_1_13,src_dof_13)),_mm256_mul_pd(q_acc_1_14,src_dof_14)),_mm256_mul_pd(q_acc_1_15,src_dof_15)),_mm256_mul_pd(q_acc_1_16,src_dof_16)),_mm256_mul_pd(q_acc_1_17,src_dof_17)),_mm256_mul_pd(q_acc_1_18,src_dof_18)),_mm256_mul_pd(q_acc_1_19,src_dof_19)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_20,src_dof_20)),_mm256_mul_pd(q_acc_1_21,src_dof_21)),_mm256_mul_pd(q_acc_1_22,src_dof_22)),_mm256_mul_pd(q_acc_1_23,src_dof_23)),_mm256_mul_pd(q_acc_1_24,src_dof_24)),_mm256_mul_pd(q_acc_1_25,src_dof_25)),_mm256_mul_pd(q_acc_1_26,src_dof_26)),_mm256_mul_pd(q_acc_1_27,src_dof_27)),_mm256_mul_pd(q_acc_1_28,src_dof_28)),_mm256_mul_pd(q_acc_1_29,src_dof_29)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_10,src_dof_10)),_mm256_mul_pd(q_acc_2_11,src_dof_11)),_mm256_mul_pd(q_acc_2_12,src_dof_12)),_mm256_mul_pd(q_acc_2_13,src_dof_13)),_mm256_mul_pd(q_acc_2_14,src_dof_14)),_mm256_mul_pd(q_acc_2_15,src_dof_15)),_mm256_mul_pd(q_acc_2_16,src_dof_16)),_mm256_mul_pd(q_acc_2_17,src_dof_17)),_mm256_mul_pd(q_acc_2_18,src_dof_18)),_mm256_mul_pd(q_acc_2_19,src_dof_19)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_20,src_dof_20)),_mm256_mul_pd(q_acc_2_21,src_dof_21)),_mm256_mul_pd(q_acc_2_22,src_dof_22)),_mm256_mul_pd(q_acc_2_23,src_dof_23)),_mm256_mul_pd(q_acc_2_24,src_dof_24)),_mm256_mul_pd(q_acc_2_25,src_dof_25)),_mm256_mul_pd(q_acc_2_26,src_dof_26)),_mm256_mul_pd(q_acc_2_27,src_dof_27)),_mm256_mul_pd(q_acc_2_28,src_dof_28)),_mm256_mul_pd(q_acc_2_29,src_dof_29)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_10,src_dof_10)),_mm256_mul_pd(q_acc_3_11,src_dof_11)),_mm256_mul_pd(q_acc_3_12,src_dof_12)),_mm256_mul_pd(q_acc_3_13,src_dof_13)),_mm256_mul_pd(q_acc_3_14,src_dof_14)),_mm256_mul_pd(q_acc_3_15,src_dof_15)),_mm256_mul_pd(q_acc_3_16,src_dof_16)),_mm256_mul_pd(q_acc_3_17,src_dof_17)),_mm256_mul_pd(q_acc_3_18,src_dof_18)),_mm256_mul_pd(q_acc_3_19,src_dof_19)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_20,src_dof_20)),_mm256_mul_pd(q_acc_3_21,src_dof_21)),_mm256_mul_pd(q_acc_3_22,src_dof_22)),_mm256_mul_pd(q_acc_3_23,src_dof_23)),_mm256_mul_pd(q_acc_3_24,src_dof_24)),_mm256_mul_pd(q_acc_3_25,src_dof_25)),_mm256_mul_pd(q_acc_3_26,src_dof_26)),_mm256_mul_pd(q_acc_3_27,src_dof_27)),_mm256_mul_pd(q_acc_3_28,src_dof_28)),_mm256_mul_pd(q_acc_3_29,src_dof_29)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t src_dof_0 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_1 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_2 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_3 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_4 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_5 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_6 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_7 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_8 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_9 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_10 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_11 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_12 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_13 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_14 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_15 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_16 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_17 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_18 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_19 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_20 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_21 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_22 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_23 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_24 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_25 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_26 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_27 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_28 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_29 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t rho_dof_0 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_1 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_2 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_3 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                real_t q_acc_0_0 = 0.0;
                real_t q_acc_0_1 = 0.0;
                real_t q_acc_0_2 = 0.0;
                real_t q_acc_0_3 = 0.0;
                real_t q_acc_0_4 = 0.0;
                real_t q_acc_0_5 = 0.0;
                real_t q_acc_0_6 = 0.0;
                real_t q_acc_0_7 = 0.0;
                real_t q_acc_0_8 = 0.0;
                real_t q_acc_0_9 = 0.0;
                real_t q_acc_0_10 = 0.0;
                real_t q_acc_0_11 = 0.0;
                real_t q_acc_0_12 = 0.0;
                real_t q_acc_0_13 = 0.0;
                real_t q_acc_0_14 = 0.0;
                real_t q_acc_0_15 = 0.0;
                real_t q_acc_0_16 = 0.0;
                real_t q_acc_0_17 = 0.0;
                real_t q_acc_0_18 = 0.0;
                real_t q_acc_0_19 = 0.0;
                real_t q_acc_0_20 = 0.0;
                real_t q_acc_0_21 = 0.0;
                real_t q_acc_0_22 = 0.0;
                real_t q_acc_0_23 = 0.0;
                real_t q_acc_0_24 = 0.0;
                real_t q_acc_0_25 = 0.0;
                real_t q_acc_0_26 = 0.0;
                real_t q_acc_0_27 = 0.0;
                real_t q_acc_0_28 = 0.0;
                real_t q_acc_0_29 = 0.0;
                real_t q_acc_1_0 = 0.0;
                real_t q_acc_1_1 = 0.0;
                real_t q_acc_1_2 = 0.0;
                real_t q_acc_1_3 = 0.0;
                real_t q_acc_1_4 = 0.0;
                real_t q_acc_1_5 = 0.0;
                real_t q_acc_1_6 = 0.0;
                real_t q_acc_1_7 = 0.0;
                real_t q_acc_1_8 = 0.0;
                real_t q_acc_1_9 = 0.0;
                real_t q_acc_1_10 = 0.0;
                real_t q_acc_1_11 = 0.0;
                real_t q_acc_1_12 = 0.0;
                real_t q_acc_1_13 = 0.0;
                real_t q_acc_1_14 = 0.0;
                real_t q_acc_1_15 = 0.0;
                real_t q_acc_1_16 = 0.0;
                real_t q_acc_1_17 = 0.0;
                real_t q_acc_1_18 = 0.0;
                real_t q_acc_1_19 = 0.0;
                real_t q_acc_1_20 = 0.0;
                real_t q_acc_1_21 = 0.0;
                real_t q_acc_1_22 = 0.0;
                real_t q_acc_1_23 = 0.0;
                real_t q_acc_1_24 = 0.0;
                real_t q_acc_1_25 = 0.0;
                real_t q_acc_1_26 = 0.0;
                real_t q_acc_1_27 = 0.0;
                real_t q_acc_1_28 = 0.0;
                real_t q_acc_1_29 = 0.0;
                real_t q_acc_2_0 = 0.0;
                real_t q_acc_2_1 = 0.0;
                real_t q_acc_2_2 = 0.0;
                real_t q_acc_2_3 = 0.0;
                real_t q_acc_2_4 = 0.0;
                real_t q_acc_2_5 = 0.0;
                real_t q_acc_2_6 = 0.0;
                real_t q_acc_2_7 = 0.0;
                real_t q_acc_2_8 = 0.0;
                real_t q_acc_2_9 = 0.0;
                real_t q_acc_2_10 = 0.0;
                real_t q_acc_2_11 = 0.0;
                real_t q_acc_2_12 = 0.0;
                real_t q_acc_2_13 = 0.0;
                real_t q_acc_2_14 = 0.0;
                real_t q_acc_2_15 = 0.0;
                real_t q_acc_2_16 = 0.0;
                real_t q_acc_2_17 = 0.0;
                real_t q_acc_2_18 = 0.0;
                real_t q_acc_2_19 = 0.0;
                real_t q_acc_2_20 = 0.0;
                real_t q_acc_2_21 = 0.0;
                real_t q_acc_2_22 = 0.0;
                real_t q_acc_2_23 = 0.0;
                real_t q_acc_2_24 = 0.0;
                real_t q_acc_2_25 = 0.0;
                real_t q_acc_2_26 = 0.0;
                real_t q_acc_2_27 = 0.0;
                real_t q_acc_2_28 = 0.0;
                real_t q_acc_2_29 = 0.0;
                real_t q_acc_3_0 = 0.0;
                real_t q_acc_3_1 = 0.0;
                real_t q_acc_3_2 = 0.0;
                real_t q_acc_3_3 = 0.0;
                real_t q_acc_3_4 = 0.0;
                real_t q_acc_3_5 = 0.0;
                real_t q_acc_3_6 = 0.0;
                real_t q_acc_3_7 = 0.0;
                real_t q_acc_3_8 = 0.0;
                real_t q_acc_3_9 = 0.0;
                real_t q_acc_3_10 = 0.0;
                real_t q_acc_3_11 = 0.0;
                real_t q_acc_3_12 = 0.0;
                real_t q_acc_3_13 = 0.0;
                real_t q_acc_3_14 = 0.0;
                real_t q_acc_3_15 = 0.0;
                real_t q_acc_3_16 = 0.0;
                real_t q_acc_3_17 = 0.0;
                real_t q_acc_3_18 = 0.0;
                real_t q_acc_3_19 = 0.0;
                real_t q_acc_3_20 = 0.0;
                real_t q_acc_3_21 = 0.0;
                real_t q_acc_3_22 = 0.0;
                real_t q_acc_3_23 = 0.0;
                real_t q_acc_3_24 = 0.0;
                real_t q_acc_3_25 = 0.0;
                real_t q_acc_3_26 = 0.0;
                real_t q_acc_3_27 = 0.0;
                real_t q_acc_3_28 = 0.0;
                real_t q_acc_3_29 = 0.0;
                const real_t tmp_qloop_13 = -rho_dof_0 + rho_dof_1;
                const real_t tmp_qloop_14 = -rho_dof_0 + rho_dof_2;
                const real_t tmp_qloop_15 = -rho_dof_0 + rho_dof_3;
                const real_t tmp_qloop_16 = tmp_qloop_13*(jac_affine_inv_0_0_GREEN_UP*jac_blending_inv_0_0 + jac_affine_inv_0_1_GREEN_UP*jac_blending_inv_1_0 + jac_affine_inv_0_2_GREEN_UP*jac_blending_inv_2_0) + tmp_qloop_14*(jac_affine_inv_1_0_GREEN_UP*jac_blending_inv_0_0 + jac_affine_inv_1_1_GREEN_UP*jac_blending_inv_1_0 + jac_affine_inv_1_2_GREEN_UP*jac_blending_inv_2_0) + tmp_qloop_15*(jac_affine_inv_2_0_GREEN_UP*jac_blending_inv_0_0 + jac_affine_inv_2_1_GREEN_UP*jac_blending_inv_1_0 + jac_affine_inv_2_2_GREEN_UP*jac_blending_inv_2_0);
                const real_t tmp_qloop_29 = tmp_qloop_13*(jac_affine_inv_0_0_GREEN_UP*jac_blending_inv_0_1 + jac_affine_inv_0_1_GREEN_UP*jac_blending_inv_1_1 + jac_affine_inv_0_2_GREEN_UP*jac_blending_inv_2_1) + tmp_qloop_14*(jac_affine_inv_1_0_GREEN_UP*jac_blending_inv_0_1 + jac_affine_inv_1_1_GREEN_UP*jac_blending_inv_1_1 + jac_affine_inv_1_2_GREEN_UP*jac_blending_inv_2_1) + tmp_qloop_15*(jac_affine_inv_2_0_GREEN_UP*jac_blending_inv_0_1 + jac_affine_inv_2_1_GREEN_UP*jac_blending_inv_1_1 + jac_affine_inv_2_2_GREEN_UP*jac_blending_inv_2_1);
                const real_t tmp_qloop_31 = tmp_qloop_13*(jac_affine_inv_0_0_GREEN_UP*jac_blending_inv_0_2 + jac_affine_inv_0_1_GREEN_UP*jac_blending_inv_1_2 + jac_affine_inv_0_2_GREEN_UP*jac_blending_inv_2_2) + tmp_qloop_14*(jac_affine_inv_1_0_GREEN_UP*jac_blending_inv_0_2 + jac_affine_inv_1_1_GREEN_UP*jac_blending_inv_1_2 + jac_affine_inv_1_2_GREEN_UP*jac_blending_inv_2_2) + tmp_qloop_15*(jac_affine_inv_2_0_GREEN_UP*jac_blending_inv_0_2 + jac_affine_inv_2_1_GREEN_UP*jac_blending_inv_1_2 + jac_affine_inv_2_2_GREEN_UP*jac_blending_inv_2_2);
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const real_t tmp_qloop_0 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const real_t tmp_qloop_1 = tmp_qloop_0*2.0;
                   const real_t tmp_qloop_2 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const real_t tmp_qloop_3 = tmp_qloop_2*2.0;
                   const real_t tmp_qloop_4 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const real_t tmp_qloop_5 = tmp_qloop_4*2.0;
                   const real_t tmp_qloop_6 = 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_7 = tmp_qloop_6*_data_q_p_0[q];
                   const real_t tmp_qloop_8 = 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_9 = tmp_qloop_8*_data_q_p_0[q];
                   const real_t tmp_qloop_10 = tmp_qloop_8*_data_q_p_1[q];
                   const real_t tmp_qloop_11 = tmp_qloop_10 + tmp_qloop_9;
                   const real_t tmp_qloop_12 = tmp_qloop_1 + tmp_qloop_11 + tmp_qloop_3 + tmp_qloop_5 + tmp_qloop_7 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0;
                   const real_t tmp_qloop_17 = 1.0 - _data_q_p_0[q] - _data_q_p_1[q] - _data_q_p_2[q];
                   const real_t tmp_qloop_18 = abs_det_jac_affine_GREEN_UP*abs_det_jac_blending*1.0 / (rho_dof_0*tmp_qloop_17 + rho_dof_1*_data_q_p_0[q] + rho_dof_2*_data_q_p_1[q] + rho_dof_3*_data_q_p_2[q])*_data_q_w[q];
                   const real_t tmp_qloop_19 = tmp_qloop_17*tmp_qloop_18;
                   const real_t tmp_qloop_20 = tmp_qloop_16*tmp_qloop_19;
                   const real_t tmp_qloop_21 = tmp_qloop_1 - _data_q_p_0[q];
                   const real_t tmp_qloop_22 = tmp_qloop_3 - _data_q_p_1[q];
                   const real_t tmp_qloop_23 = tmp_qloop_5 - _data_q_p_2[q];
                   const real_t tmp_qloop_24 = tmp_qloop_4*4.0;
                   const real_t tmp_qloop_25 = -tmp_qloop_11 - tmp_qloop_24 + 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_26 = tmp_qloop_2*4.0;
                   const real_t tmp_qloop_27 = -tmp_qloop_10 - tmp_qloop_26 - tmp_qloop_7 + 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_28 = tmp_qloop_0*-4.0 - tmp_qloop_7 - tmp_qloop_9 + 4.0*_data_q_p_0[q];
                   const real_t tmp_qloop_30 = tmp_qloop_19*tmp_qloop_29;
                   const real_t tmp_qloop_32 = tmp_qloop_19*tmp_qloop_31;
                   const real_t tmp_qloop_33 = tmp_qloop_18*_data_q_p_0[q];
                   const real_t tmp_qloop_34 = tmp_qloop_16*tmp_qloop_33;
                   const real_t tmp_qloop_35 = tmp_qloop_18*_data_q_p_1[q];
                   const real_t tmp_qloop_36 = tmp_qloop_16*tmp_qloop_35;
                   const real_t tmp_qloop_37 = tmp_qloop_36*tmp_qloop_9;
                   const real_t tmp_qloop_38 = tmp_qloop_0*tmp_qloop_18;
                   const real_t tmp_qloop_39 = tmp_qloop_16*tmp_qloop_38;
                   const real_t tmp_qloop_40 = tmp_qloop_29*tmp_qloop_33;
                   const real_t tmp_qloop_41 = tmp_qloop_29*tmp_qloop_35;
                   const real_t tmp_qloop_42 = tmp_qloop_41*tmp_qloop_9;
                   const real_t tmp_qloop_43 = tmp_qloop_29*tmp_qloop_38;
                   const real_t tmp_qloop_44 = tmp_qloop_31*tmp_qloop_33;
                   const real_t tmp_qloop_45 = tmp_qloop_31*tmp_qloop_35;
                   const real_t tmp_qloop_46 = tmp_qloop_45*tmp_qloop_9;
                   const real_t tmp_qloop_47 = tmp_qloop_31*tmp_qloop_38;
                   const real_t tmp_qloop_48 = tmp_qloop_18*tmp_qloop_2*tmp_qloop_8;
                   const real_t tmp_qloop_49 = tmp_qloop_18*_data_q_p_2[q];
                   const real_t tmp_qloop_50 = tmp_qloop_16*tmp_qloop_49;
                   const real_t tmp_qloop_51 = tmp_qloop_29*tmp_qloop_49;
                   const real_t tmp_qloop_52 = tmp_qloop_31*tmp_qloop_49;
                   const real_t q_tmp_0_0 = tmp_qloop_12*tmp_qloop_20;
                   const real_t q_tmp_0_1 = tmp_qloop_20*tmp_qloop_21;
                   const real_t q_tmp_0_2 = tmp_qloop_20*tmp_qloop_22;
                   const real_t q_tmp_0_3 = tmp_qloop_20*tmp_qloop_23;
                   const real_t q_tmp_0_4 = tmp_qloop_10*tmp_qloop_20;
                   const real_t q_tmp_0_5 = tmp_qloop_20*tmp_qloop_9;
                   const real_t q_tmp_0_6 = tmp_qloop_20*tmp_qloop_7;
                   const real_t q_tmp_0_7 = tmp_qloop_20*tmp_qloop_25;
                   const real_t q_tmp_0_8 = tmp_qloop_20*tmp_qloop_27;
                   const real_t q_tmp_0_9 = tmp_qloop_20*tmp_qloop_28;
                   const real_t q_tmp_0_10 = tmp_qloop_12*tmp_qloop_30;
                   const real_t q_tmp_0_11 = tmp_qloop_21*tmp_qloop_30;
                   const real_t q_tmp_0_12 = tmp_qloop_22*tmp_qloop_30;
                   const real_t q_tmp_0_13 = tmp_qloop_23*tmp_qloop_30;
                   const real_t q_tmp_0_14 = tmp_qloop_10*tmp_qloop_30;
                   const real_t q_tmp_0_15 = tmp_qloop_30*tmp_qloop_9;
                   const real_t q_tmp_0_16 = tmp_qloop_30*tmp_qloop_7;
                   const real_t q_tmp_0_17 = tmp_qloop_25*tmp_qloop_30;
                   const real_t q_tmp_0_18 = tmp_qloop_27*tmp_qloop_30;
                   const real_t q_tmp_0_19 = tmp_qloop_28*tmp_qloop_30;
                   const real_t q_tmp_0_20 = tmp_qloop_12*tmp_qloop_32;
                   const real_t q_tmp_0_21 = tmp_qloop_21*tmp_qloop_32;
                   const real_t q_tmp_0_22 = tmp_qloop_22*tmp_qloop_32;
                   const real_t q_tmp_0_23 = tmp_qloop_23*tmp_qloop_32;
                   const real_t q_tmp_0_24 = tmp_qloop_10*tmp_qloop_32;
                   const real_t q_tmp_0_25 = tmp_qloop_32*tmp_qloop_9;
                   const real_t q_tmp_0_26 = tmp_qloop_32*tmp_qloop_7;
                   const real_t q_tmp_0_27 = tmp_qloop_25*tmp_qloop_32;
                   const real_t q_tmp_0_28 = tmp_qloop_27*tmp_qloop_32;
                   const real_t q_tmp_0_29 = tmp_qloop_28*tmp_qloop_32;
                   const real_t q_tmp_1_0 = tmp_qloop_12*tmp_qloop_34;
                   const real_t q_tmp_1_1 = tmp_qloop_21*tmp_qloop_34;
                   const real_t q_tmp_1_2 = tmp_qloop_22*tmp_qloop_34;
                   const real_t q_tmp_1_3 = tmp_qloop_23*tmp_qloop_34;
                   const real_t q_tmp_1_4 = tmp_qloop_37;
                   const real_t q_tmp_1_5 = tmp_qloop_39*tmp_qloop_8;
                   const real_t q_tmp_1_6 = tmp_qloop_39*tmp_qloop_6;
                   const real_t q_tmp_1_7 = tmp_qloop_25*tmp_qloop_34;
                   const real_t q_tmp_1_8 = tmp_qloop_27*tmp_qloop_34;
                   const real_t q_tmp_1_9 = tmp_qloop_28*tmp_qloop_34;
                   const real_t q_tmp_1_10 = tmp_qloop_12*tmp_qloop_40;
                   const real_t q_tmp_1_11 = tmp_qloop_21*tmp_qloop_40;
                   const real_t q_tmp_1_12 = tmp_qloop_22*tmp_qloop_40;
                   const real_t q_tmp_1_13 = tmp_qloop_23*tmp_qloop_40;
                   const real_t q_tmp_1_14 = tmp_qloop_42;
                   const real_t q_tmp_1_15 = tmp_qloop_43*tmp_qloop_8;
                   const real_t q_tmp_1_16 = tmp_qloop_43*tmp_qloop_6;
                   const real_t q_tmp_1_17 = tmp_qloop_25*tmp_qloop_40;
                   const real_t q_tmp_1_18 = tmp_qloop_27*tmp_qloop_40;
                   const real_t q_tmp_1_19 = tmp_qloop_28*tmp_qloop_40;
                   const real_t q_tmp_1_20 = tmp_qloop_12*tmp_qloop_44;
                   const real_t q_tmp_1_21 = tmp_qloop_21*tmp_qloop_44;
                   const real_t q_tmp_1_22 = tmp_qloop_22*tmp_qloop_44;
                   const real_t q_tmp_1_23 = tmp_qloop_23*tmp_qloop_44;
                   const real_t q_tmp_1_24 = tmp_qloop_46;
                   const real_t q_tmp_1_25 = tmp_qloop_47*tmp_qloop_8;
                   const real_t q_tmp_1_26 = tmp_qloop_47*tmp_qloop_6;
                   const real_t q_tmp_1_27 = tmp_qloop_25*tmp_qloop_44;
                   const real_t q_tmp_1_28 = tmp_qloop_27*tmp_qloop_44;
                   const real_t q_tmp_1_29 = tmp_qloop_28*tmp_qloop_44;
                   const real_t q_tmp_2_0 = tmp_qloop_12*tmp_qloop_36;
                   const real_t q_tmp_2_1 = tmp_qloop_21*tmp_qloop_36;
                   const real_t q_tmp_2_2 = tmp_qloop_22*tmp_qloop_36;
                   const real_t q_tmp_2_3 = tmp_qloop_23*tmp_qloop_36;
                   const real_t q_tmp_2_4 = tmp_qloop_16*tmp_qloop_48;
                   const real_t q_tmp_2_5 = tmp_qloop_37;
                   const real_t q_tmp_2_6 = tmp_qloop_26*tmp_qloop_34;
                   const real_t q_tmp_2_7 = tmp_qloop_25*tmp_qloop_36;
                   const real_t q_tmp_2_8 = tmp_qloop_27*tmp_qloop_36;
                   const real_t q_tmp_2_9 = tmp_qloop_28*tmp_qloop_36;
                   const real_t q_tmp_2_10 = tmp_qloop_12*tmp_qloop_41;
                   const real_t q_tmp_2_11 = tmp_qloop_21*tmp_qloop_41;
                   const real_t q_tmp_2_12 = tmp_qloop_22*tmp_qloop_41;
                   const real_t q_tmp_2_13 = tmp_qloop_23*tmp_qloop_41;
                   const real_t q_tmp_2_14 = tmp_qloop_29*tmp_qloop_48;
                   const real_t q_tmp_2_15 = tmp_qloop_42;
                   const real_t q_tmp_2_16 = tmp_qloop_26*tmp_qloop_40;
                   const real_t q_tmp_2_17 = tmp_qloop_25*tmp_qloop_41;
                   const real_t q_tmp_2_18 = tmp_qloop_27*tmp_qloop_41;
                   const real_t q_tmp_2_19 = tmp_qloop_28*tmp_qloop_41;
                   const real_t q_tmp_2_20 = tmp_qloop_12*tmp_qloop_45;
                   const real_t q_tmp_2_21 = tmp_qloop_21*tmp_qloop_45;
                   const real_t q_tmp_2_22 = tmp_qloop_22*tmp_qloop_45;
                   const real_t q_tmp_2_23 = tmp_qloop_23*tmp_qloop_45;
                   const real_t q_tmp_2_24 = tmp_qloop_31*tmp_qloop_48;
                   const real_t q_tmp_2_25 = tmp_qloop_46;
                   const real_t q_tmp_2_26 = tmp_qloop_26*tmp_qloop_44;
                   const real_t q_tmp_2_27 = tmp_qloop_25*tmp_qloop_45;
                   const real_t q_tmp_2_28 = tmp_qloop_27*tmp_qloop_45;
                   const real_t q_tmp_2_29 = tmp_qloop_28*tmp_qloop_45;
                   const real_t q_tmp_3_0 = tmp_qloop_12*tmp_qloop_50;
                   const real_t q_tmp_3_1 = tmp_qloop_21*tmp_qloop_50;
                   const real_t q_tmp_3_2 = tmp_qloop_22*tmp_qloop_50;
                   const real_t q_tmp_3_3 = tmp_qloop_23*tmp_qloop_50;
                   const real_t q_tmp_3_4 = tmp_qloop_24*tmp_qloop_36;
                   const real_t q_tmp_3_5 = tmp_qloop_24*tmp_qloop_34;
                   const real_t q_tmp_3_6 = tmp_qloop_37;
                   const real_t q_tmp_3_7 = tmp_qloop_25*tmp_qloop_50;
                   const real_t q_tmp_3_8 = tmp_qloop_27*tmp_qloop_50;
                   const real_t q_tmp_3_9 = tmp_qloop_28*tmp_qloop_50;
                   const real_t q_tmp_3_10 = tmp_qloop_12*tmp_qloop_51;
                   const real_t q_tmp_3_11 = tmp_qloop_21*tmp_qloop_51;
                   const real_t q_tmp_3_12 = tmp_qloop_22*tmp_qloop_51;
                   const real_t q_tmp_3_13 = tmp_qloop_23*tmp_qloop_51;
                   const real_t q_tmp_3_14 = tmp_qloop_24*tmp_qloop_41;
                   const real_t q_tmp_3_15 = tmp_qloop_24*tmp_qloop_40;
                   const real_t q_tmp_3_16 = tmp_qloop_42;
                   const real_t q_tmp_3_17 = tmp_qloop_25*tmp_qloop_51;
                   const real_t q_tmp_3_18 = tmp_qloop_27*tmp_qloop_51;
                   const real_t q_tmp_3_19 = tmp_qloop_28*tmp_qloop_51;
                   const real_t q_tmp_3_20 = tmp_qloop_12*tmp_qloop_52;
                   const real_t q_tmp_3_21 = tmp_qloop_21*tmp_qloop_52;
                   const real_t q_tmp_3_22 = tmp_qloop_22*tmp_qloop_52;
                   const real_t q_tmp_3_23 = tmp_qloop_23*tmp_qloop_52;
                   const real_t q_tmp_3_24 = tmp_qloop_24*tmp_qloop_45;
                   const real_t q_tmp_3_25 = tmp_qloop_24*tmp_qloop_44;
                   const real_t q_tmp_3_26 = tmp_qloop_46;
                   const real_t q_tmp_3_27 = tmp_qloop_25*tmp_qloop_52;
                   const real_t q_tmp_3_28 = tmp_qloop_27*tmp_qloop_52;
                   const real_t q_tmp_3_29 = tmp_qloop_28*tmp_qloop_52;
                   q_acc_0_0 = q_acc_0_0 + q_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + q_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + q_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + q_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + q_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + q_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + q_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + q_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + q_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + q_tmp_0_9;
                   q_acc_0_10 = q_acc_0_10 + q_tmp_0_10;
                   q_acc_0_11 = q_acc_0_11 + q_tmp_0_11;
                   q_acc_0_12 = q_acc_0_12 + q_tmp_0_12;
                   q_acc_0_13 = q_acc_0_13 + q_tmp_0_13;
                   q_acc_0_14 = q_acc_0_14 + q_tmp_0_14;
                   q_acc_0_15 = q_acc_0_15 + q_tmp_0_15;
                   q_acc_0_16 = q_acc_0_16 + q_tmp_0_16;
                   q_acc_0_17 = q_acc_0_17 + q_tmp_0_17;
                   q_acc_0_18 = q_acc_0_18 + q_tmp_0_18;
                   q_acc_0_19 = q_acc_0_19 + q_tmp_0_19;
                   q_acc_0_20 = q_acc_0_20 + q_tmp_0_20;
                   q_acc_0_21 = q_acc_0_21 + q_tmp_0_21;
                   q_acc_0_22 = q_acc_0_22 + q_tmp_0_22;
                   q_acc_0_23 = q_acc_0_23 + q_tmp_0_23;
                   q_acc_0_24 = q_acc_0_24 + q_tmp_0_24;
                   q_acc_0_25 = q_acc_0_25 + q_tmp_0_25;
                   q_acc_0_26 = q_acc_0_26 + q_tmp_0_26;
                   q_acc_0_27 = q_acc_0_27 + q_tmp_0_27;
                   q_acc_0_28 = q_acc_0_28 + q_tmp_0_28;
                   q_acc_0_29 = q_acc_0_29 + q_tmp_0_29;
                   q_acc_1_0 = q_acc_1_0 + q_tmp_1_0;
                   q_acc_1_1 = q_acc_1_1 + q_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + q_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + q_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + q_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + q_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + q_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + q_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + q_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + q_tmp_1_9;
                   q_acc_1_10 = q_acc_1_10 + q_tmp_1_10;
                   q_acc_1_11 = q_acc_1_11 + q_tmp_1_11;
                   q_acc_1_12 = q_acc_1_12 + q_tmp_1_12;
                   q_acc_1_13 = q_acc_1_13 + q_tmp_1_13;
                   q_acc_1_14 = q_acc_1_14 + q_tmp_1_14;
                   q_acc_1_15 = q_acc_1_15 + q_tmp_1_15;
                   q_acc_1_16 = q_acc_1_16 + q_tmp_1_16;
                   q_acc_1_17 = q_acc_1_17 + q_tmp_1_17;
                   q_acc_1_18 = q_acc_1_18 + q_tmp_1_18;
                   q_acc_1_19 = q_acc_1_19 + q_tmp_1_19;
                   q_acc_1_20 = q_acc_1_20 + q_tmp_1_20;
                   q_acc_1_21 = q_acc_1_21 + q_tmp_1_21;
                   q_acc_1_22 = q_acc_1_22 + q_tmp_1_22;
                   q_acc_1_23 = q_acc_1_23 + q_tmp_1_23;
                   q_acc_1_24 = q_acc_1_24 + q_tmp_1_24;
                   q_acc_1_25 = q_acc_1_25 + q_tmp_1_25;
                   q_acc_1_26 = q_acc_1_26 + q_tmp_1_26;
                   q_acc_1_27 = q_acc_1_27 + q_tmp_1_27;
                   q_acc_1_28 = q_acc_1_28 + q_tmp_1_28;
                   q_acc_1_29 = q_acc_1_29 + q_tmp_1_29;
                   q_acc_2_0 = q_acc_2_0 + q_tmp_2_0;
                   q_acc_2_1 = q_acc_2_1 + q_tmp_2_1;
                   q_acc_2_2 = q_acc_2_2 + q_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + q_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + q_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + q_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + q_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + q_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + q_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + q_tmp_2_9;
                   q_acc_2_10 = q_acc_2_10 + q_tmp_2_10;
                   q_acc_2_11 = q_acc_2_11 + q_tmp_2_11;
                   q_acc_2_12 = q_acc_2_12 + q_tmp_2_12;
                   q_acc_2_13 = q_acc_2_13 + q_tmp_2_13;
                   q_acc_2_14 = q_acc_2_14 + q_tmp_2_14;
                   q_acc_2_15 = q_acc_2_15 + q_tmp_2_15;
                   q_acc_2_16 = q_acc_2_16 + q_tmp_2_16;
                   q_acc_2_17 = q_acc_2_17 + q_tmp_2_17;
                   q_acc_2_18 = q_acc_2_18 + q_tmp_2_18;
                   q_acc_2_19 = q_acc_2_19 + q_tmp_2_19;
                   q_acc_2_20 = q_acc_2_20 + q_tmp_2_20;
                   q_acc_2_21 = q_acc_2_21 + q_tmp_2_21;
                   q_acc_2_22 = q_acc_2_22 + q_tmp_2_22;
                   q_acc_2_23 = q_acc_2_23 + q_tmp_2_23;
                   q_acc_2_24 = q_acc_2_24 + q_tmp_2_24;
                   q_acc_2_25 = q_acc_2_25 + q_tmp_2_25;
                   q_acc_2_26 = q_acc_2_26 + q_tmp_2_26;
                   q_acc_2_27 = q_acc_2_27 + q_tmp_2_27;
                   q_acc_2_28 = q_acc_2_28 + q_tmp_2_28;
                   q_acc_2_29 = q_acc_2_29 + q_tmp_2_29;
                   q_acc_3_0 = q_acc_3_0 + q_tmp_3_0;
                   q_acc_3_1 = q_acc_3_1 + q_tmp_3_1;
                   q_acc_3_2 = q_acc_3_2 + q_tmp_3_2;
                   q_acc_3_3 = q_acc_3_3 + q_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + q_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + q_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + q_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + q_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + q_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + q_tmp_3_9;
                   q_acc_3_10 = q_acc_3_10 + q_tmp_3_10;
                   q_acc_3_11 = q_acc_3_11 + q_tmp_3_11;
                   q_acc_3_12 = q_acc_3_12 + q_tmp_3_12;
                   q_acc_3_13 = q_acc_3_13 + q_tmp_3_13;
                   q_acc_3_14 = q_acc_3_14 + q_tmp_3_14;
                   q_acc_3_15 = q_acc_3_15 + q_tmp_3_15;
                   q_acc_3_16 = q_acc_3_16 + q_tmp_3_16;
                   q_acc_3_17 = q_acc_3_17 + q_tmp_3_17;
                   q_acc_3_18 = q_acc_3_18 + q_tmp_3_18;
                   q_acc_3_19 = q_acc_3_19 + q_tmp_3_19;
                   q_acc_3_20 = q_acc_3_20 + q_tmp_3_20;
                   q_acc_3_21 = q_acc_3_21 + q_tmp_3_21;
                   q_acc_3_22 = q_acc_3_22 + q_tmp_3_22;
                   q_acc_3_23 = q_acc_3_23 + q_tmp_3_23;
                   q_acc_3_24 = q_acc_3_24 + q_tmp_3_24;
                   q_acc_3_25 = q_acc_3_25 + q_tmp_3_25;
                   q_acc_3_26 = q_acc_3_26 + q_tmp_3_26;
                   q_acc_3_27 = q_acc_3_27 + q_tmp_3_27;
                   q_acc_3_28 = q_acc_3_28 + q_tmp_3_28;
                   q_acc_3_29 = q_acc_3_29 + q_tmp_3_29;
                }
                const real_t elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_10*src_dof_10 + q_acc_0_11*src_dof_11 + q_acc_0_12*src_dof_12 + q_acc_0_13*src_dof_13 + q_acc_0_14*src_dof_14 + q_acc_0_15*src_dof_15 + q_acc_0_16*src_dof_16 + q_acc_0_17*src_dof_17 + q_acc_0_18*src_dof_18 + q_acc_0_19*src_dof_19 + q_acc_0_2*src_dof_2 + q_acc_0_20*src_dof_20 + q_acc_0_21*src_dof_21 + q_acc_0_22*src_dof_22 + q_acc_0_23*src_dof_23 + q_acc_0_24*src_dof_24 + q_acc_0_25*src_dof_25 + q_acc_0_26*src_dof_26 + q_acc_0_27*src_dof_27 + q_acc_0_28*src_dof_28 + q_acc_0_29*src_dof_29 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const real_t elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_10*src_dof_10 + q_acc_1_11*src_dof_11 + q_acc_1_12*src_dof_12 + q_acc_1_13*src_dof_13 + q_acc_1_14*src_dof_14 + q_acc_1_15*src_dof_15 + q_acc_1_16*src_dof_16 + q_acc_1_17*src_dof_17 + q_acc_1_18*src_dof_18 + q_acc_1_19*src_dof_19 + q_acc_1_2*src_dof_2 + q_acc_1_20*src_dof_20 + q_acc_1_21*src_dof_21 + q_acc_1_22*src_dof_22 + q_acc_1_23*src_dof_23 + q_acc_1_24*src_dof_24 + q_acc_1_25*src_dof_25 + q_acc_1_26*src_dof_26 + q_acc_1_27*src_dof_27 + q_acc_1_28*src_dof_28 + q_acc_1_29*src_dof_29 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const real_t elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_10*src_dof_10 + q_acc_2_11*src_dof_11 + q_acc_2_12*src_dof_12 + q_acc_2_13*src_dof_13 + q_acc_2_14*src_dof_14 + q_acc_2_15*src_dof_15 + q_acc_2_16*src_dof_16 + q_acc_2_17*src_dof_17 + q_acc_2_18*src_dof_18 + q_acc_2_19*src_dof_19 + q_acc_2_2*src_dof_2 + q_acc_2_20*src_dof_20 + q_acc_2_21*src_dof_21 + q_acc_2_22*src_dof_22 + q_acc_2_23*src_dof_23 + q_acc_2_24*src_dof_24 + q_acc_2_25*src_dof_25 + q_acc_2_26*src_dof_26 + q_acc_2_27*src_dof_27 + q_acc_2_28*src_dof_28 + q_acc_2_29*src_dof_29 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const real_t elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_10*src_dof_10 + q_acc_3_11*src_dof_11 + q_acc_3_12*src_dof_12 + q_acc_3_13*src_dof_13 + q_acc_3_14*src_dof_14 + q_acc_3_15*src_dof_15 + q_acc_3_16*src_dof_16 + q_acc_3_17*src_dof_17 + q_acc_3_18*src_dof_18 + q_acc_3_19*src_dof_19 + q_acc_3_2*src_dof_2 + q_acc_3_20*src_dof_20 + q_acc_3_21*src_dof_21 + q_acc_3_22*src_dof_22 + q_acc_3_23*src_dof_23 + q_acc_3_24*src_dof_24 + q_acc_3_25*src_dof_25 + q_acc_3_26*src_dof_26 + q_acc_3_27*src_dof_27 + q_acc_3_28*src_dof_28 + q_acc_3_29*src_dof_29 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             }
          }
       }
       const real_t tmp_coords_jac_0_GREEN_DOWN = 1.0 / (micro_edges_per_macro_edge_float)*1.0;
       const real_t tmp_coords_jac_1_GREEN_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0);
       const real_t tmp_coords_jac_2_GREEN_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1);
       const real_t tmp_coords_jac_3_GREEN_DOWN = macro_vertex_coord_id_0comp2 + tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2);
       const real_t tmp_coords_jac_4_GREEN_DOWN = tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0);
       const real_t tmp_coords_jac_5_GREEN_DOWN = tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1);
       const real_t tmp_coords_jac_6_GREEN_DOWN = tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2);
       const real_t tmp_coords_jac_7_GREEN_DOWN = tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0);
       const real_t tmp_coords_jac_8_GREEN_DOWN = tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1);
       const real_t tmp_coords_jac_9_GREEN_DOWN = tmp_coords_jac_0_GREEN_DOWN*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2);
       const real_t p_affine_const_0_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN;
       const real_t p_affine_const_0_1_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN;
       const real_t p_affine_const_0_2_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN;
       const real_t p_affine_const_1_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_4_GREEN_DOWN;
       const real_t p_affine_const_1_1_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_5_GREEN_DOWN;
       const real_t p_affine_const_1_2_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_6_GREEN_DOWN;
       const real_t p_affine_const_2_0_GREEN_DOWN = macro_vertex_coord_id_0comp0 + tmp_coords_jac_4_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
       const real_t p_affine_const_2_1_GREEN_DOWN = macro_vertex_coord_id_0comp1 + tmp_coords_jac_5_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
       const real_t p_affine_const_2_2_GREEN_DOWN = macro_vertex_coord_id_0comp2 + tmp_coords_jac_6_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
       const real_t p_affine_const_3_0_GREEN_DOWN = tmp_coords_jac_1_GREEN_DOWN + tmp_coords_jac_7_GREEN_DOWN;
       const real_t p_affine_const_3_1_GREEN_DOWN = tmp_coords_jac_2_GREEN_DOWN + tmp_coords_jac_8_GREEN_DOWN;
       const real_t p_affine_const_3_2_GREEN_DOWN = tmp_coords_jac_3_GREEN_DOWN + tmp_coords_jac_9_GREEN_DOWN;
       const real_t jac_affine_0_0_GREEN_DOWN = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_1_0_GREEN_DOWN;
       const real_t jac_affine_0_1_GREEN_DOWN = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_2_0_GREEN_DOWN;
       const real_t jac_affine_0_2_GREEN_DOWN = -p_affine_const_0_0_GREEN_DOWN + p_affine_const_3_0_GREEN_DOWN;
       const real_t jac_affine_1_0_GREEN_DOWN = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_1_1_GREEN_DOWN;
       const real_t jac_affine_1_1_GREEN_DOWN = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_2_1_GREEN_DOWN;
       const real_t tmp_coords_jac_14_GREEN_DOWN = jac_affine_0_2_GREEN_DOWN*jac_affine_1_1_GREEN_DOWN;
       const real_t jac_affine_1_2_GREEN_DOWN = -p_affine_const_0_1_GREEN_DOWN + p_affine_const_3_1_GREEN_DOWN;
       const real_t tmp_coords_jac_12_GREEN_DOWN = jac_affine_0_1_GREEN_DOWN*jac_affine_1_2_GREEN_DOWN;
       const real_t jac_affine_2_0_GREEN_DOWN = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_1_2_GREEN_DOWN;
       const real_t jac_affine_2_1_GREEN_DOWN = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_2_2_GREEN_DOWN;
       const real_t tmp_coords_jac_11_GREEN_DOWN = jac_affine_1_2_GREEN_DOWN*jac_affine_2_1_GREEN_DOWN;
       const real_t jac_affine_2_2_GREEN_DOWN = -p_affine_const_0_2_GREEN_DOWN + p_affine_const_3_2_GREEN_DOWN;
       const real_t tmp_coords_jac_10_GREEN_DOWN = jac_affine_1_1_GREEN_DOWN*jac_affine_2_2_GREEN_DOWN;
       const real_t tmp_coords_jac_13_GREEN_DOWN = jac_affine_0_1_GREEN_DOWN*jac_affine_2_2_GREEN_DOWN;
       const real_t tmp_coords_jac_15_GREEN_DOWN = jac_affine_0_0_GREEN_DOWN*tmp_coords_jac_10_GREEN_DOWN - jac_affine_0_0_GREEN_DOWN*tmp_coords_jac_11_GREEN_DOWN + jac_affine_0_2_GREEN_DOWN*jac_affine_1_0_GREEN_DOWN*jac_affine_2_1_GREEN_DOWN - jac_affine_1_0_GREEN_DOWN*tmp_coords_jac_13_GREEN_DOWN + jac_affine_2_0_GREEN_DOWN*tmp_coords_jac_12_GREEN_DOWN - jac_affine_2_0_GREEN_DOWN*tmp_coords_jac_14_GREEN_DOWN;
       const real_t tmp_coords_jac_16_GREEN_DOWN = 1.0 / (tmp_coords_jac_15_GREEN_DOWN);
       const real_t jac_affine_inv_0_0_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(tmp_coords_jac_10_GREEN_DOWN - tmp_coords_jac_11_GREEN_DOWN);
       const real_t jac_affine_inv_0_1_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(jac_affine_0_2_GREEN_DOWN*jac_affine_2_1_GREEN_DOWN - tmp_coords_jac_13_GREEN_DOWN);
       const real_t jac_affine_inv_0_2_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(tmp_coords_jac_12_GREEN_DOWN - tmp_coords_jac_14_GREEN_DOWN);
       const real_t jac_affine_inv_1_0_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(-jac_affine_1_0_GREEN_DOWN*jac_affine_2_2_GREEN_DOWN + jac_affine_1_2_GREEN_DOWN*jac_affine_2_0_GREEN_DOWN);
       const real_t jac_affine_inv_1_1_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(jac_affine_0_0_GREEN_DOWN*jac_affine_2_2_GREEN_DOWN - jac_affine_0_2_GREEN_DOWN*jac_affine_2_0_GREEN_DOWN);
       const real_t jac_affine_inv_1_2_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(-jac_affine_0_0_GREEN_DOWN*jac_affine_1_2_GREEN_DOWN + jac_affine_0_2_GREEN_DOWN*jac_affine_1_0_GREEN_DOWN);
       const real_t jac_affine_inv_2_0_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(jac_affine_1_0_GREEN_DOWN*jac_affine_2_1_GREEN_DOWN - jac_affine_1_1_GREEN_DOWN*jac_affine_2_0_GREEN_DOWN);
       const real_t jac_affine_inv_2_1_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(-jac_affine_0_0_GREEN_DOWN*jac_affine_2_1_GREEN_DOWN + jac_affine_0_1_GREEN_DOWN*jac_affine_2_0_GREEN_DOWN);
       const real_t jac_affine_inv_2_2_GREEN_DOWN = tmp_coords_jac_16_GREEN_DOWN*(jac_affine_0_0_GREEN_DOWN*jac_affine_1_1_GREEN_DOWN - jac_affine_0_1_GREEN_DOWN*jac_affine_1_0_GREEN_DOWN);
       const real_t abs_det_jac_affine_GREEN_DOWN = abs(tmp_coords_jac_15_GREEN_DOWN);
       {
          /* CellType.GREEN_DOWN */
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const __m256d p_affine_0_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_0_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_0_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_1_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_1_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_1_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_2_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_2_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_2_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d p_affine_3_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0,macro_vertex_coord_id_1comp0)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0,macro_vertex_coord_id_2comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0)),_mm256_set_pd(macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0,macro_vertex_coord_id_3comp0)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0,macro_vertex_coord_id_0comp0));
                const __m256d p_affine_3_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1,macro_vertex_coord_id_1comp1)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1,macro_vertex_coord_id_2comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1)),_mm256_set_pd(macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1,macro_vertex_coord_id_3comp1)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1,macro_vertex_coord_id_0comp1));
                const __m256d p_affine_3_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2,macro_vertex_coord_id_1comp2)),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float))),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2,macro_vertex_coord_id_2comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2)),_mm256_set_pd(macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2,macro_vertex_coord_id_3comp2)),_mm256_add_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_loadu_pd(& _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_set_pd(micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float,micro_edges_per_macro_edge_float)))),_mm256_set_pd(macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2,macro_vertex_coord_id_0comp2));
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_10 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_11 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_12 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_13 = _mm256_loadu_pd(& _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_14 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_15 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_16 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_17 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_18 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_19 = _mm256_loadu_pd(& _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_20 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_21 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_22 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_23 = _mm256_loadu_pd(& _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_24 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_25 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_26 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_27 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_28 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_29 = _mm256_loadu_pd(& _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d rho_dof_0 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d rho_dof_1 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_2 = _mm256_loadu_pd(& _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d rho_dof_3 = _mm256_loadu_pd(& _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_10 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_11 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_12 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_13 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_14 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_15 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_16 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_17 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_18 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_19 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_20 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_21 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_22 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_23 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_24 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_25 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_26 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_27 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_28 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_29 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                const __m256d tmp_qloop_13 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_1);
                const __m256d tmp_qloop_14 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_2);
                const __m256d tmp_qloop_15 = _mm256_add_pd(_mm256_mul_pd(rho_dof_0,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),rho_dof_3);
                const __m256d tmp_qloop_16 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0,jac_blending_inv_0_0)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0,jac_blending_inv_1_0))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0,jac_blending_inv_2_0)))));
                const __m256d tmp_qloop_29 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1,jac_blending_inv_0_1)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1,jac_blending_inv_1_1))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1,jac_blending_inv_2_1)))));
                const __m256d tmp_qloop_31 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_qloop_13,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN,jac_affine_inv_0_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN,jac_affine_inv_0_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN,jac_affine_inv_0_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))),_mm256_mul_pd(tmp_qloop_14,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN,jac_affine_inv_1_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN,jac_affine_inv_1_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN,jac_affine_inv_1_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2))))),_mm256_mul_pd(tmp_qloop_15,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN,jac_affine_inv_2_0_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2,jac_blending_inv_0_2)),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN,jac_affine_inv_2_1_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2,jac_blending_inv_1_2))),_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN,jac_affine_inv_2_2_GREEN_DOWN),_mm256_set_pd(jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2,jac_blending_inv_2_2)))));
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const __m256d tmp_qloop_0 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_1 = _mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_2 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_3 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_4 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_5 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_qloop_6 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_7 = _mm256_mul_pd(tmp_qloop_6,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_8 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_9 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_10 = _mm256_mul_pd(tmp_qloop_8,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_11 = _mm256_add_pd(tmp_qloop_10,tmp_qloop_9);
                   const __m256d tmp_qloop_12 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_qloop_1),tmp_qloop_11),tmp_qloop_3),tmp_qloop_5),tmp_qloop_7);
                   const __m256d tmp_qloop_17 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0));
                   const __m256d tmp_qloop_18 = _mm256_mul_pd(_mm256_mul_pd(_mm256_mul_pd(_mm256_div_pd(_mm256_set_pd(1.0,1.0,1.0,1.0),_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(rho_dof_1,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(rho_dof_2,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(rho_dof_3,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_mul_pd(rho_dof_0,tmp_qloop_17))),_mm256_set_pd(_data_q_w[q],_data_q_w[q],_data_q_w[q],_data_q_w[q])),_mm256_set_pd(abs_det_jac_affine_GREEN_DOWN,abs_det_jac_affine_GREEN_DOWN,abs_det_jac_affine_GREEN_DOWN,abs_det_jac_affine_GREEN_DOWN)),_mm256_set_pd(abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending,abs_det_jac_blending));
                   const __m256d tmp_qloop_19 = _mm256_mul_pd(tmp_qloop_17,tmp_qloop_18);
                   const __m256d tmp_qloop_20 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_19);
                   const __m256d tmp_qloop_21 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_qloop_1);
                   const __m256d tmp_qloop_22 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_qloop_3);
                   const __m256d tmp_qloop_23 = _mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_qloop_5);
                   const __m256d tmp_qloop_24 = _mm256_mul_pd(tmp_qloop_4,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_25 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_mul_pd(tmp_qloop_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_24,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_26 = _mm256_mul_pd(tmp_qloop_2,_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_qloop_27 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_mul_pd(tmp_qloop_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_26,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)));
                   const __m256d tmp_qloop_28 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(tmp_qloop_7,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_qloop_0,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0)));
                   const __m256d tmp_qloop_30 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_29);
                   const __m256d tmp_qloop_32 = _mm256_mul_pd(tmp_qloop_19,tmp_qloop_31);
                   const __m256d tmp_qloop_33 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_qloop_34 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_33);
                   const __m256d tmp_qloop_35 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_qloop_36 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_35);
                   const __m256d tmp_qloop_37 = _mm256_mul_pd(tmp_qloop_36,tmp_qloop_9);
                   const __m256d tmp_qloop_38 = _mm256_mul_pd(tmp_qloop_0,tmp_qloop_18);
                   const __m256d tmp_qloop_39 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_38);
                   const __m256d tmp_qloop_40 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_33);
                   const __m256d tmp_qloop_41 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_35);
                   const __m256d tmp_qloop_42 = _mm256_mul_pd(tmp_qloop_41,tmp_qloop_9);
                   const __m256d tmp_qloop_43 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_38);
                   const __m256d tmp_qloop_44 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_33);
                   const __m256d tmp_qloop_45 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_35);
                   const __m256d tmp_qloop_46 = _mm256_mul_pd(tmp_qloop_45,tmp_qloop_9);
                   const __m256d tmp_qloop_47 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_38);
                   const __m256d tmp_qloop_48 = _mm256_mul_pd(_mm256_mul_pd(tmp_qloop_18,tmp_qloop_2),tmp_qloop_8);
                   const __m256d tmp_qloop_49 = _mm256_mul_pd(tmp_qloop_18,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_qloop_50 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_49);
                   const __m256d tmp_qloop_51 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_49);
                   const __m256d tmp_qloop_52 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_49);
                   const __m256d q_tmp_0_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_20);
                   const __m256d q_tmp_0_1 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_21);
                   const __m256d q_tmp_0_2 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_22);
                   const __m256d q_tmp_0_3 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_23);
                   const __m256d q_tmp_0_4 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_20);
                   const __m256d q_tmp_0_5 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_9);
                   const __m256d q_tmp_0_6 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_7);
                   const __m256d q_tmp_0_7 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_25);
                   const __m256d q_tmp_0_8 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_27);
                   const __m256d q_tmp_0_9 = _mm256_mul_pd(tmp_qloop_20,tmp_qloop_28);
                   const __m256d q_tmp_0_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_30);
                   const __m256d q_tmp_0_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_30);
                   const __m256d q_tmp_0_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_30);
                   const __m256d q_tmp_0_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_30);
                   const __m256d q_tmp_0_14 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_30);
                   const __m256d q_tmp_0_15 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_9);
                   const __m256d q_tmp_0_16 = _mm256_mul_pd(tmp_qloop_30,tmp_qloop_7);
                   const __m256d q_tmp_0_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_30);
                   const __m256d q_tmp_0_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_30);
                   const __m256d q_tmp_0_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_30);
                   const __m256d q_tmp_0_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_32);
                   const __m256d q_tmp_0_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_32);
                   const __m256d q_tmp_0_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_32);
                   const __m256d q_tmp_0_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_32);
                   const __m256d q_tmp_0_24 = _mm256_mul_pd(tmp_qloop_10,tmp_qloop_32);
                   const __m256d q_tmp_0_25 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_9);
                   const __m256d q_tmp_0_26 = _mm256_mul_pd(tmp_qloop_32,tmp_qloop_7);
                   const __m256d q_tmp_0_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_32);
                   const __m256d q_tmp_0_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_32);
                   const __m256d q_tmp_0_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_32);
                   const __m256d q_tmp_1_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_34);
                   const __m256d q_tmp_1_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_34);
                   const __m256d q_tmp_1_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_34);
                   const __m256d q_tmp_1_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_34);
                   const __m256d q_tmp_1_4 = tmp_qloop_37;
                   const __m256d q_tmp_1_5 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_8);
                   const __m256d q_tmp_1_6 = _mm256_mul_pd(tmp_qloop_39,tmp_qloop_6);
                   const __m256d q_tmp_1_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_34);
                   const __m256d q_tmp_1_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_34);
                   const __m256d q_tmp_1_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_34);
                   const __m256d q_tmp_1_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_40);
                   const __m256d q_tmp_1_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_40);
                   const __m256d q_tmp_1_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_40);
                   const __m256d q_tmp_1_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_40);
                   const __m256d q_tmp_1_14 = tmp_qloop_42;
                   const __m256d q_tmp_1_15 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_8);
                   const __m256d q_tmp_1_16 = _mm256_mul_pd(tmp_qloop_43,tmp_qloop_6);
                   const __m256d q_tmp_1_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_40);
                   const __m256d q_tmp_1_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_40);
                   const __m256d q_tmp_1_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_40);
                   const __m256d q_tmp_1_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_44);
                   const __m256d q_tmp_1_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_44);
                   const __m256d q_tmp_1_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_44);
                   const __m256d q_tmp_1_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_44);
                   const __m256d q_tmp_1_24 = tmp_qloop_46;
                   const __m256d q_tmp_1_25 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_8);
                   const __m256d q_tmp_1_26 = _mm256_mul_pd(tmp_qloop_47,tmp_qloop_6);
                   const __m256d q_tmp_1_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_44);
                   const __m256d q_tmp_1_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_44);
                   const __m256d q_tmp_1_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_44);
                   const __m256d q_tmp_2_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_36);
                   const __m256d q_tmp_2_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_36);
                   const __m256d q_tmp_2_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_36);
                   const __m256d q_tmp_2_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_36);
                   const __m256d q_tmp_2_4 = _mm256_mul_pd(tmp_qloop_16,tmp_qloop_48);
                   const __m256d q_tmp_2_5 = tmp_qloop_37;
                   const __m256d q_tmp_2_6 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_34);
                   const __m256d q_tmp_2_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_36);
                   const __m256d q_tmp_2_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_36);
                   const __m256d q_tmp_2_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_36);
                   const __m256d q_tmp_2_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_41);
                   const __m256d q_tmp_2_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_41);
                   const __m256d q_tmp_2_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_41);
                   const __m256d q_tmp_2_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_41);
                   const __m256d q_tmp_2_14 = _mm256_mul_pd(tmp_qloop_29,tmp_qloop_48);
                   const __m256d q_tmp_2_15 = tmp_qloop_42;
                   const __m256d q_tmp_2_16 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_40);
                   const __m256d q_tmp_2_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_41);
                   const __m256d q_tmp_2_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_41);
                   const __m256d q_tmp_2_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_41);
                   const __m256d q_tmp_2_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_45);
                   const __m256d q_tmp_2_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_45);
                   const __m256d q_tmp_2_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_45);
                   const __m256d q_tmp_2_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_45);
                   const __m256d q_tmp_2_24 = _mm256_mul_pd(tmp_qloop_31,tmp_qloop_48);
                   const __m256d q_tmp_2_25 = tmp_qloop_46;
                   const __m256d q_tmp_2_26 = _mm256_mul_pd(tmp_qloop_26,tmp_qloop_44);
                   const __m256d q_tmp_2_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_45);
                   const __m256d q_tmp_2_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_45);
                   const __m256d q_tmp_2_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_45);
                   const __m256d q_tmp_3_0 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_50);
                   const __m256d q_tmp_3_1 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_50);
                   const __m256d q_tmp_3_2 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_50);
                   const __m256d q_tmp_3_3 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_50);
                   const __m256d q_tmp_3_4 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_36);
                   const __m256d q_tmp_3_5 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_34);
                   const __m256d q_tmp_3_6 = tmp_qloop_37;
                   const __m256d q_tmp_3_7 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_50);
                   const __m256d q_tmp_3_8 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_50);
                   const __m256d q_tmp_3_9 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_50);
                   const __m256d q_tmp_3_10 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_51);
                   const __m256d q_tmp_3_11 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_51);
                   const __m256d q_tmp_3_12 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_51);
                   const __m256d q_tmp_3_13 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_51);
                   const __m256d q_tmp_3_14 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_41);
                   const __m256d q_tmp_3_15 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_40);
                   const __m256d q_tmp_3_16 = tmp_qloop_42;
                   const __m256d q_tmp_3_17 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_51);
                   const __m256d q_tmp_3_18 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_51);
                   const __m256d q_tmp_3_19 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_51);
                   const __m256d q_tmp_3_20 = _mm256_mul_pd(tmp_qloop_12,tmp_qloop_52);
                   const __m256d q_tmp_3_21 = _mm256_mul_pd(tmp_qloop_21,tmp_qloop_52);
                   const __m256d q_tmp_3_22 = _mm256_mul_pd(tmp_qloop_22,tmp_qloop_52);
                   const __m256d q_tmp_3_23 = _mm256_mul_pd(tmp_qloop_23,tmp_qloop_52);
                   const __m256d q_tmp_3_24 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_45);
                   const __m256d q_tmp_3_25 = _mm256_mul_pd(tmp_qloop_24,tmp_qloop_44);
                   const __m256d q_tmp_3_26 = tmp_qloop_46;
                   const __m256d q_tmp_3_27 = _mm256_mul_pd(tmp_qloop_25,tmp_qloop_52);
                   const __m256d q_tmp_3_28 = _mm256_mul_pd(tmp_qloop_27,tmp_qloop_52);
                   const __m256d q_tmp_3_29 = _mm256_mul_pd(tmp_qloop_28,tmp_qloop_52);
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,q_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,q_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,q_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,q_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,q_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,q_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,q_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,q_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,q_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,q_tmp_0_9);
                   q_acc_0_10 = _mm256_add_pd(q_acc_0_10,q_tmp_0_10);
                   q_acc_0_11 = _mm256_add_pd(q_acc_0_11,q_tmp_0_11);
                   q_acc_0_12 = _mm256_add_pd(q_acc_0_12,q_tmp_0_12);
                   q_acc_0_13 = _mm256_add_pd(q_acc_0_13,q_tmp_0_13);
                   q_acc_0_14 = _mm256_add_pd(q_acc_0_14,q_tmp_0_14);
                   q_acc_0_15 = _mm256_add_pd(q_acc_0_15,q_tmp_0_15);
                   q_acc_0_16 = _mm256_add_pd(q_acc_0_16,q_tmp_0_16);
                   q_acc_0_17 = _mm256_add_pd(q_acc_0_17,q_tmp_0_17);
                   q_acc_0_18 = _mm256_add_pd(q_acc_0_18,q_tmp_0_18);
                   q_acc_0_19 = _mm256_add_pd(q_acc_0_19,q_tmp_0_19);
                   q_acc_0_20 = _mm256_add_pd(q_acc_0_20,q_tmp_0_20);
                   q_acc_0_21 = _mm256_add_pd(q_acc_0_21,q_tmp_0_21);
                   q_acc_0_22 = _mm256_add_pd(q_acc_0_22,q_tmp_0_22);
                   q_acc_0_23 = _mm256_add_pd(q_acc_0_23,q_tmp_0_23);
                   q_acc_0_24 = _mm256_add_pd(q_acc_0_24,q_tmp_0_24);
                   q_acc_0_25 = _mm256_add_pd(q_acc_0_25,q_tmp_0_25);
                   q_acc_0_26 = _mm256_add_pd(q_acc_0_26,q_tmp_0_26);
                   q_acc_0_27 = _mm256_add_pd(q_acc_0_27,q_tmp_0_27);
                   q_acc_0_28 = _mm256_add_pd(q_acc_0_28,q_tmp_0_28);
                   q_acc_0_29 = _mm256_add_pd(q_acc_0_29,q_tmp_0_29);
                   q_acc_1_0 = _mm256_add_pd(q_acc_1_0,q_tmp_1_0);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,q_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,q_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,q_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,q_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,q_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,q_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,q_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,q_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,q_tmp_1_9);
                   q_acc_1_10 = _mm256_add_pd(q_acc_1_10,q_tmp_1_10);
                   q_acc_1_11 = _mm256_add_pd(q_acc_1_11,q_tmp_1_11);
                   q_acc_1_12 = _mm256_add_pd(q_acc_1_12,q_tmp_1_12);
                   q_acc_1_13 = _mm256_add_pd(q_acc_1_13,q_tmp_1_13);
                   q_acc_1_14 = _mm256_add_pd(q_acc_1_14,q_tmp_1_14);
                   q_acc_1_15 = _mm256_add_pd(q_acc_1_15,q_tmp_1_15);
                   q_acc_1_16 = _mm256_add_pd(q_acc_1_16,q_tmp_1_16);
                   q_acc_1_17 = _mm256_add_pd(q_acc_1_17,q_tmp_1_17);
                   q_acc_1_18 = _mm256_add_pd(q_acc_1_18,q_tmp_1_18);
                   q_acc_1_19 = _mm256_add_pd(q_acc_1_19,q_tmp_1_19);
                   q_acc_1_20 = _mm256_add_pd(q_acc_1_20,q_tmp_1_20);
                   q_acc_1_21 = _mm256_add_pd(q_acc_1_21,q_tmp_1_21);
                   q_acc_1_22 = _mm256_add_pd(q_acc_1_22,q_tmp_1_22);
                   q_acc_1_23 = _mm256_add_pd(q_acc_1_23,q_tmp_1_23);
                   q_acc_1_24 = _mm256_add_pd(q_acc_1_24,q_tmp_1_24);
                   q_acc_1_25 = _mm256_add_pd(q_acc_1_25,q_tmp_1_25);
                   q_acc_1_26 = _mm256_add_pd(q_acc_1_26,q_tmp_1_26);
                   q_acc_1_27 = _mm256_add_pd(q_acc_1_27,q_tmp_1_27);
                   q_acc_1_28 = _mm256_add_pd(q_acc_1_28,q_tmp_1_28);
                   q_acc_1_29 = _mm256_add_pd(q_acc_1_29,q_tmp_1_29);
                   q_acc_2_0 = _mm256_add_pd(q_acc_2_0,q_tmp_2_0);
                   q_acc_2_1 = _mm256_add_pd(q_acc_2_1,q_tmp_2_1);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,q_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,q_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,q_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,q_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,q_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,q_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,q_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,q_tmp_2_9);
                   q_acc_2_10 = _mm256_add_pd(q_acc_2_10,q_tmp_2_10);
                   q_acc_2_11 = _mm256_add_pd(q_acc_2_11,q_tmp_2_11);
                   q_acc_2_12 = _mm256_add_pd(q_acc_2_12,q_tmp_2_12);
                   q_acc_2_13 = _mm256_add_pd(q_acc_2_13,q_tmp_2_13);
                   q_acc_2_14 = _mm256_add_pd(q_acc_2_14,q_tmp_2_14);
                   q_acc_2_15 = _mm256_add_pd(q_acc_2_15,q_tmp_2_15);
                   q_acc_2_16 = _mm256_add_pd(q_acc_2_16,q_tmp_2_16);
                   q_acc_2_17 = _mm256_add_pd(q_acc_2_17,q_tmp_2_17);
                   q_acc_2_18 = _mm256_add_pd(q_acc_2_18,q_tmp_2_18);
                   q_acc_2_19 = _mm256_add_pd(q_acc_2_19,q_tmp_2_19);
                   q_acc_2_20 = _mm256_add_pd(q_acc_2_20,q_tmp_2_20);
                   q_acc_2_21 = _mm256_add_pd(q_acc_2_21,q_tmp_2_21);
                   q_acc_2_22 = _mm256_add_pd(q_acc_2_22,q_tmp_2_22);
                   q_acc_2_23 = _mm256_add_pd(q_acc_2_23,q_tmp_2_23);
                   q_acc_2_24 = _mm256_add_pd(q_acc_2_24,q_tmp_2_24);
                   q_acc_2_25 = _mm256_add_pd(q_acc_2_25,q_tmp_2_25);
                   q_acc_2_26 = _mm256_add_pd(q_acc_2_26,q_tmp_2_26);
                   q_acc_2_27 = _mm256_add_pd(q_acc_2_27,q_tmp_2_27);
                   q_acc_2_28 = _mm256_add_pd(q_acc_2_28,q_tmp_2_28);
                   q_acc_2_29 = _mm256_add_pd(q_acc_2_29,q_tmp_2_29);
                   q_acc_3_0 = _mm256_add_pd(q_acc_3_0,q_tmp_3_0);
                   q_acc_3_1 = _mm256_add_pd(q_acc_3_1,q_tmp_3_1);
                   q_acc_3_2 = _mm256_add_pd(q_acc_3_2,q_tmp_3_2);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,q_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,q_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,q_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,q_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,q_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,q_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,q_tmp_3_9);
                   q_acc_3_10 = _mm256_add_pd(q_acc_3_10,q_tmp_3_10);
                   q_acc_3_11 = _mm256_add_pd(q_acc_3_11,q_tmp_3_11);
                   q_acc_3_12 = _mm256_add_pd(q_acc_3_12,q_tmp_3_12);
                   q_acc_3_13 = _mm256_add_pd(q_acc_3_13,q_tmp_3_13);
                   q_acc_3_14 = _mm256_add_pd(q_acc_3_14,q_tmp_3_14);
                   q_acc_3_15 = _mm256_add_pd(q_acc_3_15,q_tmp_3_15);
                   q_acc_3_16 = _mm256_add_pd(q_acc_3_16,q_tmp_3_16);
                   q_acc_3_17 = _mm256_add_pd(q_acc_3_17,q_tmp_3_17);
                   q_acc_3_18 = _mm256_add_pd(q_acc_3_18,q_tmp_3_18);
                   q_acc_3_19 = _mm256_add_pd(q_acc_3_19,q_tmp_3_19);
                   q_acc_3_20 = _mm256_add_pd(q_acc_3_20,q_tmp_3_20);
                   q_acc_3_21 = _mm256_add_pd(q_acc_3_21,q_tmp_3_21);
                   q_acc_3_22 = _mm256_add_pd(q_acc_3_22,q_tmp_3_22);
                   q_acc_3_23 = _mm256_add_pd(q_acc_3_23,q_tmp_3_23);
                   q_acc_3_24 = _mm256_add_pd(q_acc_3_24,q_tmp_3_24);
                   q_acc_3_25 = _mm256_add_pd(q_acc_3_25,q_tmp_3_25);
                   q_acc_3_26 = _mm256_add_pd(q_acc_3_26,q_tmp_3_26);
                   q_acc_3_27 = _mm256_add_pd(q_acc_3_27,q_tmp_3_27);
                   q_acc_3_28 = _mm256_add_pd(q_acc_3_28,q_tmp_3_28);
                   q_acc_3_29 = _mm256_add_pd(q_acc_3_29,q_tmp_3_29);
                }
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_10,src_dof_10)),_mm256_mul_pd(q_acc_0_11,src_dof_11)),_mm256_mul_pd(q_acc_0_12,src_dof_12)),_mm256_mul_pd(q_acc_0_13,src_dof_13)),_mm256_mul_pd(q_acc_0_14,src_dof_14)),_mm256_mul_pd(q_acc_0_15,src_dof_15)),_mm256_mul_pd(q_acc_0_16,src_dof_16)),_mm256_mul_pd(q_acc_0_17,src_dof_17)),_mm256_mul_pd(q_acc_0_18,src_dof_18)),_mm256_mul_pd(q_acc_0_19,src_dof_19)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_20,src_dof_20)),_mm256_mul_pd(q_acc_0_21,src_dof_21)),_mm256_mul_pd(q_acc_0_22,src_dof_22)),_mm256_mul_pd(q_acc_0_23,src_dof_23)),_mm256_mul_pd(q_acc_0_24,src_dof_24)),_mm256_mul_pd(q_acc_0_25,src_dof_25)),_mm256_mul_pd(q_acc_0_26,src_dof_26)),_mm256_mul_pd(q_acc_0_27,src_dof_27)),_mm256_mul_pd(q_acc_0_28,src_dof_28)),_mm256_mul_pd(q_acc_0_29,src_dof_29)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_10,src_dof_10)),_mm256_mul_pd(q_acc_1_11,src_dof_11)),_mm256_mul_pd(q_acc_1_12,src_dof_12)),_mm256_mul_pd(q_acc_1_13,src_dof_13)),_mm256_mul_pd(q_acc_1_14,src_dof_14)),_mm256_mul_pd(q_acc_1_15,src_dof_15)),_mm256_mul_pd(q_acc_1_16,src_dof_16)),_mm256_mul_pd(q_acc_1_17,src_dof_17)),_mm256_mul_pd(q_acc_1_18,src_dof_18)),_mm256_mul_pd(q_acc_1_19,src_dof_19)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_20,src_dof_20)),_mm256_mul_pd(q_acc_1_21,src_dof_21)),_mm256_mul_pd(q_acc_1_22,src_dof_22)),_mm256_mul_pd(q_acc_1_23,src_dof_23)),_mm256_mul_pd(q_acc_1_24,src_dof_24)),_mm256_mul_pd(q_acc_1_25,src_dof_25)),_mm256_mul_pd(q_acc_1_26,src_dof_26)),_mm256_mul_pd(q_acc_1_27,src_dof_27)),_mm256_mul_pd(q_acc_1_28,src_dof_28)),_mm256_mul_pd(q_acc_1_29,src_dof_29)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_10,src_dof_10)),_mm256_mul_pd(q_acc_2_11,src_dof_11)),_mm256_mul_pd(q_acc_2_12,src_dof_12)),_mm256_mul_pd(q_acc_2_13,src_dof_13)),_mm256_mul_pd(q_acc_2_14,src_dof_14)),_mm256_mul_pd(q_acc_2_15,src_dof_15)),_mm256_mul_pd(q_acc_2_16,src_dof_16)),_mm256_mul_pd(q_acc_2_17,src_dof_17)),_mm256_mul_pd(q_acc_2_18,src_dof_18)),_mm256_mul_pd(q_acc_2_19,src_dof_19)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_20,src_dof_20)),_mm256_mul_pd(q_acc_2_21,src_dof_21)),_mm256_mul_pd(q_acc_2_22,src_dof_22)),_mm256_mul_pd(q_acc_2_23,src_dof_23)),_mm256_mul_pd(q_acc_2_24,src_dof_24)),_mm256_mul_pd(q_acc_2_25,src_dof_25)),_mm256_mul_pd(q_acc_2_26,src_dof_26)),_mm256_mul_pd(q_acc_2_27,src_dof_27)),_mm256_mul_pd(q_acc_2_28,src_dof_28)),_mm256_mul_pd(q_acc_2_29,src_dof_29)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_10,src_dof_10)),_mm256_mul_pd(q_acc_3_11,src_dof_11)),_mm256_mul_pd(q_acc_3_12,src_dof_12)),_mm256_mul_pd(q_acc_3_13,src_dof_13)),_mm256_mul_pd(q_acc_3_14,src_dof_14)),_mm256_mul_pd(q_acc_3_15,src_dof_15)),_mm256_mul_pd(q_acc_3_16,src_dof_16)),_mm256_mul_pd(q_acc_3_17,src_dof_17)),_mm256_mul_pd(q_acc_3_18,src_dof_18)),_mm256_mul_pd(q_acc_3_19,src_dof_19)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_20,src_dof_20)),_mm256_mul_pd(q_acc_3_21,src_dof_21)),_mm256_mul_pd(q_acc_3_22,src_dof_22)),_mm256_mul_pd(q_acc_3_23,src_dof_23)),_mm256_mul_pd(q_acc_3_24,src_dof_24)),_mm256_mul_pd(q_acc_3_25,src_dof_25)),_mm256_mul_pd(q_acc_3_26,src_dof_26)),_mm256_mul_pd(q_acc_3_27,src_dof_27)),_mm256_mul_pd(q_acc_3_28,src_dof_28)),_mm256_mul_pd(q_acc_3_29,src_dof_29)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
            
                const int64_t phantom_ctr_0 = ctr_0;
                real_t _data_float_loop_ctr_array_dim_0[4];
                _data_float_loop_ctr_array_dim_0[0] = (real_t) ctr_0+ 0;
                _data_float_loop_ctr_array_dim_0[1] = (real_t) ctr_0+ 1;
                _data_float_loop_ctr_array_dim_0[2] = (real_t) ctr_0+ 2;
                _data_float_loop_ctr_array_dim_0[3] = (real_t) ctr_0+ 3;
                real_t _data_float_loop_ctr_array_dim_1[4];
                _data_float_loop_ctr_array_dim_1[0] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[1] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[2] = (real_t) ctr_1;
                _data_float_loop_ctr_array_dim_1[3] = (real_t) ctr_1;
                real_t _data_float_loop_ctr_array_dim_2[4];
                _data_float_loop_ctr_array_dim_2[0] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[1] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[2] = (real_t) ctr_2;
                _data_float_loop_ctr_array_dim_2[3] = (real_t) ctr_2;
            
                const real_t p_affine_0_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_0_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0*_data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0];
                const real_t p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*(1.0 + _data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0*_data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0*_data_float_loop_ctr_array_dim_0[ctr_0 - phantom_ctr_0] + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*(1.0 + _data_float_loop_ctr_array_dim_1[ctr_0 - phantom_ctr_0])*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*(1.0 + _data_float_loop_ctr_array_dim_2[ctr_0 - phantom_ctr_0])*1.0;
                const real_t src_dof_0 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_1 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_2 = _data_src_vertex_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_3 = _data_src_vertex_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_4 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_5 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_6 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_7 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_8 = _data_src_edge_0[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_9 = _data_src_edge_0[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_10 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_11 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_12 = _data_src_vertex_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_13 = _data_src_vertex_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_14 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_15 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_16 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_17 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_18 = _data_src_edge_1[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_19 = _data_src_edge_1[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_20 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_21 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_22 = _data_src_vertex_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t src_dof_23 = _data_src_vertex_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const real_t src_dof_24 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_25 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_26 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const real_t src_dof_27 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t src_dof_28 = _data_src_edge_2[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const real_t src_dof_29 = _data_src_edge_2[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const real_t rho_dof_0 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const real_t rho_dof_1 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_2 = _data_rho[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const real_t rho_dof_3 = _data_rho[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                real_t q_acc_0_0 = 0.0;
                real_t q_acc_0_1 = 0.0;
                real_t q_acc_0_2 = 0.0;
                real_t q_acc_0_3 = 0.0;
                real_t q_acc_0_4 = 0.0;
                real_t q_acc_0_5 = 0.0;
                real_t q_acc_0_6 = 0.0;
                real_t q_acc_0_7 = 0.0;
                real_t q_acc_0_8 = 0.0;
                real_t q_acc_0_9 = 0.0;
                real_t q_acc_0_10 = 0.0;
                real_t q_acc_0_11 = 0.0;
                real_t q_acc_0_12 = 0.0;
                real_t q_acc_0_13 = 0.0;
                real_t q_acc_0_14 = 0.0;
                real_t q_acc_0_15 = 0.0;
                real_t q_acc_0_16 = 0.0;
                real_t q_acc_0_17 = 0.0;
                real_t q_acc_0_18 = 0.0;
                real_t q_acc_0_19 = 0.0;
                real_t q_acc_0_20 = 0.0;
                real_t q_acc_0_21 = 0.0;
                real_t q_acc_0_22 = 0.0;
                real_t q_acc_0_23 = 0.0;
                real_t q_acc_0_24 = 0.0;
                real_t q_acc_0_25 = 0.0;
                real_t q_acc_0_26 = 0.0;
                real_t q_acc_0_27 = 0.0;
                real_t q_acc_0_28 = 0.0;
                real_t q_acc_0_29 = 0.0;
                real_t q_acc_1_0 = 0.0;
                real_t q_acc_1_1 = 0.0;
                real_t q_acc_1_2 = 0.0;
                real_t q_acc_1_3 = 0.0;
                real_t q_acc_1_4 = 0.0;
                real_t q_acc_1_5 = 0.0;
                real_t q_acc_1_6 = 0.0;
                real_t q_acc_1_7 = 0.0;
                real_t q_acc_1_8 = 0.0;
                real_t q_acc_1_9 = 0.0;
                real_t q_acc_1_10 = 0.0;
                real_t q_acc_1_11 = 0.0;
                real_t q_acc_1_12 = 0.0;
                real_t q_acc_1_13 = 0.0;
                real_t q_acc_1_14 = 0.0;
                real_t q_acc_1_15 = 0.0;
                real_t q_acc_1_16 = 0.0;
                real_t q_acc_1_17 = 0.0;
                real_t q_acc_1_18 = 0.0;
                real_t q_acc_1_19 = 0.0;
                real_t q_acc_1_20 = 0.0;
                real_t q_acc_1_21 = 0.0;
                real_t q_acc_1_22 = 0.0;
                real_t q_acc_1_23 = 0.0;
                real_t q_acc_1_24 = 0.0;
                real_t q_acc_1_25 = 0.0;
                real_t q_acc_1_26 = 0.0;
                real_t q_acc_1_27 = 0.0;
                real_t q_acc_1_28 = 0.0;
                real_t q_acc_1_29 = 0.0;
                real_t q_acc_2_0 = 0.0;
                real_t q_acc_2_1 = 0.0;
                real_t q_acc_2_2 = 0.0;
                real_t q_acc_2_3 = 0.0;
                real_t q_acc_2_4 = 0.0;
                real_t q_acc_2_5 = 0.0;
                real_t q_acc_2_6 = 0.0;
                real_t q_acc_2_7 = 0.0;
                real_t q_acc_2_8 = 0.0;
                real_t q_acc_2_9 = 0.0;
                real_t q_acc_2_10 = 0.0;
                real_t q_acc_2_11 = 0.0;
                real_t q_acc_2_12 = 0.0;
                real_t q_acc_2_13 = 0.0;
                real_t q_acc_2_14 = 0.0;
                real_t q_acc_2_15 = 0.0;
                real_t q_acc_2_16 = 0.0;
                real_t q_acc_2_17 = 0.0;
                real_t q_acc_2_18 = 0.0;
                real_t q_acc_2_19 = 0.0;
                real_t q_acc_2_20 = 0.0;
                real_t q_acc_2_21 = 0.0;
                real_t q_acc_2_22 = 0.0;
                real_t q_acc_2_23 = 0.0;
                real_t q_acc_2_24 = 0.0;
                real_t q_acc_2_25 = 0.0;
                real_t q_acc_2_26 = 0.0;
                real_t q_acc_2_27 = 0.0;
                real_t q_acc_2_28 = 0.0;
                real_t q_acc_2_29 = 0.0;
                real_t q_acc_3_0 = 0.0;
                real_t q_acc_3_1 = 0.0;
                real_t q_acc_3_2 = 0.0;
                real_t q_acc_3_3 = 0.0;
                real_t q_acc_3_4 = 0.0;
                real_t q_acc_3_5 = 0.0;
                real_t q_acc_3_6 = 0.0;
                real_t q_acc_3_7 = 0.0;
                real_t q_acc_3_8 = 0.0;
                real_t q_acc_3_9 = 0.0;
                real_t q_acc_3_10 = 0.0;
                real_t q_acc_3_11 = 0.0;
                real_t q_acc_3_12 = 0.0;
                real_t q_acc_3_13 = 0.0;
                real_t q_acc_3_14 = 0.0;
                real_t q_acc_3_15 = 0.0;
                real_t q_acc_3_16 = 0.0;
                real_t q_acc_3_17 = 0.0;
                real_t q_acc_3_18 = 0.0;
                real_t q_acc_3_19 = 0.0;
                real_t q_acc_3_20 = 0.0;
                real_t q_acc_3_21 = 0.0;
                real_t q_acc_3_22 = 0.0;
                real_t q_acc_3_23 = 0.0;
                real_t q_acc_3_24 = 0.0;
                real_t q_acc_3_25 = 0.0;
                real_t q_acc_3_26 = 0.0;
                real_t q_acc_3_27 = 0.0;
                real_t q_acc_3_28 = 0.0;
                real_t q_acc_3_29 = 0.0;
                const real_t tmp_qloop_13 = -rho_dof_0 + rho_dof_1;
                const real_t tmp_qloop_14 = -rho_dof_0 + rho_dof_2;
                const real_t tmp_qloop_15 = -rho_dof_0 + rho_dof_3;
                const real_t tmp_qloop_16 = tmp_qloop_13*(jac_affine_inv_0_0_GREEN_DOWN*jac_blending_inv_0_0 + jac_affine_inv_0_1_GREEN_DOWN*jac_blending_inv_1_0 + jac_affine_inv_0_2_GREEN_DOWN*jac_blending_inv_2_0) + tmp_qloop_14*(jac_affine_inv_1_0_GREEN_DOWN*jac_blending_inv_0_0 + jac_affine_inv_1_1_GREEN_DOWN*jac_blending_inv_1_0 + jac_affine_inv_1_2_GREEN_DOWN*jac_blending_inv_2_0) + tmp_qloop_15*(jac_affine_inv_2_0_GREEN_DOWN*jac_blending_inv_0_0 + jac_affine_inv_2_1_GREEN_DOWN*jac_blending_inv_1_0 + jac_affine_inv_2_2_GREEN_DOWN*jac_blending_inv_2_0);
                const real_t tmp_qloop_29 = tmp_qloop_13*(jac_affine_inv_0_0_GREEN_DOWN*jac_blending_inv_0_1 + jac_affine_inv_0_1_GREEN_DOWN*jac_blending_inv_1_1 + jac_affine_inv_0_2_GREEN_DOWN*jac_blending_inv_2_1) + tmp_qloop_14*(jac_affine_inv_1_0_GREEN_DOWN*jac_blending_inv_0_1 + jac_affine_inv_1_1_GREEN_DOWN*jac_blending_inv_1_1 + jac_affine_inv_1_2_GREEN_DOWN*jac_blending_inv_2_1) + tmp_qloop_15*(jac_affine_inv_2_0_GREEN_DOWN*jac_blending_inv_0_1 + jac_affine_inv_2_1_GREEN_DOWN*jac_blending_inv_1_1 + jac_affine_inv_2_2_GREEN_DOWN*jac_blending_inv_2_1);
                const real_t tmp_qloop_31 = tmp_qloop_13*(jac_affine_inv_0_0_GREEN_DOWN*jac_blending_inv_0_2 + jac_affine_inv_0_1_GREEN_DOWN*jac_blending_inv_1_2 + jac_affine_inv_0_2_GREEN_DOWN*jac_blending_inv_2_2) + tmp_qloop_14*(jac_affine_inv_1_0_GREEN_DOWN*jac_blending_inv_0_2 + jac_affine_inv_1_1_GREEN_DOWN*jac_blending_inv_1_2 + jac_affine_inv_1_2_GREEN_DOWN*jac_blending_inv_2_2) + tmp_qloop_15*(jac_affine_inv_2_0_GREEN_DOWN*jac_blending_inv_0_2 + jac_affine_inv_2_1_GREEN_DOWN*jac_blending_inv_1_2 + jac_affine_inv_2_2_GREEN_DOWN*jac_blending_inv_2_2);
                for (int64_t q = 0; q < 5; q += 1)
                {
                   const real_t tmp_qloop_0 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const real_t tmp_qloop_1 = tmp_qloop_0*2.0;
                   const real_t tmp_qloop_2 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const real_t tmp_qloop_3 = tmp_qloop_2*2.0;
                   const real_t tmp_qloop_4 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const real_t tmp_qloop_5 = tmp_qloop_4*2.0;
                   const real_t tmp_qloop_6 = 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_7 = tmp_qloop_6*_data_q_p_0[q];
                   const real_t tmp_qloop_8 = 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_9 = tmp_qloop_8*_data_q_p_0[q];
                   const real_t tmp_qloop_10 = tmp_qloop_8*_data_q_p_1[q];
                   const real_t tmp_qloop_11 = tmp_qloop_10 + tmp_qloop_9;
                   const real_t tmp_qloop_12 = tmp_qloop_1 + tmp_qloop_11 + tmp_qloop_3 + tmp_qloop_5 + tmp_qloop_7 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0;
                   const real_t tmp_qloop_17 = 1.0 - _data_q_p_0[q] - _data_q_p_1[q] - _data_q_p_2[q];
                   const real_t tmp_qloop_18 = abs_det_jac_affine_GREEN_DOWN*abs_det_jac_blending*1.0 / (rho_dof_0*tmp_qloop_17 + rho_dof_1*_data_q_p_0[q] + rho_dof_2*_data_q_p_1[q] + rho_dof_3*_data_q_p_2[q])*_data_q_w[q];
                   const real_t tmp_qloop_19 = tmp_qloop_17*tmp_qloop_18;
                   const real_t tmp_qloop_20 = tmp_qloop_16*tmp_qloop_19;
                   const real_t tmp_qloop_21 = tmp_qloop_1 - _data_q_p_0[q];
                   const real_t tmp_qloop_22 = tmp_qloop_3 - _data_q_p_1[q];
                   const real_t tmp_qloop_23 = tmp_qloop_5 - _data_q_p_2[q];
                   const real_t tmp_qloop_24 = tmp_qloop_4*4.0;
                   const real_t tmp_qloop_25 = -tmp_qloop_11 - tmp_qloop_24 + 4.0*_data_q_p_2[q];
                   const real_t tmp_qloop_26 = tmp_qloop_2*4.0;
                   const real_t tmp_qloop_27 = -tmp_qloop_10 - tmp_qloop_26 - tmp_qloop_7 + 4.0*_data_q_p_1[q];
                   const real_t tmp_qloop_28 = tmp_qloop_0*-4.0 - tmp_qloop_7 - tmp_qloop_9 + 4.0*_data_q_p_0[q];
                   const real_t tmp_qloop_30 = tmp_qloop_19*tmp_qloop_29;
                   const real_t tmp_qloop_32 = tmp_qloop_19*tmp_qloop_31;
                   const real_t tmp_qloop_33 = tmp_qloop_18*_data_q_p_0[q];
                   const real_t tmp_qloop_34 = tmp_qloop_16*tmp_qloop_33;
                   const real_t tmp_qloop_35 = tmp_qloop_18*_data_q_p_1[q];
                   const real_t tmp_qloop_36 = tmp_qloop_16*tmp_qloop_35;
                   const real_t tmp_qloop_37 = tmp_qloop_36*tmp_qloop_9;
                   const real_t tmp_qloop_38 = tmp_qloop_0*tmp_qloop_18;
                   const real_t tmp_qloop_39 = tmp_qloop_16*tmp_qloop_38;
                   const real_t tmp_qloop_40 = tmp_qloop_29*tmp_qloop_33;
                   const real_t tmp_qloop_41 = tmp_qloop_29*tmp_qloop_35;
                   const real_t tmp_qloop_42 = tmp_qloop_41*tmp_qloop_9;
                   const real_t tmp_qloop_43 = tmp_qloop_29*tmp_qloop_38;
                   const real_t tmp_qloop_44 = tmp_qloop_31*tmp_qloop_33;
                   const real_t tmp_qloop_45 = tmp_qloop_31*tmp_qloop_35;
                   const real_t tmp_qloop_46 = tmp_qloop_45*tmp_qloop_9;
                   const real_t tmp_qloop_47 = tmp_qloop_31*tmp_qloop_38;
                   const real_t tmp_qloop_48 = tmp_qloop_18*tmp_qloop_2*tmp_qloop_8;
                   const real_t tmp_qloop_49 = tmp_qloop_18*_data_q_p_2[q];
                   const real_t tmp_qloop_50 = tmp_qloop_16*tmp_qloop_49;
                   const real_t tmp_qloop_51 = tmp_qloop_29*tmp_qloop_49;
                   const real_t tmp_qloop_52 = tmp_qloop_31*tmp_qloop_49;
                   const real_t q_tmp_0_0 = tmp_qloop_12*tmp_qloop_20;
                   const real_t q_tmp_0_1 = tmp_qloop_20*tmp_qloop_21;
                   const real_t q_tmp_0_2 = tmp_qloop_20*tmp_qloop_22;
                   const real_t q_tmp_0_3 = tmp_qloop_20*tmp_qloop_23;
                   const real_t q_tmp_0_4 = tmp_qloop_10*tmp_qloop_20;
                   const real_t q_tmp_0_5 = tmp_qloop_20*tmp_qloop_9;
                   const real_t q_tmp_0_6 = tmp_qloop_20*tmp_qloop_7;
                   const real_t q_tmp_0_7 = tmp_qloop_20*tmp_qloop_25;
                   const real_t q_tmp_0_8 = tmp_qloop_20*tmp_qloop_27;
                   const real_t q_tmp_0_9 = tmp_qloop_20*tmp_qloop_28;
                   const real_t q_tmp_0_10 = tmp_qloop_12*tmp_qloop_30;
                   const real_t q_tmp_0_11 = tmp_qloop_21*tmp_qloop_30;
                   const real_t q_tmp_0_12 = tmp_qloop_22*tmp_qloop_30;
                   const real_t q_tmp_0_13 = tmp_qloop_23*tmp_qloop_30;
                   const real_t q_tmp_0_14 = tmp_qloop_10*tmp_qloop_30;
                   const real_t q_tmp_0_15 = tmp_qloop_30*tmp_qloop_9;
                   const real_t q_tmp_0_16 = tmp_qloop_30*tmp_qloop_7;
                   const real_t q_tmp_0_17 = tmp_qloop_25*tmp_qloop_30;
                   const real_t q_tmp_0_18 = tmp_qloop_27*tmp_qloop_30;
                   const real_t q_tmp_0_19 = tmp_qloop_28*tmp_qloop_30;
                   const real_t q_tmp_0_20 = tmp_qloop_12*tmp_qloop_32;
                   const real_t q_tmp_0_21 = tmp_qloop_21*tmp_qloop_32;
                   const real_t q_tmp_0_22 = tmp_qloop_22*tmp_qloop_32;
                   const real_t q_tmp_0_23 = tmp_qloop_23*tmp_qloop_32;
                   const real_t q_tmp_0_24 = tmp_qloop_10*tmp_qloop_32;
                   const real_t q_tmp_0_25 = tmp_qloop_32*tmp_qloop_9;
                   const real_t q_tmp_0_26 = tmp_qloop_32*tmp_qloop_7;
                   const real_t q_tmp_0_27 = tmp_qloop_25*tmp_qloop_32;
                   const real_t q_tmp_0_28 = tmp_qloop_27*tmp_qloop_32;
                   const real_t q_tmp_0_29 = tmp_qloop_28*tmp_qloop_32;
                   const real_t q_tmp_1_0 = tmp_qloop_12*tmp_qloop_34;
                   const real_t q_tmp_1_1 = tmp_qloop_21*tmp_qloop_34;
                   const real_t q_tmp_1_2 = tmp_qloop_22*tmp_qloop_34;
                   const real_t q_tmp_1_3 = tmp_qloop_23*tmp_qloop_34;
                   const real_t q_tmp_1_4 = tmp_qloop_37;
                   const real_t q_tmp_1_5 = tmp_qloop_39*tmp_qloop_8;
                   const real_t q_tmp_1_6 = tmp_qloop_39*tmp_qloop_6;
                   const real_t q_tmp_1_7 = tmp_qloop_25*tmp_qloop_34;
                   const real_t q_tmp_1_8 = tmp_qloop_27*tmp_qloop_34;
                   const real_t q_tmp_1_9 = tmp_qloop_28*tmp_qloop_34;
                   const real_t q_tmp_1_10 = tmp_qloop_12*tmp_qloop_40;
                   const real_t q_tmp_1_11 = tmp_qloop_21*tmp_qloop_40;
                   const real_t q_tmp_1_12 = tmp_qloop_22*tmp_qloop_40;
                   const real_t q_tmp_1_13 = tmp_qloop_23*tmp_qloop_40;
                   const real_t q_tmp_1_14 = tmp_qloop_42;
                   const real_t q_tmp_1_15 = tmp_qloop_43*tmp_qloop_8;
                   const real_t q_tmp_1_16 = tmp_qloop_43*tmp_qloop_6;
                   const real_t q_tmp_1_17 = tmp_qloop_25*tmp_qloop_40;
                   const real_t q_tmp_1_18 = tmp_qloop_27*tmp_qloop_40;
                   const real_t q_tmp_1_19 = tmp_qloop_28*tmp_qloop_40;
                   const real_t q_tmp_1_20 = tmp_qloop_12*tmp_qloop_44;
                   const real_t q_tmp_1_21 = tmp_qloop_21*tmp_qloop_44;
                   const real_t q_tmp_1_22 = tmp_qloop_22*tmp_qloop_44;
                   const real_t q_tmp_1_23 = tmp_qloop_23*tmp_qloop_44;
                   const real_t q_tmp_1_24 = tmp_qloop_46;
                   const real_t q_tmp_1_25 = tmp_qloop_47*tmp_qloop_8;
                   const real_t q_tmp_1_26 = tmp_qloop_47*tmp_qloop_6;
                   const real_t q_tmp_1_27 = tmp_qloop_25*tmp_qloop_44;
                   const real_t q_tmp_1_28 = tmp_qloop_27*tmp_qloop_44;
                   const real_t q_tmp_1_29 = tmp_qloop_28*tmp_qloop_44;
                   const real_t q_tmp_2_0 = tmp_qloop_12*tmp_qloop_36;
                   const real_t q_tmp_2_1 = tmp_qloop_21*tmp_qloop_36;
                   const real_t q_tmp_2_2 = tmp_qloop_22*tmp_qloop_36;
                   const real_t q_tmp_2_3 = tmp_qloop_23*tmp_qloop_36;
                   const real_t q_tmp_2_4 = tmp_qloop_16*tmp_qloop_48;
                   const real_t q_tmp_2_5 = tmp_qloop_37;
                   const real_t q_tmp_2_6 = tmp_qloop_26*tmp_qloop_34;
                   const real_t q_tmp_2_7 = tmp_qloop_25*tmp_qloop_36;
                   const real_t q_tmp_2_8 = tmp_qloop_27*tmp_qloop_36;
                   const real_t q_tmp_2_9 = tmp_qloop_28*tmp_qloop_36;
                   const real_t q_tmp_2_10 = tmp_qloop_12*tmp_qloop_41;
                   const real_t q_tmp_2_11 = tmp_qloop_21*tmp_qloop_41;
                   const real_t q_tmp_2_12 = tmp_qloop_22*tmp_qloop_41;
                   const real_t q_tmp_2_13 = tmp_qloop_23*tmp_qloop_41;
                   const real_t q_tmp_2_14 = tmp_qloop_29*tmp_qloop_48;
                   const real_t q_tmp_2_15 = tmp_qloop_42;
                   const real_t q_tmp_2_16 = tmp_qloop_26*tmp_qloop_40;
                   const real_t q_tmp_2_17 = tmp_qloop_25*tmp_qloop_41;
                   const real_t q_tmp_2_18 = tmp_qloop_27*tmp_qloop_41;
                   const real_t q_tmp_2_19 = tmp_qloop_28*tmp_qloop_41;
                   const real_t q_tmp_2_20 = tmp_qloop_12*tmp_qloop_45;
                   const real_t q_tmp_2_21 = tmp_qloop_21*tmp_qloop_45;
                   const real_t q_tmp_2_22 = tmp_qloop_22*tmp_qloop_45;
                   const real_t q_tmp_2_23 = tmp_qloop_23*tmp_qloop_45;
                   const real_t q_tmp_2_24 = tmp_qloop_31*tmp_qloop_48;
                   const real_t q_tmp_2_25 = tmp_qloop_46;
                   const real_t q_tmp_2_26 = tmp_qloop_26*tmp_qloop_44;
                   const real_t q_tmp_2_27 = tmp_qloop_25*tmp_qloop_45;
                   const real_t q_tmp_2_28 = tmp_qloop_27*tmp_qloop_45;
                   const real_t q_tmp_2_29 = tmp_qloop_28*tmp_qloop_45;
                   const real_t q_tmp_3_0 = tmp_qloop_12*tmp_qloop_50;
                   const real_t q_tmp_3_1 = tmp_qloop_21*tmp_qloop_50;
                   const real_t q_tmp_3_2 = tmp_qloop_22*tmp_qloop_50;
                   const real_t q_tmp_3_3 = tmp_qloop_23*tmp_qloop_50;
                   const real_t q_tmp_3_4 = tmp_qloop_24*tmp_qloop_36;
                   const real_t q_tmp_3_5 = tmp_qloop_24*tmp_qloop_34;
                   const real_t q_tmp_3_6 = tmp_qloop_37;
                   const real_t q_tmp_3_7 = tmp_qloop_25*tmp_qloop_50;
                   const real_t q_tmp_3_8 = tmp_qloop_27*tmp_qloop_50;
                   const real_t q_tmp_3_9 = tmp_qloop_28*tmp_qloop_50;
                   const real_t q_tmp_3_10 = tmp_qloop_12*tmp_qloop_51;
                   const real_t q_tmp_3_11 = tmp_qloop_21*tmp_qloop_51;
                   const real_t q_tmp_3_12 = tmp_qloop_22*tmp_qloop_51;
                   const real_t q_tmp_3_13 = tmp_qloop_23*tmp_qloop_51;
                   const real_t q_tmp_3_14 = tmp_qloop_24*tmp_qloop_41;
                   const real_t q_tmp_3_15 = tmp_qloop_24*tmp_qloop_40;
                   const real_t q_tmp_3_16 = tmp_qloop_42;
                   const real_t q_tmp_3_17 = tmp_qloop_25*tmp_qloop_51;
                   const real_t q_tmp_3_18 = tmp_qloop_27*tmp_qloop_51;
                   const real_t q_tmp_3_19 = tmp_qloop_28*tmp_qloop_51;
                   const real_t q_tmp_3_20 = tmp_qloop_12*tmp_qloop_52;
                   const real_t q_tmp_3_21 = tmp_qloop_21*tmp_qloop_52;
                   const real_t q_tmp_3_22 = tmp_qloop_22*tmp_qloop_52;
                   const real_t q_tmp_3_23 = tmp_qloop_23*tmp_qloop_52;
                   const real_t q_tmp_3_24 = tmp_qloop_24*tmp_qloop_45;
                   const real_t q_tmp_3_25 = tmp_qloop_24*tmp_qloop_44;
                   const real_t q_tmp_3_26 = tmp_qloop_46;
                   const real_t q_tmp_3_27 = tmp_qloop_25*tmp_qloop_52;
                   const real_t q_tmp_3_28 = tmp_qloop_27*tmp_qloop_52;
                   const real_t q_tmp_3_29 = tmp_qloop_28*tmp_qloop_52;
                   q_acc_0_0 = q_acc_0_0 + q_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + q_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + q_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + q_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + q_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + q_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + q_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + q_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + q_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + q_tmp_0_9;
                   q_acc_0_10 = q_acc_0_10 + q_tmp_0_10;
                   q_acc_0_11 = q_acc_0_11 + q_tmp_0_11;
                   q_acc_0_12 = q_acc_0_12 + q_tmp_0_12;
                   q_acc_0_13 = q_acc_0_13 + q_tmp_0_13;
                   q_acc_0_14 = q_acc_0_14 + q_tmp_0_14;
                   q_acc_0_15 = q_acc_0_15 + q_tmp_0_15;
                   q_acc_0_16 = q_acc_0_16 + q_tmp_0_16;
                   q_acc_0_17 = q_acc_0_17 + q_tmp_0_17;
                   q_acc_0_18 = q_acc_0_18 + q_tmp_0_18;
                   q_acc_0_19 = q_acc_0_19 + q_tmp_0_19;
                   q_acc_0_20 = q_acc_0_20 + q_tmp_0_20;
                   q_acc_0_21 = q_acc_0_21 + q_tmp_0_21;
                   q_acc_0_22 = q_acc_0_22 + q_tmp_0_22;
                   q_acc_0_23 = q_acc_0_23 + q_tmp_0_23;
                   q_acc_0_24 = q_acc_0_24 + q_tmp_0_24;
                   q_acc_0_25 = q_acc_0_25 + q_tmp_0_25;
                   q_acc_0_26 = q_acc_0_26 + q_tmp_0_26;
                   q_acc_0_27 = q_acc_0_27 + q_tmp_0_27;
                   q_acc_0_28 = q_acc_0_28 + q_tmp_0_28;
                   q_acc_0_29 = q_acc_0_29 + q_tmp_0_29;
                   q_acc_1_0 = q_acc_1_0 + q_tmp_1_0;
                   q_acc_1_1 = q_acc_1_1 + q_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + q_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + q_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + q_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + q_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + q_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + q_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + q_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + q_tmp_1_9;
                   q_acc_1_10 = q_acc_1_10 + q_tmp_1_10;
                   q_acc_1_11 = q_acc_1_11 + q_tmp_1_11;
                   q_acc_1_12 = q_acc_1_12 + q_tmp_1_12;
                   q_acc_1_13 = q_acc_1_13 + q_tmp_1_13;
                   q_acc_1_14 = q_acc_1_14 + q_tmp_1_14;
                   q_acc_1_15 = q_acc_1_15 + q_tmp_1_15;
                   q_acc_1_16 = q_acc_1_16 + q_tmp_1_16;
                   q_acc_1_17 = q_acc_1_17 + q_tmp_1_17;
                   q_acc_1_18 = q_acc_1_18 + q_tmp_1_18;
                   q_acc_1_19 = q_acc_1_19 + q_tmp_1_19;
                   q_acc_1_20 = q_acc_1_20 + q_tmp_1_20;
                   q_acc_1_21 = q_acc_1_21 + q_tmp_1_21;
                   q_acc_1_22 = q_acc_1_22 + q_tmp_1_22;
                   q_acc_1_23 = q_acc_1_23 + q_tmp_1_23;
                   q_acc_1_24 = q_acc_1_24 + q_tmp_1_24;
                   q_acc_1_25 = q_acc_1_25 + q_tmp_1_25;
                   q_acc_1_26 = q_acc_1_26 + q_tmp_1_26;
                   q_acc_1_27 = q_acc_1_27 + q_tmp_1_27;
                   q_acc_1_28 = q_acc_1_28 + q_tmp_1_28;
                   q_acc_1_29 = q_acc_1_29 + q_tmp_1_29;
                   q_acc_2_0 = q_acc_2_0 + q_tmp_2_0;
                   q_acc_2_1 = q_acc_2_1 + q_tmp_2_1;
                   q_acc_2_2 = q_acc_2_2 + q_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + q_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + q_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + q_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + q_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + q_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + q_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + q_tmp_2_9;
                   q_acc_2_10 = q_acc_2_10 + q_tmp_2_10;
                   q_acc_2_11 = q_acc_2_11 + q_tmp_2_11;
                   q_acc_2_12 = q_acc_2_12 + q_tmp_2_12;
                   q_acc_2_13 = q_acc_2_13 + q_tmp_2_13;
                   q_acc_2_14 = q_acc_2_14 + q_tmp_2_14;
                   q_acc_2_15 = q_acc_2_15 + q_tmp_2_15;
                   q_acc_2_16 = q_acc_2_16 + q_tmp_2_16;
                   q_acc_2_17 = q_acc_2_17 + q_tmp_2_17;
                   q_acc_2_18 = q_acc_2_18 + q_tmp_2_18;
                   q_acc_2_19 = q_acc_2_19 + q_tmp_2_19;
                   q_acc_2_20 = q_acc_2_20 + q_tmp_2_20;
                   q_acc_2_21 = q_acc_2_21 + q_tmp_2_21;
                   q_acc_2_22 = q_acc_2_22 + q_tmp_2_22;
                   q_acc_2_23 = q_acc_2_23 + q_tmp_2_23;
                   q_acc_2_24 = q_acc_2_24 + q_tmp_2_24;
                   q_acc_2_25 = q_acc_2_25 + q_tmp_2_25;
                   q_acc_2_26 = q_acc_2_26 + q_tmp_2_26;
                   q_acc_2_27 = q_acc_2_27 + q_tmp_2_27;
                   q_acc_2_28 = q_acc_2_28 + q_tmp_2_28;
                   q_acc_2_29 = q_acc_2_29 + q_tmp_2_29;
                   q_acc_3_0 = q_acc_3_0 + q_tmp_3_0;
                   q_acc_3_1 = q_acc_3_1 + q_tmp_3_1;
                   q_acc_3_2 = q_acc_3_2 + q_tmp_3_2;
                   q_acc_3_3 = q_acc_3_3 + q_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + q_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + q_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + q_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + q_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + q_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + q_tmp_3_9;
                   q_acc_3_10 = q_acc_3_10 + q_tmp_3_10;
                   q_acc_3_11 = q_acc_3_11 + q_tmp_3_11;
                   q_acc_3_12 = q_acc_3_12 + q_tmp_3_12;
                   q_acc_3_13 = q_acc_3_13 + q_tmp_3_13;
                   q_acc_3_14 = q_acc_3_14 + q_tmp_3_14;
                   q_acc_3_15 = q_acc_3_15 + q_tmp_3_15;
                   q_acc_3_16 = q_acc_3_16 + q_tmp_3_16;
                   q_acc_3_17 = q_acc_3_17 + q_tmp_3_17;
                   q_acc_3_18 = q_acc_3_18 + q_tmp_3_18;
                   q_acc_3_19 = q_acc_3_19 + q_tmp_3_19;
                   q_acc_3_20 = q_acc_3_20 + q_tmp_3_20;
                   q_acc_3_21 = q_acc_3_21 + q_tmp_3_21;
                   q_acc_3_22 = q_acc_3_22 + q_tmp_3_22;
                   q_acc_3_23 = q_acc_3_23 + q_tmp_3_23;
                   q_acc_3_24 = q_acc_3_24 + q_tmp_3_24;
                   q_acc_3_25 = q_acc_3_25 + q_tmp_3_25;
                   q_acc_3_26 = q_acc_3_26 + q_tmp_3_26;
                   q_acc_3_27 = q_acc_3_27 + q_tmp_3_27;
                   q_acc_3_28 = q_acc_3_28 + q_tmp_3_28;
                   q_acc_3_29 = q_acc_3_29 + q_tmp_3_29;
                }
                const real_t elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_10*src_dof_10 + q_acc_0_11*src_dof_11 + q_acc_0_12*src_dof_12 + q_acc_0_13*src_dof_13 + q_acc_0_14*src_dof_14 + q_acc_0_15*src_dof_15 + q_acc_0_16*src_dof_16 + q_acc_0_17*src_dof_17 + q_acc_0_18*src_dof_18 + q_acc_0_19*src_dof_19 + q_acc_0_2*src_dof_2 + q_acc_0_20*src_dof_20 + q_acc_0_21*src_dof_21 + q_acc_0_22*src_dof_22 + q_acc_0_23*src_dof_23 + q_acc_0_24*src_dof_24 + q_acc_0_25*src_dof_25 + q_acc_0_26*src_dof_26 + q_acc_0_27*src_dof_27 + q_acc_0_28*src_dof_28 + q_acc_0_29*src_dof_29 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const real_t elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_10*src_dof_10 + q_acc_1_11*src_dof_11 + q_acc_1_12*src_dof_12 + q_acc_1_13*src_dof_13 + q_acc_1_14*src_dof_14 + q_acc_1_15*src_dof_15 + q_acc_1_16*src_dof_16 + q_acc_1_17*src_dof_17 + q_acc_1_18*src_dof_18 + q_acc_1_19*src_dof_19 + q_acc_1_2*src_dof_2 + q_acc_1_20*src_dof_20 + q_acc_1_21*src_dof_21 + q_acc_1_22*src_dof_22 + q_acc_1_23*src_dof_23 + q_acc_1_24*src_dof_24 + q_acc_1_25*src_dof_25 + q_acc_1_26*src_dof_26 + q_acc_1_27*src_dof_27 + q_acc_1_28*src_dof_28 + q_acc_1_29*src_dof_29 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const real_t elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_10*src_dof_10 + q_acc_2_11*src_dof_11 + q_acc_2_12*src_dof_12 + q_acc_2_13*src_dof_13 + q_acc_2_14*src_dof_14 + q_acc_2_15*src_dof_15 + q_acc_2_16*src_dof_16 + q_acc_2_17*src_dof_17 + q_acc_2_18*src_dof_18 + q_acc_2_19*src_dof_19 + q_acc_2_2*src_dof_2 + q_acc_2_20*src_dof_20 + q_acc_2_21*src_dof_21 + q_acc_2_22*src_dof_22 + q_acc_2_23*src_dof_23 + q_acc_2_24*src_dof_24 + q_acc_2_25*src_dof_25 + q_acc_2_26*src_dof_26 + q_acc_2_27*src_dof_27 + q_acc_2_28*src_dof_28 + q_acc_2_29*src_dof_29 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const real_t elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_10*src_dof_10 + q_acc_3_11*src_dof_11 + q_acc_3_12*src_dof_12 + q_acc_3_13*src_dof_13 + q_acc_3_14*src_dof_14 + q_acc_3_15*src_dof_15 + q_acc_3_16*src_dof_16 + q_acc_3_17*src_dof_17 + q_acc_3_18*src_dof_18 + q_acc_3_19*src_dof_19 + q_acc_3_2*src_dof_2 + q_acc_3_20*src_dof_20 + q_acc_3_21*src_dof_21 + q_acc_3_22*src_dof_22 + q_acc_3_23*src_dof_23 + q_acc_3_24*src_dof_24 + q_acc_3_25*src_dof_25 + q_acc_3_26*src_dof_26 + q_acc_3_27*src_dof_27 + q_acc_3_28*src_dof_28 + q_acc_3_29*src_dof_29 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dst[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dst[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             }
          }
       }
    }
}
} // namespace operatorgeneration

} // namespace hyteg
