/*
* Copyright (c) 2017-2023 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG form generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/























#include "../P2ElementwiseDivKGrad.hpp"

#define FUNC_PREFIX  

namespace hyteg {

namespace operatorgeneration {

void P2ElementwiseDivKGrad::computeInverseDiagonalOperatorValues_macro_3D( double * RESTRICT  _data_invDiag_Edge, double * RESTRICT  _data_invDiag_Vertex, double * RESTRICT  _data_kEdge, double * RESTRICT  _data_kVertex, double macro_vertex_coord_id_0comp0, double macro_vertex_coord_id_0comp1, double macro_vertex_coord_id_0comp2, double macro_vertex_coord_id_1comp0, double macro_vertex_coord_id_1comp1, double macro_vertex_coord_id_1comp2, double macro_vertex_coord_id_2comp0, double macro_vertex_coord_id_2comp1, double macro_vertex_coord_id_2comp2, double macro_vertex_coord_id_3comp0, double macro_vertex_coord_id_3comp1, double macro_vertex_coord_id_3comp2, int64_t micro_edges_per_macro_edge, double micro_edges_per_macro_edge_float ) const
{
    {
       const double _data_q_w [] = {0.050086823222829389, 0.046462929447761279, 0.05318232258357912, 0.016934591412496786};
   
       const double _data_q_p_0 [] = {0.18002969351036546, 0.15593312049918584, 0.21607642918484793, 0.82157254096761967};
   
       const double _data_q_p_1 [] = {0.36531451881463461, 0.45746158708559559, 0.00037551502872928966, 0.12366680032845823};
   
       const double _data_q_p_2 [] = {0.0069232355736274509, 0.3817653560693467, 0.43070170707783589, 0.039933048641498381};
   
       const double p_affine_0_0 = macro_vertex_coord_id_0comp0;
       const double p_affine_0_1 = macro_vertex_coord_id_0comp1;
       const double p_affine_0_2 = macro_vertex_coord_id_0comp2;
       const double p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double jac_affine_0_0 = -p_affine_0_0 + p_affine_1_0;
       const double jac_affine_0_1 = -p_affine_0_0 + p_affine_2_0;
       const double jac_affine_0_2 = -p_affine_0_0 + p_affine_3_0;
       const double jac_affine_1_0 = -p_affine_0_1 + p_affine_1_1;
       const double jac_affine_1_1 = -p_affine_0_1 + p_affine_2_1;
       const double jac_affine_1_2 = -p_affine_0_1 + p_affine_3_1;
       const double jac_affine_2_0 = -p_affine_0_2 + p_affine_1_2;
       const double jac_affine_2_1 = -p_affine_0_2 + p_affine_2_2;
       const double jac_affine_2_2 = -p_affine_0_2 + p_affine_3_2;
       const double jac_affine_inv_0_0 = (jac_affine_1_1*jac_affine_2_2 - jac_affine_1_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_1 = (-jac_affine_0_1*jac_affine_2_2 + jac_affine_0_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_2 = (jac_affine_0_1*jac_affine_1_2 - jac_affine_0_2*jac_affine_1_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_0 = (-jac_affine_1_0*jac_affine_2_2 + jac_affine_1_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_1 = (jac_affine_0_0*jac_affine_2_2 - jac_affine_0_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_2 = (-jac_affine_0_0*jac_affine_1_2 + jac_affine_0_2*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_0 = (jac_affine_1_0*jac_affine_2_1 - jac_affine_1_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_1 = (-jac_affine_0_0*jac_affine_2_1 + jac_affine_0_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_2 = (jac_affine_0_0*jac_affine_1_1 - jac_affine_0_1*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double abs_det_jac_affine = fabs(jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double Dummy_4749 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4750 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4751 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4752 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4753 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4754 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4755 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4756 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4757 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4758 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4759 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4760 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4761 = -Dummy_4749 + Dummy_4752;
       const double Dummy_4762 = -Dummy_4749 + Dummy_4755;
       const double Dummy_4763 = -Dummy_4749 + Dummy_4758;
       const double Dummy_4764 = -Dummy_4750 + Dummy_4753;
       const double Dummy_4765 = -Dummy_4750 + Dummy_4756;
       const double Dummy_4766 = -Dummy_4750 + Dummy_4759;
       const double Dummy_4767 = -Dummy_4751 + Dummy_4754;
       const double Dummy_4768 = -Dummy_4751 + Dummy_4757;
       const double Dummy_4769 = -Dummy_4751 + Dummy_4760;
       const double Dummy_4770 = (Dummy_4765*Dummy_4769 - Dummy_4766*Dummy_4768)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4771 = (-Dummy_4762*Dummy_4769 + Dummy_4763*Dummy_4768)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4772 = (Dummy_4762*Dummy_4766 - Dummy_4763*Dummy_4765)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4773 = (-Dummy_4764*Dummy_4769 + Dummy_4766*Dummy_4767)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4774 = (Dummy_4761*Dummy_4769 - Dummy_4763*Dummy_4767)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4775 = (-Dummy_4761*Dummy_4766 + Dummy_4763*Dummy_4764)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4776 = (Dummy_4764*Dummy_4768 - Dummy_4765*Dummy_4767)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4777 = (-Dummy_4761*Dummy_4768 + Dummy_4762*Dummy_4767)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4778 = (Dummy_4761*Dummy_4765 - Dummy_4762*Dummy_4764)*1.0 / (Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4779 = fabs(Dummy_4761*Dummy_4765*Dummy_4769 - Dummy_4761*Dummy_4766*Dummy_4768 - Dummy_4762*Dummy_4764*Dummy_4769 + Dummy_4762*Dummy_4766*Dummy_4767 + Dummy_4763*Dummy_4764*Dummy_4768 - Dummy_4763*Dummy_4765*Dummy_4767);
       const double Dummy_4780 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4781 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4782 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4783 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4784 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4785 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4786 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4787 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4788 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4789 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4790 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4791 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4792 = -Dummy_4780 + Dummy_4783;
       const double Dummy_4793 = -Dummy_4780 + Dummy_4786;
       const double Dummy_4794 = -Dummy_4780 + Dummy_4789;
       const double Dummy_4795 = -Dummy_4781 + Dummy_4784;
       const double Dummy_4796 = -Dummy_4781 + Dummy_4787;
       const double Dummy_4797 = -Dummy_4781 + Dummy_4790;
       const double Dummy_4798 = -Dummy_4782 + Dummy_4785;
       const double Dummy_4799 = -Dummy_4782 + Dummy_4788;
       const double Dummy_4800 = -Dummy_4782 + Dummy_4791;
       const double Dummy_4801 = (Dummy_4796*Dummy_4800 - Dummy_4797*Dummy_4799)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4802 = (-Dummy_4793*Dummy_4800 + Dummy_4794*Dummy_4799)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4803 = (Dummy_4793*Dummy_4797 - Dummy_4794*Dummy_4796)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4804 = (-Dummy_4795*Dummy_4800 + Dummy_4797*Dummy_4798)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4805 = (Dummy_4792*Dummy_4800 - Dummy_4794*Dummy_4798)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4806 = (-Dummy_4792*Dummy_4797 + Dummy_4794*Dummy_4795)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4807 = (Dummy_4795*Dummy_4799 - Dummy_4796*Dummy_4798)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4808 = (-Dummy_4792*Dummy_4799 + Dummy_4793*Dummy_4798)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4809 = (Dummy_4792*Dummy_4796 - Dummy_4793*Dummy_4795)*1.0 / (Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4810 = fabs(Dummy_4792*Dummy_4796*Dummy_4800 - Dummy_4792*Dummy_4797*Dummy_4799 - Dummy_4793*Dummy_4795*Dummy_4800 + Dummy_4793*Dummy_4797*Dummy_4798 + Dummy_4794*Dummy_4795*Dummy_4799 - Dummy_4794*Dummy_4796*Dummy_4798);
       const double Dummy_4811 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4812 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4813 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4814 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4815 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4816 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4817 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4818 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4819 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4820 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4821 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4822 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4823 = -Dummy_4811 + Dummy_4814;
       const double Dummy_4824 = -Dummy_4811 + Dummy_4817;
       const double Dummy_4825 = -Dummy_4811 + Dummy_4820;
       const double Dummy_4826 = -Dummy_4812 + Dummy_4815;
       const double Dummy_4827 = -Dummy_4812 + Dummy_4818;
       const double Dummy_4828 = -Dummy_4812 + Dummy_4821;
       const double Dummy_4829 = -Dummy_4813 + Dummy_4816;
       const double Dummy_4830 = -Dummy_4813 + Dummy_4819;
       const double Dummy_4831 = -Dummy_4813 + Dummy_4822;
       const double Dummy_4832 = (Dummy_4827*Dummy_4831 - Dummy_4828*Dummy_4830)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4833 = (-Dummy_4824*Dummy_4831 + Dummy_4825*Dummy_4830)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4834 = (Dummy_4824*Dummy_4828 - Dummy_4825*Dummy_4827)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4835 = (-Dummy_4826*Dummy_4831 + Dummy_4828*Dummy_4829)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4836 = (Dummy_4823*Dummy_4831 - Dummy_4825*Dummy_4829)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4837 = (-Dummy_4823*Dummy_4828 + Dummy_4825*Dummy_4826)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4838 = (Dummy_4826*Dummy_4830 - Dummy_4827*Dummy_4829)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4839 = (-Dummy_4823*Dummy_4830 + Dummy_4824*Dummy_4829)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4840 = (Dummy_4823*Dummy_4827 - Dummy_4824*Dummy_4826)*1.0 / (Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4841 = fabs(Dummy_4823*Dummy_4827*Dummy_4831 - Dummy_4823*Dummy_4828*Dummy_4830 - Dummy_4824*Dummy_4826*Dummy_4831 + Dummy_4824*Dummy_4828*Dummy_4829 + Dummy_4825*Dummy_4826*Dummy_4830 - Dummy_4825*Dummy_4827*Dummy_4829);
       const double Dummy_4842 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4843 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4844 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4845 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4846 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4847 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4848 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4849 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4850 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4851 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4852 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4853 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4854 = -Dummy_4842 + Dummy_4845;
       const double Dummy_4855 = -Dummy_4842 + Dummy_4848;
       const double Dummy_4856 = -Dummy_4842 + Dummy_4851;
       const double Dummy_4857 = -Dummy_4843 + Dummy_4846;
       const double Dummy_4858 = -Dummy_4843 + Dummy_4849;
       const double Dummy_4859 = -Dummy_4843 + Dummy_4852;
       const double Dummy_4860 = -Dummy_4844 + Dummy_4847;
       const double Dummy_4861 = -Dummy_4844 + Dummy_4850;
       const double Dummy_4862 = -Dummy_4844 + Dummy_4853;
       const double Dummy_4863 = (Dummy_4858*Dummy_4862 - Dummy_4859*Dummy_4861)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4864 = (-Dummy_4855*Dummy_4862 + Dummy_4856*Dummy_4861)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4865 = (Dummy_4855*Dummy_4859 - Dummy_4856*Dummy_4858)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4866 = (-Dummy_4857*Dummy_4862 + Dummy_4859*Dummy_4860)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4867 = (Dummy_4854*Dummy_4862 - Dummy_4856*Dummy_4860)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4868 = (-Dummy_4854*Dummy_4859 + Dummy_4856*Dummy_4857)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4869 = (Dummy_4857*Dummy_4861 - Dummy_4858*Dummy_4860)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4870 = (-Dummy_4854*Dummy_4861 + Dummy_4855*Dummy_4860)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4871 = (Dummy_4854*Dummy_4858 - Dummy_4855*Dummy_4857)*1.0 / (Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4872 = fabs(Dummy_4854*Dummy_4858*Dummy_4862 - Dummy_4854*Dummy_4859*Dummy_4861 - Dummy_4855*Dummy_4857*Dummy_4862 + Dummy_4855*Dummy_4859*Dummy_4860 + Dummy_4856*Dummy_4857*Dummy_4861 - Dummy_4856*Dummy_4858*Dummy_4860);
       const double Dummy_4873 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4874 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4875 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4876 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4877 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4878 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4879 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4880 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4881 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4882 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4883 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4884 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4885 = -Dummy_4873 + Dummy_4876;
       const double Dummy_4886 = -Dummy_4873 + Dummy_4879;
       const double Dummy_4887 = -Dummy_4873 + Dummy_4882;
       const double Dummy_4888 = -Dummy_4874 + Dummy_4877;
       const double Dummy_4889 = -Dummy_4874 + Dummy_4880;
       const double Dummy_4890 = -Dummy_4874 + Dummy_4883;
       const double Dummy_4891 = -Dummy_4875 + Dummy_4878;
       const double Dummy_4892 = -Dummy_4875 + Dummy_4881;
       const double Dummy_4893 = -Dummy_4875 + Dummy_4884;
       const double Dummy_4894 = (Dummy_4889*Dummy_4893 - Dummy_4890*Dummy_4892)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4895 = (-Dummy_4886*Dummy_4893 + Dummy_4887*Dummy_4892)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4896 = (Dummy_4886*Dummy_4890 - Dummy_4887*Dummy_4889)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4897 = (-Dummy_4888*Dummy_4893 + Dummy_4890*Dummy_4891)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4898 = (Dummy_4885*Dummy_4893 - Dummy_4887*Dummy_4891)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4899 = (-Dummy_4885*Dummy_4890 + Dummy_4887*Dummy_4888)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4900 = (Dummy_4888*Dummy_4892 - Dummy_4889*Dummy_4891)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4901 = (-Dummy_4885*Dummy_4892 + Dummy_4886*Dummy_4891)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4902 = (Dummy_4885*Dummy_4889 - Dummy_4886*Dummy_4888)*1.0 / (Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       const double Dummy_4903 = fabs(Dummy_4885*Dummy_4889*Dummy_4893 - Dummy_4885*Dummy_4890*Dummy_4892 - Dummy_4886*Dummy_4888*Dummy_4893 + Dummy_4886*Dummy_4890*Dummy_4891 + Dummy_4887*Dummy_4888*Dummy_4892 - Dummy_4887*Dummy_4889*Dummy_4891);
       {
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = abs_det_jac_affine*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0),_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1),_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2),_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0),_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1),_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2),_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0),_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1),_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2),_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatDiag_0 = q_acc_0_0;
                const __m256d elMatDiag_1 = q_acc_1_1;
                const __m256d elMatDiag_2 = q_acc_2_2;
                const __m256d elMatDiag_3 = q_acc_3_3;
                const __m256d elMatDiag_4 = q_acc_4_4;
                const __m256d elMatDiag_5 = q_acc_5_5;
                const __m256d elMatDiag_6 = q_acc_6_6;
                const __m256d elMatDiag_7 = q_acc_7_7;
                const __m256d elMatDiag_8 = q_acc_8_8;
                const __m256d elMatDiag_9 = q_acc_9_9;
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_0,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_1,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_2,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_3,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_4,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_5,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_6,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_7,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_8,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_9,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1)
             {
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = jac_affine_inv_0_0*tmp_q_4;
                   const double tmp_q_6 = jac_affine_inv_1_0*tmp_q_4;
                   const double tmp_q_7 = jac_affine_inv_2_0*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = jac_affine_inv_0_1*tmp_q_4;
                   const double tmp_q_21 = jac_affine_inv_1_1*tmp_q_4;
                   const double tmp_q_22 = jac_affine_inv_2_1*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = jac_affine_inv_0_2*tmp_q_4;
                   const double tmp_q_25 = jac_affine_inv_1_2*tmp_q_4;
                   const double tmp_q_26 = jac_affine_inv_2_2*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = abs_det_jac_affine*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = jac_affine_inv_0_0*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = jac_affine_inv_0_1*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = jac_affine_inv_0_2*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = jac_affine_inv_1_0*tmp_q_36;
                   const double tmp_q_38 = jac_affine_inv_1_1*tmp_q_36;
                   const double tmp_q_39 = jac_affine_inv_1_2*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = jac_affine_inv_2_0*tmp_q_40;
                   const double tmp_q_42 = jac_affine_inv_2_1*tmp_q_40;
                   const double tmp_q_43 = jac_affine_inv_2_2*tmp_q_40;
                   const double tmp_q_44 = jac_affine_inv_1_0*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = jac_affine_inv_2_0*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = jac_affine_inv_1_1*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = jac_affine_inv_2_1*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = jac_affine_inv_1_2*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = jac_affine_inv_2_2*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = jac_affine_inv_0_0*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = jac_affine_inv_2_0*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = jac_affine_inv_0_1*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = jac_affine_inv_2_1*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = jac_affine_inv_0_2*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = jac_affine_inv_2_2*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = jac_affine_inv_0_0*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = jac_affine_inv_1_0*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = jac_affine_inv_0_1*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = jac_affine_inv_1_1*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = jac_affine_inv_0_2*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = jac_affine_inv_1_2*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = jac_affine_inv_2_0*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = jac_affine_inv_2_1*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = jac_affine_inv_2_2*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = jac_affine_inv_1_0*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = jac_affine_inv_1_1*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = jac_affine_inv_1_2*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = jac_affine_inv_0_0*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = jac_affine_inv_0_1*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = jac_affine_inv_0_2*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = jac_affine_inv_2_0*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = jac_affine_inv_2_1*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = jac_affine_inv_2_2*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = jac_affine_inv_1_0*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = jac_affine_inv_1_1*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = jac_affine_inv_1_2*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((jac_affine_inv_0_0*jac_affine_inv_0_0)*tmp_q_103 + (jac_affine_inv_0_1*jac_affine_inv_0_1)*tmp_q_103 + (jac_affine_inv_0_2*jac_affine_inv_0_2)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((jac_affine_inv_1_0*jac_affine_inv_1_0)*tmp_q_107 + (jac_affine_inv_1_1*jac_affine_inv_1_1)*tmp_q_107 + (jac_affine_inv_1_2*jac_affine_inv_1_2)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((jac_affine_inv_2_0*jac_affine_inv_2_0)*tmp_q_108 + (jac_affine_inv_2_1*jac_affine_inv_2_1)*tmp_q_108 + (jac_affine_inv_2_2*jac_affine_inv_2_2)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(jac_affine_inv_0_1*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(jac_affine_inv_0_2*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(jac_affine_inv_0_0*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatDiag_0 = q_acc_0_0;
                const double elMatDiag_1 = q_acc_1_1;
                const double elMatDiag_2 = q_acc_2_2;
                const double elMatDiag_3 = q_acc_3_3;
                const double elMatDiag_4 = q_acc_4_4;
                const double elMatDiag_5 = q_acc_5_5;
                const double elMatDiag_6 = q_acc_6_6;
                const double elMatDiag_7 = q_acc_7_7;
                const double elMatDiag_8 = q_acc_8_8;
                const double elMatDiag_9 = q_acc_9_9;
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_3 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4779*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770),_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771),_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772),_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773),_mm256_set_pd(Dummy_4773,Dummy_4773,Dummy_4773,Dummy_4773))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774),_mm256_set_pd(Dummy_4774,Dummy_4774,Dummy_4774,Dummy_4774)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775),_mm256_set_pd(Dummy_4775,Dummy_4775,Dummy_4775,Dummy_4775)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776),_mm256_set_pd(Dummy_4776,Dummy_4776,Dummy_4776,Dummy_4776))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777),_mm256_set_pd(Dummy_4777,Dummy_4777,Dummy_4777,Dummy_4777)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778),_mm256_set_pd(Dummy_4778,Dummy_4778,Dummy_4778,Dummy_4778)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4770,Dummy_4770,Dummy_4770,Dummy_4770)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4771,Dummy_4771,Dummy_4771,Dummy_4771))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4772,Dummy_4772,Dummy_4772,Dummy_4772))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatDiag_0 = q_acc_0_0;
                const __m256d elMatDiag_1 = q_acc_1_1;
                const __m256d elMatDiag_2 = q_acc_2_2;
                const __m256d elMatDiag_3 = q_acc_3_3;
                const __m256d elMatDiag_4 = q_acc_4_4;
                const __m256d elMatDiag_5 = q_acc_5_5;
                const __m256d elMatDiag_6 = q_acc_6_6;
                const __m256d elMatDiag_7 = q_acc_7_7;
                const __m256d elMatDiag_8 = q_acc_8_8;
                const __m256d elMatDiag_9 = q_acc_9_9;
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_0,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_1,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_2,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_3,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_4,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1],_mm256_add_pd(elMatDiag_5,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_6,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_7,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_8,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_9,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2; ctr_0 += 1)
             {
                const double k_dof_4 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4770*tmp_q_4;
                   const double tmp_q_6 = Dummy_4773*tmp_q_4;
                   const double tmp_q_7 = Dummy_4776*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4771*tmp_q_4;
                   const double tmp_q_21 = Dummy_4774*tmp_q_4;
                   const double tmp_q_22 = Dummy_4777*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4772*tmp_q_4;
                   const double tmp_q_25 = Dummy_4775*tmp_q_4;
                   const double tmp_q_26 = Dummy_4778*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4779*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4770*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4771*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4772*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4773*tmp_q_36;
                   const double tmp_q_38 = Dummy_4774*tmp_q_36;
                   const double tmp_q_39 = Dummy_4775*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4776*tmp_q_40;
                   const double tmp_q_42 = Dummy_4777*tmp_q_40;
                   const double tmp_q_43 = Dummy_4778*tmp_q_40;
                   const double tmp_q_44 = Dummy_4773*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4776*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4774*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4777*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4775*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4778*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4770*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4776*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4771*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4777*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4772*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4778*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4770*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4773*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4771*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4774*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4772*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4775*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4776*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4777*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4778*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4773*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4774*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4775*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4770*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4771*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4772*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4776*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4777*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4778*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4773*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4774*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4775*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4770*Dummy_4770)*tmp_q_103 + (Dummy_4771*Dummy_4771)*tmp_q_103 + (Dummy_4772*Dummy_4772)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4773*Dummy_4773)*tmp_q_107 + (Dummy_4774*Dummy_4774)*tmp_q_107 + (Dummy_4775*Dummy_4775)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4776*Dummy_4776)*tmp_q_108 + (Dummy_4777*Dummy_4777)*tmp_q_108 + (Dummy_4778*Dummy_4778)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4771*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4772*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4770*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatDiag_0 = q_acc_0_0;
                const double elMatDiag_1 = q_acc_1_1;
                const double elMatDiag_2 = q_acc_2_2;
                const double elMatDiag_3 = q_acc_3_3;
                const double elMatDiag_4 = q_acc_4_4;
                const double elMatDiag_5 = q_acc_5_5;
                const double elMatDiag_6 = q_acc_6_6;
                const double elMatDiag_7 = q_acc_7_7;
                const double elMatDiag_8 = q_acc_8_8;
                const double elMatDiag_9 = q_acc_9_9;
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_3 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_4 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1] = elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_7 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_8 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4810*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801),_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802),_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803),_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804),_mm256_set_pd(Dummy_4804,Dummy_4804,Dummy_4804,Dummy_4804))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805),_mm256_set_pd(Dummy_4805,Dummy_4805,Dummy_4805,Dummy_4805)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806),_mm256_set_pd(Dummy_4806,Dummy_4806,Dummy_4806,Dummy_4806)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807),_mm256_set_pd(Dummy_4807,Dummy_4807,Dummy_4807,Dummy_4807))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808),_mm256_set_pd(Dummy_4808,Dummy_4808,Dummy_4808,Dummy_4808)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809),_mm256_set_pd(Dummy_4809,Dummy_4809,Dummy_4809,Dummy_4809)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4801,Dummy_4801,Dummy_4801,Dummy_4801)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4802,Dummy_4802,Dummy_4802,Dummy_4802))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4803,Dummy_4803,Dummy_4803,Dummy_4803))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatDiag_0 = q_acc_0_0;
                const __m256d elMatDiag_1 = q_acc_1_1;
                const __m256d elMatDiag_2 = q_acc_2_2;
                const __m256d elMatDiag_3 = q_acc_3_3;
                const __m256d elMatDiag_4 = q_acc_4_4;
                const __m256d elMatDiag_5 = q_acc_5_5;
                const __m256d elMatDiag_6 = q_acc_6_6;
                const __m256d elMatDiag_7 = q_acc_7_7;
                const __m256d elMatDiag_8 = q_acc_8_8;
                const __m256d elMatDiag_9 = q_acc_9_9;
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_0,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_1,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_2,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_3,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_4,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_5,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_6,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_7,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_8,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_9,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_6 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4801*tmp_q_4;
                   const double tmp_q_6 = Dummy_4804*tmp_q_4;
                   const double tmp_q_7 = Dummy_4807*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4802*tmp_q_4;
                   const double tmp_q_21 = Dummy_4805*tmp_q_4;
                   const double tmp_q_22 = Dummy_4808*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4803*tmp_q_4;
                   const double tmp_q_25 = Dummy_4806*tmp_q_4;
                   const double tmp_q_26 = Dummy_4809*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4810*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4801*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4802*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4803*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4804*tmp_q_36;
                   const double tmp_q_38 = Dummy_4805*tmp_q_36;
                   const double tmp_q_39 = Dummy_4806*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4807*tmp_q_40;
                   const double tmp_q_42 = Dummy_4808*tmp_q_40;
                   const double tmp_q_43 = Dummy_4809*tmp_q_40;
                   const double tmp_q_44 = Dummy_4804*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4807*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4805*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4808*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4806*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4809*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4801*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4807*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4802*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4808*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4803*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4809*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4801*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4804*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4802*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4805*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4803*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4806*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4807*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4808*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4809*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4804*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4805*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4806*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4801*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4802*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4803*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4807*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4808*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4809*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4804*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4805*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4806*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4801*Dummy_4801)*tmp_q_103 + (Dummy_4802*Dummy_4802)*tmp_q_103 + (Dummy_4803*Dummy_4803)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4804*Dummy_4804)*tmp_q_107 + (Dummy_4805*Dummy_4805)*tmp_q_107 + (Dummy_4806*Dummy_4806)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4807*Dummy_4807)*tmp_q_108 + (Dummy_4808*Dummy_4808)*tmp_q_108 + (Dummy_4809*Dummy_4809)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4802*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4803*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4801*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatDiag_0 = q_acc_0_0;
                const double elMatDiag_1 = q_acc_1_1;
                const double elMatDiag_2 = q_acc_2_2;
                const double elMatDiag_3 = q_acc_3_3;
                const double elMatDiag_4 = q_acc_4_4;
                const double elMatDiag_5 = q_acc_5_5;
                const double elMatDiag_6 = q_acc_6_6;
                const double elMatDiag_7 = q_acc_7_7;
                const double elMatDiag_8 = q_acc_8_8;
                const double elMatDiag_9 = q_acc_9_9;
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_3 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_6 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4841*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832),_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833),_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834),_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835),_mm256_set_pd(Dummy_4835,Dummy_4835,Dummy_4835,Dummy_4835))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836),_mm256_set_pd(Dummy_4836,Dummy_4836,Dummy_4836,Dummy_4836)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837),_mm256_set_pd(Dummy_4837,Dummy_4837,Dummy_4837,Dummy_4837)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838),_mm256_set_pd(Dummy_4838,Dummy_4838,Dummy_4838,Dummy_4838))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839),_mm256_set_pd(Dummy_4839,Dummy_4839,Dummy_4839,Dummy_4839)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840),_mm256_set_pd(Dummy_4840,Dummy_4840,Dummy_4840,Dummy_4840)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4832,Dummy_4832,Dummy_4832,Dummy_4832)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4833,Dummy_4833,Dummy_4833,Dummy_4833))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4834,Dummy_4834,Dummy_4834,Dummy_4834))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatDiag_0 = q_acc_0_0;
                const __m256d elMatDiag_1 = q_acc_1_1;
                const __m256d elMatDiag_2 = q_acc_2_2;
                const __m256d elMatDiag_3 = q_acc_3_3;
                const __m256d elMatDiag_4 = q_acc_4_4;
                const __m256d elMatDiag_5 = q_acc_5_5;
                const __m256d elMatDiag_6 = q_acc_6_6;
                const __m256d elMatDiag_7 = q_acc_7_7;
                const __m256d elMatDiag_8 = q_acc_8_8;
                const __m256d elMatDiag_9 = q_acc_9_9;
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_0,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_1,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_2,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_3,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_4,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_5,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_6,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_7,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_8,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_9,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4832*tmp_q_4;
                   const double tmp_q_6 = Dummy_4835*tmp_q_4;
                   const double tmp_q_7 = Dummy_4838*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4833*tmp_q_4;
                   const double tmp_q_21 = Dummy_4836*tmp_q_4;
                   const double tmp_q_22 = Dummy_4839*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4834*tmp_q_4;
                   const double tmp_q_25 = Dummy_4837*tmp_q_4;
                   const double tmp_q_26 = Dummy_4840*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4841*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4832*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4833*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4834*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4835*tmp_q_36;
                   const double tmp_q_38 = Dummy_4836*tmp_q_36;
                   const double tmp_q_39 = Dummy_4837*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4838*tmp_q_40;
                   const double tmp_q_42 = Dummy_4839*tmp_q_40;
                   const double tmp_q_43 = Dummy_4840*tmp_q_40;
                   const double tmp_q_44 = Dummy_4835*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4838*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4836*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4839*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4837*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4840*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4832*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4838*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4833*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4839*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4834*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4840*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4832*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4835*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4833*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4836*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4834*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4837*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4838*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4839*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4840*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4835*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4836*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4837*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4832*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4833*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4834*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4838*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4839*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4840*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4835*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4836*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4837*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4832*Dummy_4832)*tmp_q_103 + (Dummy_4833*Dummy_4833)*tmp_q_103 + (Dummy_4834*Dummy_4834)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4835*Dummy_4835)*tmp_q_107 + (Dummy_4836*Dummy_4836)*tmp_q_107 + (Dummy_4837*Dummy_4837)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4838*Dummy_4838)*tmp_q_108 + (Dummy_4839*Dummy_4839)*tmp_q_108 + (Dummy_4840*Dummy_4840)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4833*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4834*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4832*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatDiag_0 = q_acc_0_0;
                const double elMatDiag_1 = q_acc_1_1;
                const double elMatDiag_2 = q_acc_2_2;
                const double elMatDiag_3 = q_acc_3_3;
                const double elMatDiag_4 = q_acc_4_4;
                const double elMatDiag_5 = q_acc_5_5;
                const double elMatDiag_6 = q_acc_6_6;
                const double elMatDiag_7 = q_acc_7_7;
                const double elMatDiag_8 = q_acc_8_8;
                const double elMatDiag_9 = q_acc_9_9;
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_3 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_7 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4872*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863),_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864),_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865),_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866),_mm256_set_pd(Dummy_4866,Dummy_4866,Dummy_4866,Dummy_4866))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867),_mm256_set_pd(Dummy_4867,Dummy_4867,Dummy_4867,Dummy_4867)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868),_mm256_set_pd(Dummy_4868,Dummy_4868,Dummy_4868,Dummy_4868)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869),_mm256_set_pd(Dummy_4869,Dummy_4869,Dummy_4869,Dummy_4869))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870),_mm256_set_pd(Dummy_4870,Dummy_4870,Dummy_4870,Dummy_4870)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871),_mm256_set_pd(Dummy_4871,Dummy_4871,Dummy_4871,Dummy_4871)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4863,Dummy_4863,Dummy_4863,Dummy_4863)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4864,Dummy_4864,Dummy_4864,Dummy_4864))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4865,Dummy_4865,Dummy_4865,Dummy_4865))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatDiag_0 = q_acc_0_0;
                const __m256d elMatDiag_1 = q_acc_1_1;
                const __m256d elMatDiag_2 = q_acc_2_2;
                const __m256d elMatDiag_3 = q_acc_3_3;
                const __m256d elMatDiag_4 = q_acc_4_4;
                const __m256d elMatDiag_5 = q_acc_5_5;
                const __m256d elMatDiag_6 = q_acc_6_6;
                const __m256d elMatDiag_7 = q_acc_7_7;
                const __m256d elMatDiag_8 = q_acc_8_8;
                const __m256d elMatDiag_9 = q_acc_9_9;
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_0,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_1,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_2,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_3,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_4,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_5,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_6,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_7,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_8,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_9,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4863*tmp_q_4;
                   const double tmp_q_6 = Dummy_4866*tmp_q_4;
                   const double tmp_q_7 = Dummy_4869*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4864*tmp_q_4;
                   const double tmp_q_21 = Dummy_4867*tmp_q_4;
                   const double tmp_q_22 = Dummy_4870*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4865*tmp_q_4;
                   const double tmp_q_25 = Dummy_4868*tmp_q_4;
                   const double tmp_q_26 = Dummy_4871*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4872*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4863*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4864*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4865*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4866*tmp_q_36;
                   const double tmp_q_38 = Dummy_4867*tmp_q_36;
                   const double tmp_q_39 = Dummy_4868*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4869*tmp_q_40;
                   const double tmp_q_42 = Dummy_4870*tmp_q_40;
                   const double tmp_q_43 = Dummy_4871*tmp_q_40;
                   const double tmp_q_44 = Dummy_4866*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4869*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4867*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4870*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4868*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4871*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4863*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4869*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4864*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4870*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4865*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4871*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4863*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4866*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4864*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4867*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4865*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4868*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4869*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4870*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4871*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4866*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4867*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4868*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4863*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4864*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4865*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4869*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4870*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4871*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4866*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4867*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4868*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4863*Dummy_4863)*tmp_q_103 + (Dummy_4864*Dummy_4864)*tmp_q_103 + (Dummy_4865*Dummy_4865)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4866*Dummy_4866)*tmp_q_107 + (Dummy_4867*Dummy_4867)*tmp_q_107 + (Dummy_4868*Dummy_4868)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4869*Dummy_4869)*tmp_q_108 + (Dummy_4870*Dummy_4870)*tmp_q_108 + (Dummy_4871*Dummy_4871)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4864*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4865*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4863*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatDiag_0 = q_acc_0_0;
                const double elMatDiag_1 = q_acc_1_1;
                const double elMatDiag_2 = q_acc_2_2;
                const double elMatDiag_3 = q_acc_3_3;
                const double elMatDiag_4 = q_acc_4_4;
                const double elMatDiag_5 = q_acc_5_5;
                const double elMatDiag_6 = q_acc_6_6;
                const double elMatDiag_7 = q_acc_7_7;
                const double elMatDiag_8 = q_acc_8_8;
                const double elMatDiag_9 = q_acc_9_9;
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_3 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_5 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_7 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_9 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4903*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894),_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895),_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896),_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897),_mm256_set_pd(Dummy_4897,Dummy_4897,Dummy_4897,Dummy_4897))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898),_mm256_set_pd(Dummy_4898,Dummy_4898,Dummy_4898,Dummy_4898)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899),_mm256_set_pd(Dummy_4899,Dummy_4899,Dummy_4899,Dummy_4899)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900),_mm256_set_pd(Dummy_4900,Dummy_4900,Dummy_4900,Dummy_4900))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901),_mm256_set_pd(Dummy_4901,Dummy_4901,Dummy_4901,Dummy_4901)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902),_mm256_set_pd(Dummy_4902,Dummy_4902,Dummy_4902,Dummy_4902)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4894,Dummy_4894,Dummy_4894,Dummy_4894)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4895,Dummy_4895,Dummy_4895,Dummy_4895))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4896,Dummy_4896,Dummy_4896,Dummy_4896))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatDiag_0 = q_acc_0_0;
                const __m256d elMatDiag_1 = q_acc_1_1;
                const __m256d elMatDiag_2 = q_acc_2_2;
                const __m256d elMatDiag_3 = q_acc_3_3;
                const __m256d elMatDiag_4 = q_acc_4_4;
                const __m256d elMatDiag_5 = q_acc_5_5;
                const __m256d elMatDiag_6 = q_acc_6_6;
                const __m256d elMatDiag_7 = q_acc_7_7;
                const __m256d elMatDiag_8 = q_acc_8_8;
                const __m256d elMatDiag_9 = q_acc_9_9;
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_0,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_1,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatDiag_2,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatDiag_3,_mm256_loadu_pd(& _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_4,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_5,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatDiag_6,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_7,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatDiag_8,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatDiag_9,_mm256_loadu_pd(& _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_9 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_5 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4894*tmp_q_4;
                   const double tmp_q_6 = Dummy_4897*tmp_q_4;
                   const double tmp_q_7 = Dummy_4900*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4895*tmp_q_4;
                   const double tmp_q_21 = Dummy_4898*tmp_q_4;
                   const double tmp_q_22 = Dummy_4901*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4896*tmp_q_4;
                   const double tmp_q_25 = Dummy_4899*tmp_q_4;
                   const double tmp_q_26 = Dummy_4902*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4903*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4894*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4895*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4896*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4897*tmp_q_36;
                   const double tmp_q_38 = Dummy_4898*tmp_q_36;
                   const double tmp_q_39 = Dummy_4899*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4900*tmp_q_40;
                   const double tmp_q_42 = Dummy_4901*tmp_q_40;
                   const double tmp_q_43 = Dummy_4902*tmp_q_40;
                   const double tmp_q_44 = Dummy_4897*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4900*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4898*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4901*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4899*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4902*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4894*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4900*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4895*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4901*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4896*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4902*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4894*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4897*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4895*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4898*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4896*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4899*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4900*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4901*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4902*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4897*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4898*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4899*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4894*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4895*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4896*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4900*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4901*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4902*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4897*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4898*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4899*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4894*Dummy_4894)*tmp_q_103 + (Dummy_4895*Dummy_4895)*tmp_q_103 + (Dummy_4896*Dummy_4896)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4897*Dummy_4897)*tmp_q_107 + (Dummy_4898*Dummy_4898)*tmp_q_107 + (Dummy_4899*Dummy_4899)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4900*Dummy_4900)*tmp_q_108 + (Dummy_4901*Dummy_4901)*tmp_q_108 + (Dummy_4902*Dummy_4902)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4895*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4896*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4894*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatDiag_0 = q_acc_0_0;
                const double elMatDiag_1 = q_acc_1_1;
                const double elMatDiag_2 = q_acc_2_2;
                const double elMatDiag_3 = q_acc_3_3;
                const double elMatDiag_4 = q_acc_4_4;
                const double elMatDiag_5 = q_acc_5_5;
                const double elMatDiag_6 = q_acc_6_6;
                const double elMatDiag_7 = q_acc_7_7;
                const double elMatDiag_8 = q_acc_8_8;
                const double elMatDiag_9 = q_acc_9_9;
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_0 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_1 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatDiag_2 + _data_invDiag_Vertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatDiag_3 + _data_invDiag_Vertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_4 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_5 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatDiag_6 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_7 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatDiag_8 + _data_invDiag_Edge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatDiag_9 + _data_invDiag_Edge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
       }
    }
}
} // namespace operatorgeneration

} // namespace hyteg
