/*
* Copyright (c) 2017-2023 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG form generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/























#include "../P2ElementwiseDivKGrad.hpp"

#define FUNC_PREFIX  

namespace hyteg {

namespace operatorgeneration {

void P2ElementwiseDivKGrad::apply_macro_3D( double * RESTRICT  _data_dstEdge, double * RESTRICT  _data_dstVertex, double * RESTRICT  _data_kEdge, double * RESTRICT  _data_kVertex, double * RESTRICT  _data_srcEdge, double * RESTRICT  _data_srcVertex, double macro_vertex_coord_id_0comp0, double macro_vertex_coord_id_0comp1, double macro_vertex_coord_id_0comp2, double macro_vertex_coord_id_1comp0, double macro_vertex_coord_id_1comp1, double macro_vertex_coord_id_1comp2, double macro_vertex_coord_id_2comp0, double macro_vertex_coord_id_2comp1, double macro_vertex_coord_id_2comp2, double macro_vertex_coord_id_3comp0, double macro_vertex_coord_id_3comp1, double macro_vertex_coord_id_3comp2, int64_t micro_edges_per_macro_edge, double micro_edges_per_macro_edge_float ) const
{
    {
       const double _data_q_w [] = {0.0500868232228294, 0.0464629294477613, 0.0531823225835791, 0.0169345914124968};
   
       const double _data_q_p_0 [] = {0.180029693510365, 0.155933120499186, 0.216076429184848, 0.821572540967620};
   
       const double _data_q_p_1 [] = {0.365314518814635, 0.457461587085596, 0.000375515028729290, 0.123666800328458};
   
       const double _data_q_p_2 [] = {0.00692323557362745, 0.381765356069347, 0.430701707077836, 0.0399330486414984};
   
       const double p_affine_0_0 = macro_vertex_coord_id_0comp0;
       const double p_affine_0_1 = macro_vertex_coord_id_0comp1;
       const double p_affine_0_2 = macro_vertex_coord_id_0comp2;
       const double p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double jac_affine_0_0 = -p_affine_0_0 + p_affine_1_0;
       const double jac_affine_0_1 = -p_affine_0_0 + p_affine_2_0;
       const double jac_affine_0_2 = -p_affine_0_0 + p_affine_3_0;
       const double jac_affine_1_0 = -p_affine_0_1 + p_affine_1_1;
       const double jac_affine_1_1 = -p_affine_0_1 + p_affine_2_1;
       const double jac_affine_1_2 = -p_affine_0_1 + p_affine_3_1;
       const double jac_affine_2_0 = -p_affine_0_2 + p_affine_1_2;
       const double jac_affine_2_1 = -p_affine_0_2 + p_affine_2_2;
       const double jac_affine_2_2 = -p_affine_0_2 + p_affine_3_2;
       const double jac_affine_inv_0_0 = (jac_affine_1_1*jac_affine_2_2 - jac_affine_1_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_1 = (-jac_affine_0_1*jac_affine_2_2 + jac_affine_0_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_2 = (jac_affine_0_1*jac_affine_1_2 - jac_affine_0_2*jac_affine_1_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_0 = (-jac_affine_1_0*jac_affine_2_2 + jac_affine_1_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_1 = (jac_affine_0_0*jac_affine_2_2 - jac_affine_0_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_2 = (-jac_affine_0_0*jac_affine_1_2 + jac_affine_0_2*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_0 = (jac_affine_1_0*jac_affine_2_1 - jac_affine_1_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_1 = (-jac_affine_0_0*jac_affine_2_1 + jac_affine_0_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_2 = (jac_affine_0_0*jac_affine_1_1 - jac_affine_0_1*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double abs_det_jac_affine = fabs(jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double Dummy_4124 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4125 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4126 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4127 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4128 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4129 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4130 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4131 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4132 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4133 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4134 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4135 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4136 = -Dummy_4124 + Dummy_4127;
       const double Dummy_4137 = -Dummy_4124 + Dummy_4130;
       const double Dummy_4138 = -Dummy_4124 + Dummy_4133;
       const double Dummy_4139 = -Dummy_4125 + Dummy_4128;
       const double Dummy_4140 = -Dummy_4125 + Dummy_4131;
       const double Dummy_4141 = -Dummy_4125 + Dummy_4134;
       const double Dummy_4142 = -Dummy_4126 + Dummy_4129;
       const double Dummy_4143 = -Dummy_4126 + Dummy_4132;
       const double Dummy_4144 = -Dummy_4126 + Dummy_4135;
       const double Dummy_4145 = (Dummy_4140*Dummy_4144 - Dummy_4141*Dummy_4143)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4146 = (-Dummy_4137*Dummy_4144 + Dummy_4138*Dummy_4143)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4147 = (Dummy_4137*Dummy_4141 - Dummy_4138*Dummy_4140)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4148 = (-Dummy_4139*Dummy_4144 + Dummy_4141*Dummy_4142)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4149 = (Dummy_4136*Dummy_4144 - Dummy_4138*Dummy_4142)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4150 = (-Dummy_4136*Dummy_4141 + Dummy_4138*Dummy_4139)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4151 = (Dummy_4139*Dummy_4143 - Dummy_4140*Dummy_4142)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4152 = (-Dummy_4136*Dummy_4143 + Dummy_4137*Dummy_4142)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4153 = (Dummy_4136*Dummy_4140 - Dummy_4137*Dummy_4139)*1.0 / (Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4154 = fabs(Dummy_4136*Dummy_4140*Dummy_4144 - Dummy_4136*Dummy_4141*Dummy_4143 - Dummy_4137*Dummy_4139*Dummy_4144 + Dummy_4137*Dummy_4141*Dummy_4142 + Dummy_4138*Dummy_4139*Dummy_4143 - Dummy_4138*Dummy_4140*Dummy_4142);
       const double Dummy_4155 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4156 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4157 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4158 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4159 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4160 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4161 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4162 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4163 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4164 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4165 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4166 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4167 = -Dummy_4155 + Dummy_4158;
       const double Dummy_4168 = -Dummy_4155 + Dummy_4161;
       const double Dummy_4169 = -Dummy_4155 + Dummy_4164;
       const double Dummy_4170 = -Dummy_4156 + Dummy_4159;
       const double Dummy_4171 = -Dummy_4156 + Dummy_4162;
       const double Dummy_4172 = -Dummy_4156 + Dummy_4165;
       const double Dummy_4173 = -Dummy_4157 + Dummy_4160;
       const double Dummy_4174 = -Dummy_4157 + Dummy_4163;
       const double Dummy_4175 = -Dummy_4157 + Dummy_4166;
       const double Dummy_4176 = (Dummy_4171*Dummy_4175 - Dummy_4172*Dummy_4174)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4177 = (-Dummy_4168*Dummy_4175 + Dummy_4169*Dummy_4174)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4178 = (Dummy_4168*Dummy_4172 - Dummy_4169*Dummy_4171)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4179 = (-Dummy_4170*Dummy_4175 + Dummy_4172*Dummy_4173)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4180 = (Dummy_4167*Dummy_4175 - Dummy_4169*Dummy_4173)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4181 = (-Dummy_4167*Dummy_4172 + Dummy_4169*Dummy_4170)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4182 = (Dummy_4170*Dummy_4174 - Dummy_4171*Dummy_4173)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4183 = (-Dummy_4167*Dummy_4174 + Dummy_4168*Dummy_4173)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4184 = (Dummy_4167*Dummy_4171 - Dummy_4168*Dummy_4170)*1.0 / (Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4185 = fabs(Dummy_4167*Dummy_4171*Dummy_4175 - Dummy_4167*Dummy_4172*Dummy_4174 - Dummy_4168*Dummy_4170*Dummy_4175 + Dummy_4168*Dummy_4172*Dummy_4173 + Dummy_4169*Dummy_4170*Dummy_4174 - Dummy_4169*Dummy_4171*Dummy_4173);
       const double Dummy_4186 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4187 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4188 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4189 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4190 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4191 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4192 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4193 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4194 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4195 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4196 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4197 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4198 = -Dummy_4186 + Dummy_4189;
       const double Dummy_4199 = -Dummy_4186 + Dummy_4192;
       const double Dummy_4200 = -Dummy_4186 + Dummy_4195;
       const double Dummy_4201 = -Dummy_4187 + Dummy_4190;
       const double Dummy_4202 = -Dummy_4187 + Dummy_4193;
       const double Dummy_4203 = -Dummy_4187 + Dummy_4196;
       const double Dummy_4204 = -Dummy_4188 + Dummy_4191;
       const double Dummy_4205 = -Dummy_4188 + Dummy_4194;
       const double Dummy_4206 = -Dummy_4188 + Dummy_4197;
       const double Dummy_4207 = (Dummy_4202*Dummy_4206 - Dummy_4203*Dummy_4205)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4208 = (-Dummy_4199*Dummy_4206 + Dummy_4200*Dummy_4205)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4209 = (Dummy_4199*Dummy_4203 - Dummy_4200*Dummy_4202)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4210 = (-Dummy_4201*Dummy_4206 + Dummy_4203*Dummy_4204)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4211 = (Dummy_4198*Dummy_4206 - Dummy_4200*Dummy_4204)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4212 = (-Dummy_4198*Dummy_4203 + Dummy_4200*Dummy_4201)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4213 = (Dummy_4201*Dummy_4205 - Dummy_4202*Dummy_4204)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4214 = (-Dummy_4198*Dummy_4205 + Dummy_4199*Dummy_4204)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4215 = (Dummy_4198*Dummy_4202 - Dummy_4199*Dummy_4201)*1.0 / (Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4216 = fabs(Dummy_4198*Dummy_4202*Dummy_4206 - Dummy_4198*Dummy_4203*Dummy_4205 - Dummy_4199*Dummy_4201*Dummy_4206 + Dummy_4199*Dummy_4203*Dummy_4204 + Dummy_4200*Dummy_4201*Dummy_4205 - Dummy_4200*Dummy_4202*Dummy_4204);
       const double Dummy_4217 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4218 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4219 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4220 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4221 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4222 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4223 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4224 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4225 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4226 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4227 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4228 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4229 = -Dummy_4217 + Dummy_4220;
       const double Dummy_4230 = -Dummy_4217 + Dummy_4223;
       const double Dummy_4231 = -Dummy_4217 + Dummy_4226;
       const double Dummy_4232 = -Dummy_4218 + Dummy_4221;
       const double Dummy_4233 = -Dummy_4218 + Dummy_4224;
       const double Dummy_4234 = -Dummy_4218 + Dummy_4227;
       const double Dummy_4235 = -Dummy_4219 + Dummy_4222;
       const double Dummy_4236 = -Dummy_4219 + Dummy_4225;
       const double Dummy_4237 = -Dummy_4219 + Dummy_4228;
       const double Dummy_4238 = (Dummy_4233*Dummy_4237 - Dummy_4234*Dummy_4236)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4239 = (-Dummy_4230*Dummy_4237 + Dummy_4231*Dummy_4236)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4240 = (Dummy_4230*Dummy_4234 - Dummy_4231*Dummy_4233)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4241 = (-Dummy_4232*Dummy_4237 + Dummy_4234*Dummy_4235)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4242 = (Dummy_4229*Dummy_4237 - Dummy_4231*Dummy_4235)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4243 = (-Dummy_4229*Dummy_4234 + Dummy_4231*Dummy_4232)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4244 = (Dummy_4232*Dummy_4236 - Dummy_4233*Dummy_4235)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4245 = (-Dummy_4229*Dummy_4236 + Dummy_4230*Dummy_4235)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4246 = (Dummy_4229*Dummy_4233 - Dummy_4230*Dummy_4232)*1.0 / (Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4247 = fabs(Dummy_4229*Dummy_4233*Dummy_4237 - Dummy_4229*Dummy_4234*Dummy_4236 - Dummy_4230*Dummy_4232*Dummy_4237 + Dummy_4230*Dummy_4234*Dummy_4235 + Dummy_4231*Dummy_4232*Dummy_4236 - Dummy_4231*Dummy_4233*Dummy_4235);
       const double Dummy_4248 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4249 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4250 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4251 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4252 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4253 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4254 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4255 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4256 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4257 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4258 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4259 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4260 = -Dummy_4248 + Dummy_4251;
       const double Dummy_4261 = -Dummy_4248 + Dummy_4254;
       const double Dummy_4262 = -Dummy_4248 + Dummy_4257;
       const double Dummy_4263 = -Dummy_4249 + Dummy_4252;
       const double Dummy_4264 = -Dummy_4249 + Dummy_4255;
       const double Dummy_4265 = -Dummy_4249 + Dummy_4258;
       const double Dummy_4266 = -Dummy_4250 + Dummy_4253;
       const double Dummy_4267 = -Dummy_4250 + Dummy_4256;
       const double Dummy_4268 = -Dummy_4250 + Dummy_4259;
       const double Dummy_4269 = (Dummy_4264*Dummy_4268 - Dummy_4265*Dummy_4267)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4270 = (-Dummy_4261*Dummy_4268 + Dummy_4262*Dummy_4267)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4271 = (Dummy_4261*Dummy_4265 - Dummy_4262*Dummy_4264)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4272 = (-Dummy_4263*Dummy_4268 + Dummy_4265*Dummy_4266)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4273 = (Dummy_4260*Dummy_4268 - Dummy_4262*Dummy_4266)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4274 = (-Dummy_4260*Dummy_4265 + Dummy_4262*Dummy_4263)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4275 = (Dummy_4263*Dummy_4267 - Dummy_4264*Dummy_4266)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4276 = (-Dummy_4260*Dummy_4267 + Dummy_4261*Dummy_4266)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4277 = (Dummy_4260*Dummy_4264 - Dummy_4261*Dummy_4263)*1.0 / (Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       const double Dummy_4278 = fabs(Dummy_4260*Dummy_4264*Dummy_4268 - Dummy_4260*Dummy_4265*Dummy_4267 - Dummy_4261*Dummy_4263*Dummy_4268 + Dummy_4261*Dummy_4265*Dummy_4266 + Dummy_4262*Dummy_4263*Dummy_4267 - Dummy_4262*Dummy_4264*Dummy_4266);
       {
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = abs_det_jac_affine*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0),_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1),_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2),_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0),_mm256_set_pd(jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0,jac_affine_inv_1_0))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1),_mm256_set_pd(jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1,jac_affine_inv_1_1)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2),_mm256_set_pd(jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2,jac_affine_inv_1_2)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0),_mm256_set_pd(jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0,jac_affine_inv_2_0))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1),_mm256_set_pd(jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1,jac_affine_inv_2_1)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2),_mm256_set_pd(jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2,jac_affine_inv_2_2)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0,jac_affine_inv_0_0)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1,jac_affine_inv_0_1))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2,jac_affine_inv_0_2))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_4_0,src_dof_0),_mm256_mul_pd(q_acc_4_1,src_dof_1)),_mm256_mul_pd(q_acc_4_2,src_dof_2)),_mm256_mul_pd(q_acc_4_3,src_dof_3)),_mm256_mul_pd(q_acc_4_4,src_dof_4)),_mm256_mul_pd(q_acc_4_5,src_dof_5)),_mm256_mul_pd(q_acc_4_6,src_dof_6)),_mm256_mul_pd(q_acc_4_7,src_dof_7)),_mm256_mul_pd(q_acc_4_8,src_dof_8)),_mm256_mul_pd(q_acc_4_9,src_dof_9));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_5_0,src_dof_0),_mm256_mul_pd(q_acc_5_1,src_dof_1)),_mm256_mul_pd(q_acc_5_2,src_dof_2)),_mm256_mul_pd(q_acc_5_3,src_dof_3)),_mm256_mul_pd(q_acc_5_4,src_dof_4)),_mm256_mul_pd(q_acc_5_5,src_dof_5)),_mm256_mul_pd(q_acc_5_6,src_dof_6)),_mm256_mul_pd(q_acc_5_7,src_dof_7)),_mm256_mul_pd(q_acc_5_8,src_dof_8)),_mm256_mul_pd(q_acc_5_9,src_dof_9));
                const __m256d elMatVec_6 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_6_0,src_dof_0),_mm256_mul_pd(q_acc_6_1,src_dof_1)),_mm256_mul_pd(q_acc_6_2,src_dof_2)),_mm256_mul_pd(q_acc_6_3,src_dof_3)),_mm256_mul_pd(q_acc_6_4,src_dof_4)),_mm256_mul_pd(q_acc_6_5,src_dof_5)),_mm256_mul_pd(q_acc_6_6,src_dof_6)),_mm256_mul_pd(q_acc_6_7,src_dof_7)),_mm256_mul_pd(q_acc_6_8,src_dof_8)),_mm256_mul_pd(q_acc_6_9,src_dof_9));
                const __m256d elMatVec_7 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_7_0,src_dof_0),_mm256_mul_pd(q_acc_7_1,src_dof_1)),_mm256_mul_pd(q_acc_7_2,src_dof_2)),_mm256_mul_pd(q_acc_7_3,src_dof_3)),_mm256_mul_pd(q_acc_7_4,src_dof_4)),_mm256_mul_pd(q_acc_7_5,src_dof_5)),_mm256_mul_pd(q_acc_7_6,src_dof_6)),_mm256_mul_pd(q_acc_7_7,src_dof_7)),_mm256_mul_pd(q_acc_7_8,src_dof_8)),_mm256_mul_pd(q_acc_7_9,src_dof_9));
                const __m256d elMatVec_8 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_8_0,src_dof_0),_mm256_mul_pd(q_acc_8_1,src_dof_1)),_mm256_mul_pd(q_acc_8_2,src_dof_2)),_mm256_mul_pd(q_acc_8_3,src_dof_3)),_mm256_mul_pd(q_acc_8_4,src_dof_4)),_mm256_mul_pd(q_acc_8_5,src_dof_5)),_mm256_mul_pd(q_acc_8_6,src_dof_6)),_mm256_mul_pd(q_acc_8_7,src_dof_7)),_mm256_mul_pd(q_acc_8_8,src_dof_8)),_mm256_mul_pd(q_acc_8_9,src_dof_9));
                const __m256d elMatVec_9 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_9_0,src_dof_0),_mm256_mul_pd(q_acc_9_1,src_dof_1)),_mm256_mul_pd(q_acc_9_2,src_dof_2)),_mm256_mul_pd(q_acc_9_3,src_dof_3)),_mm256_mul_pd(q_acc_9_4,src_dof_4)),_mm256_mul_pd(q_acc_9_5,src_dof_5)),_mm256_mul_pd(q_acc_9_6,src_dof_6)),_mm256_mul_pd(q_acc_9_7,src_dof_7)),_mm256_mul_pd(q_acc_9_8,src_dof_8)),_mm256_mul_pd(q_acc_9_9,src_dof_9));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_6,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_7,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_8,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_9,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1)
             {
                const double src_dof_0 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_1 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_2 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_3 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_7 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = jac_affine_inv_0_0*tmp_q_4;
                   const double tmp_q_6 = jac_affine_inv_1_0*tmp_q_4;
                   const double tmp_q_7 = jac_affine_inv_2_0*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = jac_affine_inv_0_1*tmp_q_4;
                   const double tmp_q_21 = jac_affine_inv_1_1*tmp_q_4;
                   const double tmp_q_22 = jac_affine_inv_2_1*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = jac_affine_inv_0_2*tmp_q_4;
                   const double tmp_q_25 = jac_affine_inv_1_2*tmp_q_4;
                   const double tmp_q_26 = jac_affine_inv_2_2*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = abs_det_jac_affine*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = jac_affine_inv_0_0*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = jac_affine_inv_0_1*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = jac_affine_inv_0_2*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = jac_affine_inv_1_0*tmp_q_36;
                   const double tmp_q_38 = jac_affine_inv_1_1*tmp_q_36;
                   const double tmp_q_39 = jac_affine_inv_1_2*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = jac_affine_inv_2_0*tmp_q_40;
                   const double tmp_q_42 = jac_affine_inv_2_1*tmp_q_40;
                   const double tmp_q_43 = jac_affine_inv_2_2*tmp_q_40;
                   const double tmp_q_44 = jac_affine_inv_1_0*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = jac_affine_inv_2_0*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = jac_affine_inv_1_1*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = jac_affine_inv_2_1*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = jac_affine_inv_1_2*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = jac_affine_inv_2_2*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = jac_affine_inv_0_0*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = jac_affine_inv_2_0*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = jac_affine_inv_0_1*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = jac_affine_inv_2_1*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = jac_affine_inv_0_2*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = jac_affine_inv_2_2*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = jac_affine_inv_0_0*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = jac_affine_inv_1_0*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = jac_affine_inv_0_1*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = jac_affine_inv_1_1*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = jac_affine_inv_0_2*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = jac_affine_inv_1_2*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = jac_affine_inv_2_0*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = jac_affine_inv_2_1*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = jac_affine_inv_2_2*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = jac_affine_inv_1_0*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = jac_affine_inv_1_1*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = jac_affine_inv_1_2*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = jac_affine_inv_0_0*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = jac_affine_inv_0_1*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = jac_affine_inv_0_2*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = jac_affine_inv_2_0*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = jac_affine_inv_2_1*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = jac_affine_inv_2_2*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = jac_affine_inv_1_0*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = jac_affine_inv_1_1*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = jac_affine_inv_1_2*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((jac_affine_inv_0_0*jac_affine_inv_0_0)*tmp_q_103 + (jac_affine_inv_0_1*jac_affine_inv_0_1)*tmp_q_103 + (jac_affine_inv_0_2*jac_affine_inv_0_2)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((jac_affine_inv_1_0*jac_affine_inv_1_0)*tmp_q_107 + (jac_affine_inv_1_1*jac_affine_inv_1_1)*tmp_q_107 + (jac_affine_inv_1_2*jac_affine_inv_1_2)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((jac_affine_inv_2_0*jac_affine_inv_2_0)*tmp_q_108 + (jac_affine_inv_2_1*jac_affine_inv_2_1)*tmp_q_108 + (jac_affine_inv_2_2*jac_affine_inv_2_2)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(jac_affine_inv_0_1*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(jac_affine_inv_0_2*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(jac_affine_inv_0_0*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
                const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
                const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
                const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
                const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
                const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_7 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4154*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145),_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146),_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147),_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148),_mm256_set_pd(Dummy_4148,Dummy_4148,Dummy_4148,Dummy_4148))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149),_mm256_set_pd(Dummy_4149,Dummy_4149,Dummy_4149,Dummy_4149)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150),_mm256_set_pd(Dummy_4150,Dummy_4150,Dummy_4150,Dummy_4150)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151),_mm256_set_pd(Dummy_4151,Dummy_4151,Dummy_4151,Dummy_4151))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152),_mm256_set_pd(Dummy_4152,Dummy_4152,Dummy_4152,Dummy_4152)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153),_mm256_set_pd(Dummy_4153,Dummy_4153,Dummy_4153,Dummy_4153)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4145,Dummy_4145,Dummy_4145,Dummy_4145)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4146,Dummy_4146,Dummy_4146,Dummy_4146))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4147,Dummy_4147,Dummy_4147,Dummy_4147))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_4_0,src_dof_0),_mm256_mul_pd(q_acc_4_1,src_dof_1)),_mm256_mul_pd(q_acc_4_2,src_dof_2)),_mm256_mul_pd(q_acc_4_3,src_dof_3)),_mm256_mul_pd(q_acc_4_4,src_dof_4)),_mm256_mul_pd(q_acc_4_5,src_dof_5)),_mm256_mul_pd(q_acc_4_6,src_dof_6)),_mm256_mul_pd(q_acc_4_7,src_dof_7)),_mm256_mul_pd(q_acc_4_8,src_dof_8)),_mm256_mul_pd(q_acc_4_9,src_dof_9));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_5_0,src_dof_0),_mm256_mul_pd(q_acc_5_1,src_dof_1)),_mm256_mul_pd(q_acc_5_2,src_dof_2)),_mm256_mul_pd(q_acc_5_3,src_dof_3)),_mm256_mul_pd(q_acc_5_4,src_dof_4)),_mm256_mul_pd(q_acc_5_5,src_dof_5)),_mm256_mul_pd(q_acc_5_6,src_dof_6)),_mm256_mul_pd(q_acc_5_7,src_dof_7)),_mm256_mul_pd(q_acc_5_8,src_dof_8)),_mm256_mul_pd(q_acc_5_9,src_dof_9));
                const __m256d elMatVec_6 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_6_0,src_dof_0),_mm256_mul_pd(q_acc_6_1,src_dof_1)),_mm256_mul_pd(q_acc_6_2,src_dof_2)),_mm256_mul_pd(q_acc_6_3,src_dof_3)),_mm256_mul_pd(q_acc_6_4,src_dof_4)),_mm256_mul_pd(q_acc_6_5,src_dof_5)),_mm256_mul_pd(q_acc_6_6,src_dof_6)),_mm256_mul_pd(q_acc_6_7,src_dof_7)),_mm256_mul_pd(q_acc_6_8,src_dof_8)),_mm256_mul_pd(q_acc_6_9,src_dof_9));
                const __m256d elMatVec_7 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_7_0,src_dof_0),_mm256_mul_pd(q_acc_7_1,src_dof_1)),_mm256_mul_pd(q_acc_7_2,src_dof_2)),_mm256_mul_pd(q_acc_7_3,src_dof_3)),_mm256_mul_pd(q_acc_7_4,src_dof_4)),_mm256_mul_pd(q_acc_7_5,src_dof_5)),_mm256_mul_pd(q_acc_7_6,src_dof_6)),_mm256_mul_pd(q_acc_7_7,src_dof_7)),_mm256_mul_pd(q_acc_7_8,src_dof_8)),_mm256_mul_pd(q_acc_7_9,src_dof_9));
                const __m256d elMatVec_8 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_8_0,src_dof_0),_mm256_mul_pd(q_acc_8_1,src_dof_1)),_mm256_mul_pd(q_acc_8_2,src_dof_2)),_mm256_mul_pd(q_acc_8_3,src_dof_3)),_mm256_mul_pd(q_acc_8_4,src_dof_4)),_mm256_mul_pd(q_acc_8_5,src_dof_5)),_mm256_mul_pd(q_acc_8_6,src_dof_6)),_mm256_mul_pd(q_acc_8_7,src_dof_7)),_mm256_mul_pd(q_acc_8_8,src_dof_8)),_mm256_mul_pd(q_acc_8_9,src_dof_9));
                const __m256d elMatVec_9 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_9_0,src_dof_0),_mm256_mul_pd(q_acc_9_1,src_dof_1)),_mm256_mul_pd(q_acc_9_2,src_dof_2)),_mm256_mul_pd(q_acc_9_3,src_dof_3)),_mm256_mul_pd(q_acc_9_4,src_dof_4)),_mm256_mul_pd(q_acc_9_5,src_dof_5)),_mm256_mul_pd(q_acc_9_6,src_dof_6)),_mm256_mul_pd(q_acc_9_7,src_dof_7)),_mm256_mul_pd(q_acc_9_8,src_dof_8)),_mm256_mul_pd(q_acc_9_9,src_dof_9));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_6,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_7,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_8,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_9,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2; ctr_0 += 1)
             {
                const double src_dof_0 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_1 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_2 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_3 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_4 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_7 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double src_dof_8 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_4 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4145*tmp_q_4;
                   const double tmp_q_6 = Dummy_4148*tmp_q_4;
                   const double tmp_q_7 = Dummy_4151*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4146*tmp_q_4;
                   const double tmp_q_21 = Dummy_4149*tmp_q_4;
                   const double tmp_q_22 = Dummy_4152*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4147*tmp_q_4;
                   const double tmp_q_25 = Dummy_4150*tmp_q_4;
                   const double tmp_q_26 = Dummy_4153*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4154*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4145*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4146*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4147*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4148*tmp_q_36;
                   const double tmp_q_38 = Dummy_4149*tmp_q_36;
                   const double tmp_q_39 = Dummy_4150*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4151*tmp_q_40;
                   const double tmp_q_42 = Dummy_4152*tmp_q_40;
                   const double tmp_q_43 = Dummy_4153*tmp_q_40;
                   const double tmp_q_44 = Dummy_4148*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4151*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4149*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4152*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4150*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4153*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4145*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4151*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4146*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4152*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4147*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4153*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4145*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4148*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4146*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4149*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4147*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4150*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4151*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4152*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4153*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4148*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4149*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4150*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4145*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4146*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4147*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4151*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4152*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4153*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4148*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4149*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4150*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4145*Dummy_4145)*tmp_q_103 + (Dummy_4146*Dummy_4146)*tmp_q_103 + (Dummy_4147*Dummy_4147)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4148*Dummy_4148)*tmp_q_107 + (Dummy_4149*Dummy_4149)*tmp_q_107 + (Dummy_4150*Dummy_4150)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4151*Dummy_4151)*tmp_q_108 + (Dummy_4152*Dummy_4152)*tmp_q_108 + (Dummy_4153*Dummy_4153)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4146*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4147*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4145*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
                const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
                const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
                const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
                const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
                const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_7 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4185*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176),_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177),_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178),_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179),_mm256_set_pd(Dummy_4179,Dummy_4179,Dummy_4179,Dummy_4179))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180),_mm256_set_pd(Dummy_4180,Dummy_4180,Dummy_4180,Dummy_4180)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181),_mm256_set_pd(Dummy_4181,Dummy_4181,Dummy_4181,Dummy_4181)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182),_mm256_set_pd(Dummy_4182,Dummy_4182,Dummy_4182,Dummy_4182))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183),_mm256_set_pd(Dummy_4183,Dummy_4183,Dummy_4183,Dummy_4183)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184),_mm256_set_pd(Dummy_4184,Dummy_4184,Dummy_4184,Dummy_4184)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4176,Dummy_4176,Dummy_4176,Dummy_4176)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4177,Dummy_4177,Dummy_4177,Dummy_4177))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4178,Dummy_4178,Dummy_4178,Dummy_4178))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_4_0,src_dof_0),_mm256_mul_pd(q_acc_4_1,src_dof_1)),_mm256_mul_pd(q_acc_4_2,src_dof_2)),_mm256_mul_pd(q_acc_4_3,src_dof_3)),_mm256_mul_pd(q_acc_4_4,src_dof_4)),_mm256_mul_pd(q_acc_4_5,src_dof_5)),_mm256_mul_pd(q_acc_4_6,src_dof_6)),_mm256_mul_pd(q_acc_4_7,src_dof_7)),_mm256_mul_pd(q_acc_4_8,src_dof_8)),_mm256_mul_pd(q_acc_4_9,src_dof_9));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_5_0,src_dof_0),_mm256_mul_pd(q_acc_5_1,src_dof_1)),_mm256_mul_pd(q_acc_5_2,src_dof_2)),_mm256_mul_pd(q_acc_5_3,src_dof_3)),_mm256_mul_pd(q_acc_5_4,src_dof_4)),_mm256_mul_pd(q_acc_5_5,src_dof_5)),_mm256_mul_pd(q_acc_5_6,src_dof_6)),_mm256_mul_pd(q_acc_5_7,src_dof_7)),_mm256_mul_pd(q_acc_5_8,src_dof_8)),_mm256_mul_pd(q_acc_5_9,src_dof_9));
                const __m256d elMatVec_6 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_6_0,src_dof_0),_mm256_mul_pd(q_acc_6_1,src_dof_1)),_mm256_mul_pd(q_acc_6_2,src_dof_2)),_mm256_mul_pd(q_acc_6_3,src_dof_3)),_mm256_mul_pd(q_acc_6_4,src_dof_4)),_mm256_mul_pd(q_acc_6_5,src_dof_5)),_mm256_mul_pd(q_acc_6_6,src_dof_6)),_mm256_mul_pd(q_acc_6_7,src_dof_7)),_mm256_mul_pd(q_acc_6_8,src_dof_8)),_mm256_mul_pd(q_acc_6_9,src_dof_9));
                const __m256d elMatVec_7 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_7_0,src_dof_0),_mm256_mul_pd(q_acc_7_1,src_dof_1)),_mm256_mul_pd(q_acc_7_2,src_dof_2)),_mm256_mul_pd(q_acc_7_3,src_dof_3)),_mm256_mul_pd(q_acc_7_4,src_dof_4)),_mm256_mul_pd(q_acc_7_5,src_dof_5)),_mm256_mul_pd(q_acc_7_6,src_dof_6)),_mm256_mul_pd(q_acc_7_7,src_dof_7)),_mm256_mul_pd(q_acc_7_8,src_dof_8)),_mm256_mul_pd(q_acc_7_9,src_dof_9));
                const __m256d elMatVec_8 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_8_0,src_dof_0),_mm256_mul_pd(q_acc_8_1,src_dof_1)),_mm256_mul_pd(q_acc_8_2,src_dof_2)),_mm256_mul_pd(q_acc_8_3,src_dof_3)),_mm256_mul_pd(q_acc_8_4,src_dof_4)),_mm256_mul_pd(q_acc_8_5,src_dof_5)),_mm256_mul_pd(q_acc_8_6,src_dof_6)),_mm256_mul_pd(q_acc_8_7,src_dof_7)),_mm256_mul_pd(q_acc_8_8,src_dof_8)),_mm256_mul_pd(q_acc_8_9,src_dof_9));
                const __m256d elMatVec_9 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_9_0,src_dof_0),_mm256_mul_pd(q_acc_9_1,src_dof_1)),_mm256_mul_pd(q_acc_9_2,src_dof_2)),_mm256_mul_pd(q_acc_9_3,src_dof_3)),_mm256_mul_pd(q_acc_9_4,src_dof_4)),_mm256_mul_pd(q_acc_9_5,src_dof_5)),_mm256_mul_pd(q_acc_9_6,src_dof_6)),_mm256_mul_pd(q_acc_9_7,src_dof_7)),_mm256_mul_pd(q_acc_9_8,src_dof_8)),_mm256_mul_pd(q_acc_9_9,src_dof_9));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_6,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_7,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_8,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_9,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double src_dof_0 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_1 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_2 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_3 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_6 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_7 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4176*tmp_q_4;
                   const double tmp_q_6 = Dummy_4179*tmp_q_4;
                   const double tmp_q_7 = Dummy_4182*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4177*tmp_q_4;
                   const double tmp_q_21 = Dummy_4180*tmp_q_4;
                   const double tmp_q_22 = Dummy_4183*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4178*tmp_q_4;
                   const double tmp_q_25 = Dummy_4181*tmp_q_4;
                   const double tmp_q_26 = Dummy_4184*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4185*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4176*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4177*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4178*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4179*tmp_q_36;
                   const double tmp_q_38 = Dummy_4180*tmp_q_36;
                   const double tmp_q_39 = Dummy_4181*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4182*tmp_q_40;
                   const double tmp_q_42 = Dummy_4183*tmp_q_40;
                   const double tmp_q_43 = Dummy_4184*tmp_q_40;
                   const double tmp_q_44 = Dummy_4179*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4182*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4180*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4183*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4181*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4184*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4176*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4182*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4177*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4183*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4178*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4184*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4176*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4179*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4177*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4180*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4178*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4181*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4182*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4183*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4184*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4179*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4180*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4181*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4176*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4177*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4178*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4182*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4183*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4184*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4179*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4180*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4181*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4176*Dummy_4176)*tmp_q_103 + (Dummy_4177*Dummy_4177)*tmp_q_103 + (Dummy_4178*Dummy_4178)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4179*Dummy_4179)*tmp_q_107 + (Dummy_4180*Dummy_4180)*tmp_q_107 + (Dummy_4181*Dummy_4181)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4182*Dummy_4182)*tmp_q_108 + (Dummy_4183*Dummy_4183)*tmp_q_108 + (Dummy_4184*Dummy_4184)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4177*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4178*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4176*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
                const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
                const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
                const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
                const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
                const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_7 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4216*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207),_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208),_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209),_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210),_mm256_set_pd(Dummy_4210,Dummy_4210,Dummy_4210,Dummy_4210))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211),_mm256_set_pd(Dummy_4211,Dummy_4211,Dummy_4211,Dummy_4211)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212),_mm256_set_pd(Dummy_4212,Dummy_4212,Dummy_4212,Dummy_4212)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213),_mm256_set_pd(Dummy_4213,Dummy_4213,Dummy_4213,Dummy_4213))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214),_mm256_set_pd(Dummy_4214,Dummy_4214,Dummy_4214,Dummy_4214)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215),_mm256_set_pd(Dummy_4215,Dummy_4215,Dummy_4215,Dummy_4215)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4207,Dummy_4207,Dummy_4207,Dummy_4207)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4208,Dummy_4208,Dummy_4208,Dummy_4208))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4209,Dummy_4209,Dummy_4209,Dummy_4209))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_4_0,src_dof_0),_mm256_mul_pd(q_acc_4_1,src_dof_1)),_mm256_mul_pd(q_acc_4_2,src_dof_2)),_mm256_mul_pd(q_acc_4_3,src_dof_3)),_mm256_mul_pd(q_acc_4_4,src_dof_4)),_mm256_mul_pd(q_acc_4_5,src_dof_5)),_mm256_mul_pd(q_acc_4_6,src_dof_6)),_mm256_mul_pd(q_acc_4_7,src_dof_7)),_mm256_mul_pd(q_acc_4_8,src_dof_8)),_mm256_mul_pd(q_acc_4_9,src_dof_9));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_5_0,src_dof_0),_mm256_mul_pd(q_acc_5_1,src_dof_1)),_mm256_mul_pd(q_acc_5_2,src_dof_2)),_mm256_mul_pd(q_acc_5_3,src_dof_3)),_mm256_mul_pd(q_acc_5_4,src_dof_4)),_mm256_mul_pd(q_acc_5_5,src_dof_5)),_mm256_mul_pd(q_acc_5_6,src_dof_6)),_mm256_mul_pd(q_acc_5_7,src_dof_7)),_mm256_mul_pd(q_acc_5_8,src_dof_8)),_mm256_mul_pd(q_acc_5_9,src_dof_9));
                const __m256d elMatVec_6 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_6_0,src_dof_0),_mm256_mul_pd(q_acc_6_1,src_dof_1)),_mm256_mul_pd(q_acc_6_2,src_dof_2)),_mm256_mul_pd(q_acc_6_3,src_dof_3)),_mm256_mul_pd(q_acc_6_4,src_dof_4)),_mm256_mul_pd(q_acc_6_5,src_dof_5)),_mm256_mul_pd(q_acc_6_6,src_dof_6)),_mm256_mul_pd(q_acc_6_7,src_dof_7)),_mm256_mul_pd(q_acc_6_8,src_dof_8)),_mm256_mul_pd(q_acc_6_9,src_dof_9));
                const __m256d elMatVec_7 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_7_0,src_dof_0),_mm256_mul_pd(q_acc_7_1,src_dof_1)),_mm256_mul_pd(q_acc_7_2,src_dof_2)),_mm256_mul_pd(q_acc_7_3,src_dof_3)),_mm256_mul_pd(q_acc_7_4,src_dof_4)),_mm256_mul_pd(q_acc_7_5,src_dof_5)),_mm256_mul_pd(q_acc_7_6,src_dof_6)),_mm256_mul_pd(q_acc_7_7,src_dof_7)),_mm256_mul_pd(q_acc_7_8,src_dof_8)),_mm256_mul_pd(q_acc_7_9,src_dof_9));
                const __m256d elMatVec_8 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_8_0,src_dof_0),_mm256_mul_pd(q_acc_8_1,src_dof_1)),_mm256_mul_pd(q_acc_8_2,src_dof_2)),_mm256_mul_pd(q_acc_8_3,src_dof_3)),_mm256_mul_pd(q_acc_8_4,src_dof_4)),_mm256_mul_pd(q_acc_8_5,src_dof_5)),_mm256_mul_pd(q_acc_8_6,src_dof_6)),_mm256_mul_pd(q_acc_8_7,src_dof_7)),_mm256_mul_pd(q_acc_8_8,src_dof_8)),_mm256_mul_pd(q_acc_8_9,src_dof_9));
                const __m256d elMatVec_9 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_9_0,src_dof_0),_mm256_mul_pd(q_acc_9_1,src_dof_1)),_mm256_mul_pd(q_acc_9_2,src_dof_2)),_mm256_mul_pd(q_acc_9_3,src_dof_3)),_mm256_mul_pd(q_acc_9_4,src_dof_4)),_mm256_mul_pd(q_acc_9_5,src_dof_5)),_mm256_mul_pd(q_acc_9_6,src_dof_6)),_mm256_mul_pd(q_acc_9_7,src_dof_7)),_mm256_mul_pd(q_acc_9_8,src_dof_8)),_mm256_mul_pd(q_acc_9_9,src_dof_9));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_6,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_7,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_8,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_9,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double src_dof_0 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_1 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_2 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_3 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_7 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4207*tmp_q_4;
                   const double tmp_q_6 = Dummy_4210*tmp_q_4;
                   const double tmp_q_7 = Dummy_4213*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4208*tmp_q_4;
                   const double tmp_q_21 = Dummy_4211*tmp_q_4;
                   const double tmp_q_22 = Dummy_4214*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4209*tmp_q_4;
                   const double tmp_q_25 = Dummy_4212*tmp_q_4;
                   const double tmp_q_26 = Dummy_4215*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4216*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4207*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4208*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4209*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4210*tmp_q_36;
                   const double tmp_q_38 = Dummy_4211*tmp_q_36;
                   const double tmp_q_39 = Dummy_4212*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4213*tmp_q_40;
                   const double tmp_q_42 = Dummy_4214*tmp_q_40;
                   const double tmp_q_43 = Dummy_4215*tmp_q_40;
                   const double tmp_q_44 = Dummy_4210*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4213*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4211*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4214*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4212*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4215*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4207*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4213*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4208*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4214*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4209*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4215*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4207*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4210*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4208*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4211*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4209*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4212*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4213*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4214*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4215*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4210*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4211*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4212*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4207*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4208*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4209*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4213*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4214*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4215*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4210*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4211*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4212*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4207*Dummy_4207)*tmp_q_103 + (Dummy_4208*Dummy_4208)*tmp_q_103 + (Dummy_4209*Dummy_4209)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4210*Dummy_4210)*tmp_q_107 + (Dummy_4211*Dummy_4211)*tmp_q_107 + (Dummy_4212*Dummy_4212)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4213*Dummy_4213)*tmp_q_108 + (Dummy_4214*Dummy_4214)*tmp_q_108 + (Dummy_4215*Dummy_4215)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4208*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4209*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4207*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
                const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
                const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
                const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
                const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
                const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_7 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4247*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238),_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239),_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240),_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241),_mm256_set_pd(Dummy_4241,Dummy_4241,Dummy_4241,Dummy_4241))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242),_mm256_set_pd(Dummy_4242,Dummy_4242,Dummy_4242,Dummy_4242)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243),_mm256_set_pd(Dummy_4243,Dummy_4243,Dummy_4243,Dummy_4243)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244),_mm256_set_pd(Dummy_4244,Dummy_4244,Dummy_4244,Dummy_4244))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245),_mm256_set_pd(Dummy_4245,Dummy_4245,Dummy_4245,Dummy_4245)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246),_mm256_set_pd(Dummy_4246,Dummy_4246,Dummy_4246,Dummy_4246)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4238,Dummy_4238,Dummy_4238,Dummy_4238)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4239,Dummy_4239,Dummy_4239,Dummy_4239))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4240,Dummy_4240,Dummy_4240,Dummy_4240))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_4_0,src_dof_0),_mm256_mul_pd(q_acc_4_1,src_dof_1)),_mm256_mul_pd(q_acc_4_2,src_dof_2)),_mm256_mul_pd(q_acc_4_3,src_dof_3)),_mm256_mul_pd(q_acc_4_4,src_dof_4)),_mm256_mul_pd(q_acc_4_5,src_dof_5)),_mm256_mul_pd(q_acc_4_6,src_dof_6)),_mm256_mul_pd(q_acc_4_7,src_dof_7)),_mm256_mul_pd(q_acc_4_8,src_dof_8)),_mm256_mul_pd(q_acc_4_9,src_dof_9));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_5_0,src_dof_0),_mm256_mul_pd(q_acc_5_1,src_dof_1)),_mm256_mul_pd(q_acc_5_2,src_dof_2)),_mm256_mul_pd(q_acc_5_3,src_dof_3)),_mm256_mul_pd(q_acc_5_4,src_dof_4)),_mm256_mul_pd(q_acc_5_5,src_dof_5)),_mm256_mul_pd(q_acc_5_6,src_dof_6)),_mm256_mul_pd(q_acc_5_7,src_dof_7)),_mm256_mul_pd(q_acc_5_8,src_dof_8)),_mm256_mul_pd(q_acc_5_9,src_dof_9));
                const __m256d elMatVec_6 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_6_0,src_dof_0),_mm256_mul_pd(q_acc_6_1,src_dof_1)),_mm256_mul_pd(q_acc_6_2,src_dof_2)),_mm256_mul_pd(q_acc_6_3,src_dof_3)),_mm256_mul_pd(q_acc_6_4,src_dof_4)),_mm256_mul_pd(q_acc_6_5,src_dof_5)),_mm256_mul_pd(q_acc_6_6,src_dof_6)),_mm256_mul_pd(q_acc_6_7,src_dof_7)),_mm256_mul_pd(q_acc_6_8,src_dof_8)),_mm256_mul_pd(q_acc_6_9,src_dof_9));
                const __m256d elMatVec_7 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_7_0,src_dof_0),_mm256_mul_pd(q_acc_7_1,src_dof_1)),_mm256_mul_pd(q_acc_7_2,src_dof_2)),_mm256_mul_pd(q_acc_7_3,src_dof_3)),_mm256_mul_pd(q_acc_7_4,src_dof_4)),_mm256_mul_pd(q_acc_7_5,src_dof_5)),_mm256_mul_pd(q_acc_7_6,src_dof_6)),_mm256_mul_pd(q_acc_7_7,src_dof_7)),_mm256_mul_pd(q_acc_7_8,src_dof_8)),_mm256_mul_pd(q_acc_7_9,src_dof_9));
                const __m256d elMatVec_8 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_8_0,src_dof_0),_mm256_mul_pd(q_acc_8_1,src_dof_1)),_mm256_mul_pd(q_acc_8_2,src_dof_2)),_mm256_mul_pd(q_acc_8_3,src_dof_3)),_mm256_mul_pd(q_acc_8_4,src_dof_4)),_mm256_mul_pd(q_acc_8_5,src_dof_5)),_mm256_mul_pd(q_acc_8_6,src_dof_6)),_mm256_mul_pd(q_acc_8_7,src_dof_7)),_mm256_mul_pd(q_acc_8_8,src_dof_8)),_mm256_mul_pd(q_acc_8_9,src_dof_9));
                const __m256d elMatVec_9 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_9_0,src_dof_0),_mm256_mul_pd(q_acc_9_1,src_dof_1)),_mm256_mul_pd(q_acc_9_2,src_dof_2)),_mm256_mul_pd(q_acc_9_3,src_dof_3)),_mm256_mul_pd(q_acc_9_4,src_dof_4)),_mm256_mul_pd(q_acc_9_5,src_dof_5)),_mm256_mul_pd(q_acc_9_6,src_dof_6)),_mm256_mul_pd(q_acc_9_7,src_dof_7)),_mm256_mul_pd(q_acc_9_8,src_dof_8)),_mm256_mul_pd(q_acc_9_9,src_dof_9));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_6,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_7,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_8,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_9,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double src_dof_0 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_1 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_2 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_3 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_7 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4238*tmp_q_4;
                   const double tmp_q_6 = Dummy_4241*tmp_q_4;
                   const double tmp_q_7 = Dummy_4244*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4239*tmp_q_4;
                   const double tmp_q_21 = Dummy_4242*tmp_q_4;
                   const double tmp_q_22 = Dummy_4245*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4240*tmp_q_4;
                   const double tmp_q_25 = Dummy_4243*tmp_q_4;
                   const double tmp_q_26 = Dummy_4246*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4247*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4238*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4239*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4240*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4241*tmp_q_36;
                   const double tmp_q_38 = Dummy_4242*tmp_q_36;
                   const double tmp_q_39 = Dummy_4243*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4244*tmp_q_40;
                   const double tmp_q_42 = Dummy_4245*tmp_q_40;
                   const double tmp_q_43 = Dummy_4246*tmp_q_40;
                   const double tmp_q_44 = Dummy_4241*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4244*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4242*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4245*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4243*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4246*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4238*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4244*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4239*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4245*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4240*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4246*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4238*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4241*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4239*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4242*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4240*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4243*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4244*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4245*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4246*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4241*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4242*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4243*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4238*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4239*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4240*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4244*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4245*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4246*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4241*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4242*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4243*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4238*Dummy_4238)*tmp_q_103 + (Dummy_4239*Dummy_4239)*tmp_q_103 + (Dummy_4240*Dummy_4240)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4241*Dummy_4241)*tmp_q_107 + (Dummy_4242*Dummy_4242)*tmp_q_107 + (Dummy_4243*Dummy_4243)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4244*Dummy_4244)*tmp_q_108 + (Dummy_4245*Dummy_4245)*tmp_q_108 + (Dummy_4246*Dummy_4246)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4239*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4240*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4238*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
                const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
                const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
                const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
                const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
                const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_7 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          {
             for (int64_t ctr_0 = 0; ctr_0 < (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 += 4)
             {
                const __m256d src_dof_0 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_1 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_2 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d src_dof_3 = _mm256_loadu_pd(& _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d src_dof_4 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_5 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_6 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d src_dof_7 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d src_dof_8 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d src_dof_9 = _mm256_loadu_pd(& _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_4 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_1 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_7 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_5 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_6 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]);
                const __m256d k_dof_9 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]);
                const __m256d k_dof_2 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]);
                const __m256d k_dof_8 = _mm256_loadu_pd(& _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]);
                const __m256d k_dof_3 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]);
                const __m256d k_dof_0 = _mm256_loadu_pd(& _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]);
                __m256d q_acc_0_0 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_0_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_1 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_1_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_2 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_2_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_3 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_3_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_4 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_4_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_5 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_5_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_6 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_6_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_7 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_7_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_8 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_8_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                __m256d q_acc_9_9 = _mm256_set_pd(0.0,0.0,0.0,0.0);
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const __m256d tmp_q_0 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_1 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_2 = _mm256_mul_pd(_mm256_set_pd(4.0,4.0,4.0,4.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_3 = _mm256_add_pd(tmp_q_1,tmp_q_2);
                   const __m256d tmp_q_4 = _mm256_add_pd(_mm256_add_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),tmp_q_0),tmp_q_3);
                   const __m256d tmp_q_5 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269));
                   const __m256d tmp_q_6 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272));
                   const __m256d tmp_q_7 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275));
                   const __m256d tmp_q_8 = _mm256_add_pd(_mm256_add_pd(tmp_q_5,tmp_q_6),tmp_q_7);
                   const __m256d tmp_q_9 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_10 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_11 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_12 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]));
                   const __m256d tmp_q_13 = _mm256_mul_pd(tmp_q_12,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_14 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]));
                   const __m256d tmp_q_15 = _mm256_mul_pd(tmp_q_14,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_16 = _mm256_mul_pd(_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]));
                   const __m256d tmp_q_17 = _mm256_mul_pd(tmp_q_16,_mm256_set_pd(2.0,2.0,2.0,2.0));
                   const __m256d tmp_q_18 = _mm256_add_pd(tmp_q_10,tmp_q_11);
                   const __m256d tmp_q_19 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(k_dof_1,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),tmp_q_13)),_mm256_mul_pd(k_dof_2,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),tmp_q_15))),_mm256_mul_pd(k_dof_3,_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),tmp_q_17))),_mm256_mul_pd(k_dof_9,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_18,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_12,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_1))),_mm256_mul_pd(k_dof_7,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_10,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_16,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_0))),_mm256_mul_pd(k_dof_8,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_11,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_9,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_14,_mm256_set_pd(-4.0,-4.0,-4.0,-4.0))),tmp_q_2))),_mm256_mul_pd(k_dof_0,_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))),_mm256_mul_pd(_mm256_set_pd(-3.0,-3.0,-3.0,-3.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(1.0,1.0,1.0,1.0)),tmp_q_13),tmp_q_15),tmp_q_17),tmp_q_18),tmp_q_9))),_mm256_mul_pd(k_dof_4,tmp_q_9)),_mm256_mul_pd(k_dof_5,tmp_q_10)),_mm256_mul_pd(k_dof_6,tmp_q_11));
                   const __m256d tmp_q_20 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270));
                   const __m256d tmp_q_21 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273));
                   const __m256d tmp_q_22 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276));
                   const __m256d tmp_q_23 = _mm256_add_pd(_mm256_add_pd(tmp_q_20,tmp_q_21),tmp_q_22);
                   const __m256d tmp_q_24 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271));
                   const __m256d tmp_q_25 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274));
                   const __m256d tmp_q_26 = _mm256_mul_pd(tmp_q_4,_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277));
                   const __m256d tmp_q_27 = _mm256_add_pd(_mm256_add_pd(tmp_q_24,tmp_q_25),tmp_q_26);
                   const double tmp_q_28 = Dummy_4278*_data_q_w[q];
                   const __m256d tmp_q_29 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_1);
                   const __m256d tmp_q_30 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269));
                   const __m256d tmp_q_31 = _mm256_mul_pd(tmp_q_19,tmp_q_8);
                   const __m256d tmp_q_32 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270));
                   const __m256d tmp_q_33 = _mm256_mul_pd(tmp_q_19,tmp_q_23);
                   const __m256d tmp_q_34 = _mm256_mul_pd(tmp_q_29,_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271));
                   const __m256d tmp_q_35 = _mm256_mul_pd(tmp_q_19,tmp_q_27);
                   const __m256d tmp_q_36 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_2);
                   const __m256d tmp_q_37 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272));
                   const __m256d tmp_q_38 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273));
                   const __m256d tmp_q_39 = _mm256_mul_pd(tmp_q_36,_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274));
                   const __m256d tmp_q_40 = _mm256_add_pd(_mm256_set_pd(-1.0,-1.0,-1.0,-1.0),tmp_q_0);
                   const __m256d tmp_q_41 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275));
                   const __m256d tmp_q_42 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276));
                   const __m256d tmp_q_43 = _mm256_mul_pd(tmp_q_40,_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277));
                   const __m256d tmp_q_44 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272));
                   const __m256d tmp_q_45 = _mm256_mul_pd(tmp_q_19,tmp_q_44);
                   const __m256d tmp_q_46 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275));
                   const __m256d tmp_q_47 = _mm256_mul_pd(tmp_q_19,tmp_q_46);
                   const __m256d tmp_q_48 = _mm256_add_pd(tmp_q_45,tmp_q_47);
                   const __m256d tmp_q_49 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273));
                   const __m256d tmp_q_50 = _mm256_mul_pd(tmp_q_19,tmp_q_49);
                   const __m256d tmp_q_51 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276));
                   const __m256d tmp_q_52 = _mm256_mul_pd(tmp_q_19,tmp_q_51);
                   const __m256d tmp_q_53 = _mm256_add_pd(tmp_q_50,tmp_q_52);
                   const __m256d tmp_q_54 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274));
                   const __m256d tmp_q_55 = _mm256_mul_pd(tmp_q_19,tmp_q_54);
                   const __m256d tmp_q_56 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277));
                   const __m256d tmp_q_57 = _mm256_mul_pd(tmp_q_19,tmp_q_56);
                   const __m256d tmp_q_58 = _mm256_add_pd(tmp_q_55,tmp_q_57);
                   const __m256d tmp_q_59 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269));
                   const __m256d tmp_q_60 = _mm256_mul_pd(tmp_q_19,tmp_q_59);
                   const __m256d tmp_q_61 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275));
                   const __m256d tmp_q_62 = _mm256_mul_pd(tmp_q_19,tmp_q_61);
                   const __m256d tmp_q_63 = _mm256_add_pd(tmp_q_60,tmp_q_62);
                   const __m256d tmp_q_64 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270));
                   const __m256d tmp_q_65 = _mm256_mul_pd(tmp_q_19,tmp_q_64);
                   const __m256d tmp_q_66 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276));
                   const __m256d tmp_q_67 = _mm256_mul_pd(tmp_q_19,tmp_q_66);
                   const __m256d tmp_q_68 = _mm256_add_pd(tmp_q_65,tmp_q_67);
                   const __m256d tmp_q_69 = _mm256_mul_pd(tmp_q_0,_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271));
                   const __m256d tmp_q_70 = _mm256_mul_pd(tmp_q_19,tmp_q_69);
                   const __m256d tmp_q_71 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277));
                   const __m256d tmp_q_72 = _mm256_mul_pd(tmp_q_19,tmp_q_71);
                   const __m256d tmp_q_73 = _mm256_add_pd(tmp_q_70,tmp_q_72);
                   const __m256d tmp_q_74 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269));
                   const __m256d tmp_q_75 = _mm256_mul_pd(tmp_q_19,tmp_q_74);
                   const __m256d tmp_q_76 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272));
                   const __m256d tmp_q_77 = _mm256_mul_pd(tmp_q_19,tmp_q_76);
                   const __m256d tmp_q_78 = _mm256_add_pd(tmp_q_75,tmp_q_77);
                   const __m256d tmp_q_79 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270));
                   const __m256d tmp_q_80 = _mm256_mul_pd(tmp_q_19,tmp_q_79);
                   const __m256d tmp_q_81 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273));
                   const __m256d tmp_q_82 = _mm256_mul_pd(tmp_q_19,tmp_q_81);
                   const __m256d tmp_q_83 = _mm256_add_pd(tmp_q_80,tmp_q_82);
                   const __m256d tmp_q_84 = _mm256_mul_pd(tmp_q_2,_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271));
                   const __m256d tmp_q_85 = _mm256_mul_pd(tmp_q_19,tmp_q_84);
                   const __m256d tmp_q_86 = _mm256_mul_pd(tmp_q_1,_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274));
                   const __m256d tmp_q_87 = _mm256_mul_pd(tmp_q_19,tmp_q_86);
                   const __m256d tmp_q_88 = _mm256_add_pd(tmp_q_85,tmp_q_87);
                   const __m256d tmp_q_89 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_3,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))),_mm256_set_pd(4.0,4.0,4.0,4.0));
                   const __m256d tmp_q_90 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_45,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_60,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275)));
                   const __m256d tmp_q_91 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_50,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_65,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276)));
                   const __m256d tmp_q_92 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_55,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_70,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_89),_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277)));
                   const __m256d tmp_q_93 = _mm256_add_pd(_mm256_set_pd(-4.0,-4.0,-4.0,-4.0),tmp_q_0);
                   const __m256d tmp_q_94 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_1,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])));
                   const __m256d tmp_q_95 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_47,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_75,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272)));
                   const __m256d tmp_q_96 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_52,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_80,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273)));
                   const __m256d tmp_q_97 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_57,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_85,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_94),_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274)));
                   const __m256d tmp_q_98 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_2,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_93,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_set_pd(-8.0,-8.0,-8.0,-8.0),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])));
                   const __m256d tmp_q_99 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_62,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_77,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269)));
                   const __m256d tmp_q_100 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_67,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_82,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270)));
                   const __m256d tmp_q_101 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_72,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_87,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_98),_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271)));
                   const __m256d tmp_q_102 = _mm256_mul_pd(tmp_q_19,_mm256_set_pd(16.0,16.0,16.0,16.0));
                   const __m256d tmp_q_103 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q],_data_q_p_0[q]))));
                   const __m256d tmp_q_104 = _mm256_mul_pd(tmp_q_19,tmp_q_30);
                   const __m256d tmp_q_105 = _mm256_mul_pd(tmp_q_19,tmp_q_32);
                   const __m256d tmp_q_106 = _mm256_mul_pd(tmp_q_19,tmp_q_34);
                   const __m256d tmp_q_107 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q],_data_q_p_1[q]))));
                   const __m256d tmp_q_108 = _mm256_mul_pd(tmp_q_102,_mm256_mul_pd(_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q])),_mm256_add_pd(_mm256_set_pd(-0.25,-0.25,-0.25,-0.25),_mm256_set_pd(_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q],_data_q_p_2[q]))));
                   const __m256d tmp_q_109 = _mm256_add_pd(tmp_q_44,tmp_q_46);
                   const __m256d tmp_q_110 = _mm256_add_pd(tmp_q_49,tmp_q_51);
                   const __m256d tmp_q_111 = _mm256_add_pd(tmp_q_54,tmp_q_56);
                   const __m256d tmp_q_112 = _mm256_add_pd(tmp_q_59,tmp_q_61);
                   const __m256d tmp_q_113 = _mm256_add_pd(tmp_q_64,tmp_q_66);
                   const __m256d tmp_q_114 = _mm256_add_pd(tmp_q_69,tmp_q_71);
                   const __m256d tmp_q_115 = _mm256_add_pd(tmp_q_74,tmp_q_76);
                   const __m256d tmp_q_116 = _mm256_add_pd(tmp_q_79,tmp_q_81);
                   const __m256d tmp_q_117 = _mm256_add_pd(tmp_q_84,tmp_q_86);
                   const __m256d tmp_q_118 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_44,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_59,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275)));
                   const __m256d tmp_q_119 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_49,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_64,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276)));
                   const __m256d tmp_q_120 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_54,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_69,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_89,_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277)));
                   const __m256d tmp_q_121 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_46,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_74,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272)));
                   const __m256d tmp_q_122 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_51,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_79,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273)));
                   const __m256d tmp_q_123 = _mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_56,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_84,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_94,_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274)));
                   const __m256d res_tmp_0_0 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_20),_mm256_mul_pd(tmp_q_19,tmp_q_21)),_mm256_mul_pd(tmp_q_19,tmp_q_22))),_mm256_mul_pd(tmp_q_27,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_24),_mm256_mul_pd(tmp_q_19,tmp_q_25)),_mm256_mul_pd(tmp_q_19,tmp_q_26)))),_mm256_mul_pd(tmp_q_8,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_19,tmp_q_5),_mm256_mul_pd(tmp_q_19,tmp_q_6)),_mm256_mul_pd(tmp_q_19,tmp_q_7)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_31),_mm256_mul_pd(tmp_q_32,tmp_q_33)),_mm256_mul_pd(tmp_q_34,tmp_q_35)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_37),_mm256_mul_pd(tmp_q_33,tmp_q_38)),_mm256_mul_pd(tmp_q_35,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_31,tmp_q_41),_mm256_mul_pd(tmp_q_33,tmp_q_42)),_mm256_mul_pd(tmp_q_35,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_53),_mm256_mul_pd(tmp_q_27,tmp_q_58)),_mm256_mul_pd(tmp_q_48,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_68),_mm256_mul_pd(tmp_q_27,tmp_q_73)),_mm256_mul_pd(tmp_q_63,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_83),_mm256_mul_pd(tmp_q_27,tmp_q_88)),_mm256_mul_pd(tmp_q_78,tmp_q_8)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_91),_mm256_mul_pd(tmp_q_27,tmp_q_92)),_mm256_mul_pd(tmp_q_8,tmp_q_90)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_23,tmp_q_96),_mm256_mul_pd(tmp_q_27,tmp_q_97)),_mm256_mul_pd(tmp_q_8,tmp_q_95)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_0_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_23),_mm256_mul_pd(tmp_q_101,tmp_q_27)),_mm256_mul_pd(tmp_q_8,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_1 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269),_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270),_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270)))),_mm256_mul_pd(tmp_q_103,_mm256_mul_pd(_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271),_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_37),_mm256_mul_pd(tmp_q_105,tmp_q_38)),_mm256_mul_pd(tmp_q_106,tmp_q_39)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_104,tmp_q_41),_mm256_mul_pd(tmp_q_105,tmp_q_42)),_mm256_mul_pd(tmp_q_106,tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_48),_mm256_mul_pd(tmp_q_32,tmp_q_53)),_mm256_mul_pd(tmp_q_34,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_63),_mm256_mul_pd(tmp_q_32,tmp_q_68)),_mm256_mul_pd(tmp_q_34,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_78),_mm256_mul_pd(tmp_q_32,tmp_q_83)),_mm256_mul_pd(tmp_q_34,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_90),_mm256_mul_pd(tmp_q_32,tmp_q_91)),_mm256_mul_pd(tmp_q_34,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_30,tmp_q_95),_mm256_mul_pd(tmp_q_32,tmp_q_96)),_mm256_mul_pd(tmp_q_34,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_1_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_32),_mm256_mul_pd(tmp_q_101,tmp_q_34)),_mm256_mul_pd(tmp_q_30,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_2 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272),_mm256_set_pd(Dummy_4272,Dummy_4272,Dummy_4272,Dummy_4272))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273),_mm256_set_pd(Dummy_4273,Dummy_4273,Dummy_4273,Dummy_4273)))),_mm256_mul_pd(tmp_q_107,_mm256_mul_pd(_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274),_mm256_set_pd(Dummy_4274,Dummy_4274,Dummy_4274,Dummy_4274)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_37),tmp_q_41),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_38),tmp_q_42)),_mm256_mul_pd(_mm256_mul_pd(tmp_q_19,tmp_q_39),tmp_q_43)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_48),_mm256_mul_pd(tmp_q_38,tmp_q_53)),_mm256_mul_pd(tmp_q_39,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_63),_mm256_mul_pd(tmp_q_38,tmp_q_68)),_mm256_mul_pd(tmp_q_39,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_78),_mm256_mul_pd(tmp_q_38,tmp_q_83)),_mm256_mul_pd(tmp_q_39,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_90),_mm256_mul_pd(tmp_q_38,tmp_q_91)),_mm256_mul_pd(tmp_q_39,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_37,tmp_q_95),_mm256_mul_pd(tmp_q_38,tmp_q_96)),_mm256_mul_pd(tmp_q_39,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_2_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_38),_mm256_mul_pd(tmp_q_101,tmp_q_39)),_mm256_mul_pd(tmp_q_37,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_3 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275),_mm256_set_pd(Dummy_4275,Dummy_4275,Dummy_4275,Dummy_4275))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276),_mm256_set_pd(Dummy_4276,Dummy_4276,Dummy_4276,Dummy_4276)))),_mm256_mul_pd(tmp_q_108,_mm256_mul_pd(_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277),_mm256_set_pd(Dummy_4277,Dummy_4277,Dummy_4277,Dummy_4277)))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_48),_mm256_mul_pd(tmp_q_42,tmp_q_53)),_mm256_mul_pd(tmp_q_43,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_63),_mm256_mul_pd(tmp_q_42,tmp_q_68)),_mm256_mul_pd(tmp_q_43,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_78),_mm256_mul_pd(tmp_q_42,tmp_q_83)),_mm256_mul_pd(tmp_q_43,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_90),_mm256_mul_pd(tmp_q_42,tmp_q_91)),_mm256_mul_pd(tmp_q_43,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_41,tmp_q_95),_mm256_mul_pd(tmp_q_42,tmp_q_96)),_mm256_mul_pd(tmp_q_43,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_3_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_42),_mm256_mul_pd(tmp_q_101,tmp_q_43)),_mm256_mul_pd(tmp_q_41,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_4 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_48),_mm256_mul_pd(tmp_q_110,tmp_q_53)),_mm256_mul_pd(tmp_q_111,tmp_q_58)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_63),_mm256_mul_pd(tmp_q_110,tmp_q_68)),_mm256_mul_pd(tmp_q_111,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_78),_mm256_mul_pd(tmp_q_110,tmp_q_83)),_mm256_mul_pd(tmp_q_111,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_90),_mm256_mul_pd(tmp_q_110,tmp_q_91)),_mm256_mul_pd(tmp_q_111,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_109,tmp_q_95),_mm256_mul_pd(tmp_q_110,tmp_q_96)),_mm256_mul_pd(tmp_q_111,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_4_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_110),_mm256_mul_pd(tmp_q_101,tmp_q_111)),_mm256_mul_pd(tmp_q_109,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_5 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_63),_mm256_mul_pd(tmp_q_113,tmp_q_68)),_mm256_mul_pd(tmp_q_114,tmp_q_73)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_78),_mm256_mul_pd(tmp_q_113,tmp_q_83)),_mm256_mul_pd(tmp_q_114,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_90),_mm256_mul_pd(tmp_q_113,tmp_q_91)),_mm256_mul_pd(tmp_q_114,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_112,tmp_q_95),_mm256_mul_pd(tmp_q_113,tmp_q_96)),_mm256_mul_pd(tmp_q_114,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_5_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_113),_mm256_mul_pd(tmp_q_101,tmp_q_114)),_mm256_mul_pd(tmp_q_112,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_6 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_78),_mm256_mul_pd(tmp_q_116,tmp_q_83)),_mm256_mul_pd(tmp_q_117,tmp_q_88)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_90),_mm256_mul_pd(tmp_q_116,tmp_q_91)),_mm256_mul_pd(tmp_q_117,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_115,tmp_q_95),_mm256_mul_pd(tmp_q_116,tmp_q_96)),_mm256_mul_pd(tmp_q_117,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_6_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_116),_mm256_mul_pd(tmp_q_101,tmp_q_117)),_mm256_mul_pd(tmp_q_115,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_7 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_90),_mm256_mul_pd(tmp_q_119,tmp_q_91)),_mm256_mul_pd(tmp_q_120,tmp_q_92)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_118,tmp_q_95),_mm256_mul_pd(tmp_q_119,tmp_q_96)),_mm256_mul_pd(tmp_q_120,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_7_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_119),_mm256_mul_pd(tmp_q_101,tmp_q_120)),_mm256_mul_pd(tmp_q_118,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_8 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_121,tmp_q_95),_mm256_mul_pd(tmp_q_122,tmp_q_96)),_mm256_mul_pd(tmp_q_123,tmp_q_97)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_8_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_100,tmp_q_122),_mm256_mul_pd(tmp_q_101,tmp_q_123)),_mm256_mul_pd(tmp_q_121,tmp_q_99)),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   const __m256d res_tmp_9_9 = _mm256_mul_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_99,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_61,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_76,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4269,Dummy_4269,Dummy_4269,Dummy_4269)))),_mm256_mul_pd(tmp_q_100,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_66,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_81,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4270,Dummy_4270,Dummy_4270,Dummy_4270))))),_mm256_mul_pd(tmp_q_101,_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(tmp_q_71,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0)),_mm256_mul_pd(tmp_q_86,_mm256_set_pd(-1.0,-1.0,-1.0,-1.0))),_mm256_mul_pd(tmp_q_98,_mm256_set_pd(Dummy_4271,Dummy_4271,Dummy_4271,Dummy_4271))))),_mm256_set_pd(tmp_q_28,tmp_q_28,tmp_q_28,tmp_q_28));
                   q_acc_0_0 = _mm256_add_pd(q_acc_0_0,res_tmp_0_0);
                   q_acc_0_1 = _mm256_add_pd(q_acc_0_1,res_tmp_0_1);
                   q_acc_0_2 = _mm256_add_pd(q_acc_0_2,res_tmp_0_2);
                   q_acc_0_3 = _mm256_add_pd(q_acc_0_3,res_tmp_0_3);
                   q_acc_0_4 = _mm256_add_pd(q_acc_0_4,res_tmp_0_4);
                   q_acc_0_5 = _mm256_add_pd(q_acc_0_5,res_tmp_0_5);
                   q_acc_0_6 = _mm256_add_pd(q_acc_0_6,res_tmp_0_6);
                   q_acc_0_7 = _mm256_add_pd(q_acc_0_7,res_tmp_0_7);
                   q_acc_0_8 = _mm256_add_pd(q_acc_0_8,res_tmp_0_8);
                   q_acc_0_9 = _mm256_add_pd(q_acc_0_9,res_tmp_0_9);
                   q_acc_1_1 = _mm256_add_pd(q_acc_1_1,res_tmp_1_1);
                   q_acc_1_2 = _mm256_add_pd(q_acc_1_2,res_tmp_1_2);
                   q_acc_1_3 = _mm256_add_pd(q_acc_1_3,res_tmp_1_3);
                   q_acc_1_4 = _mm256_add_pd(q_acc_1_4,res_tmp_1_4);
                   q_acc_1_5 = _mm256_add_pd(q_acc_1_5,res_tmp_1_5);
                   q_acc_1_6 = _mm256_add_pd(q_acc_1_6,res_tmp_1_6);
                   q_acc_1_7 = _mm256_add_pd(q_acc_1_7,res_tmp_1_7);
                   q_acc_1_8 = _mm256_add_pd(q_acc_1_8,res_tmp_1_8);
                   q_acc_1_9 = _mm256_add_pd(q_acc_1_9,res_tmp_1_9);
                   q_acc_2_2 = _mm256_add_pd(q_acc_2_2,res_tmp_2_2);
                   q_acc_2_3 = _mm256_add_pd(q_acc_2_3,res_tmp_2_3);
                   q_acc_2_4 = _mm256_add_pd(q_acc_2_4,res_tmp_2_4);
                   q_acc_2_5 = _mm256_add_pd(q_acc_2_5,res_tmp_2_5);
                   q_acc_2_6 = _mm256_add_pd(q_acc_2_6,res_tmp_2_6);
                   q_acc_2_7 = _mm256_add_pd(q_acc_2_7,res_tmp_2_7);
                   q_acc_2_8 = _mm256_add_pd(q_acc_2_8,res_tmp_2_8);
                   q_acc_2_9 = _mm256_add_pd(q_acc_2_9,res_tmp_2_9);
                   q_acc_3_3 = _mm256_add_pd(q_acc_3_3,res_tmp_3_3);
                   q_acc_3_4 = _mm256_add_pd(q_acc_3_4,res_tmp_3_4);
                   q_acc_3_5 = _mm256_add_pd(q_acc_3_5,res_tmp_3_5);
                   q_acc_3_6 = _mm256_add_pd(q_acc_3_6,res_tmp_3_6);
                   q_acc_3_7 = _mm256_add_pd(q_acc_3_7,res_tmp_3_7);
                   q_acc_3_8 = _mm256_add_pd(q_acc_3_8,res_tmp_3_8);
                   q_acc_3_9 = _mm256_add_pd(q_acc_3_9,res_tmp_3_9);
                   q_acc_4_4 = _mm256_add_pd(q_acc_4_4,res_tmp_4_4);
                   q_acc_4_5 = _mm256_add_pd(q_acc_4_5,res_tmp_4_5);
                   q_acc_4_6 = _mm256_add_pd(q_acc_4_6,res_tmp_4_6);
                   q_acc_4_7 = _mm256_add_pd(q_acc_4_7,res_tmp_4_7);
                   q_acc_4_8 = _mm256_add_pd(q_acc_4_8,res_tmp_4_8);
                   q_acc_4_9 = _mm256_add_pd(q_acc_4_9,res_tmp_4_9);
                   q_acc_5_5 = _mm256_add_pd(q_acc_5_5,res_tmp_5_5);
                   q_acc_5_6 = _mm256_add_pd(q_acc_5_6,res_tmp_5_6);
                   q_acc_5_7 = _mm256_add_pd(q_acc_5_7,res_tmp_5_7);
                   q_acc_5_8 = _mm256_add_pd(q_acc_5_8,res_tmp_5_8);
                   q_acc_5_9 = _mm256_add_pd(q_acc_5_9,res_tmp_5_9);
                   q_acc_6_6 = _mm256_add_pd(q_acc_6_6,res_tmp_6_6);
                   q_acc_6_7 = _mm256_add_pd(q_acc_6_7,res_tmp_6_7);
                   q_acc_6_8 = _mm256_add_pd(q_acc_6_8,res_tmp_6_8);
                   q_acc_6_9 = _mm256_add_pd(q_acc_6_9,res_tmp_6_9);
                   q_acc_7_7 = _mm256_add_pd(q_acc_7_7,res_tmp_7_7);
                   q_acc_7_8 = _mm256_add_pd(q_acc_7_8,res_tmp_7_8);
                   q_acc_7_9 = _mm256_add_pd(q_acc_7_9,res_tmp_7_9);
                   q_acc_8_8 = _mm256_add_pd(q_acc_8_8,res_tmp_8_8);
                   q_acc_8_9 = _mm256_add_pd(q_acc_8_9,res_tmp_8_9);
                   q_acc_9_9 = _mm256_add_pd(q_acc_9_9,res_tmp_9_9);
                }
                __m256d q_acc_1_0 = q_acc_0_1;
                __m256d q_acc_2_0 = q_acc_0_2;
                __m256d q_acc_2_1 = q_acc_1_2;
                __m256d q_acc_3_0 = q_acc_0_3;
                __m256d q_acc_3_1 = q_acc_1_3;
                __m256d q_acc_3_2 = q_acc_2_3;
                __m256d q_acc_4_0 = q_acc_0_4;
                __m256d q_acc_4_1 = q_acc_1_4;
                __m256d q_acc_4_2 = q_acc_2_4;
                __m256d q_acc_4_3 = q_acc_3_4;
                __m256d q_acc_5_0 = q_acc_0_5;
                __m256d q_acc_5_1 = q_acc_1_5;
                __m256d q_acc_5_2 = q_acc_2_5;
                __m256d q_acc_5_3 = q_acc_3_5;
                __m256d q_acc_5_4 = q_acc_4_5;
                __m256d q_acc_6_0 = q_acc_0_6;
                __m256d q_acc_6_1 = q_acc_1_6;
                __m256d q_acc_6_2 = q_acc_2_6;
                __m256d q_acc_6_3 = q_acc_3_6;
                __m256d q_acc_6_4 = q_acc_4_6;
                __m256d q_acc_6_5 = q_acc_5_6;
                __m256d q_acc_7_0 = q_acc_0_7;
                __m256d q_acc_7_1 = q_acc_1_7;
                __m256d q_acc_7_2 = q_acc_2_7;
                __m256d q_acc_7_3 = q_acc_3_7;
                __m256d q_acc_7_4 = q_acc_4_7;
                __m256d q_acc_7_5 = q_acc_5_7;
                __m256d q_acc_7_6 = q_acc_6_7;
                __m256d q_acc_8_0 = q_acc_0_8;
                __m256d q_acc_8_1 = q_acc_1_8;
                __m256d q_acc_8_2 = q_acc_2_8;
                __m256d q_acc_8_3 = q_acc_3_8;
                __m256d q_acc_8_4 = q_acc_4_8;
                __m256d q_acc_8_5 = q_acc_5_8;
                __m256d q_acc_8_6 = q_acc_6_8;
                __m256d q_acc_8_7 = q_acc_7_8;
                __m256d q_acc_9_0 = q_acc_0_9;
                __m256d q_acc_9_1 = q_acc_1_9;
                __m256d q_acc_9_2 = q_acc_2_9;
                __m256d q_acc_9_3 = q_acc_3_9;
                __m256d q_acc_9_4 = q_acc_4_9;
                __m256d q_acc_9_5 = q_acc_5_9;
                __m256d q_acc_9_6 = q_acc_6_9;
                __m256d q_acc_9_7 = q_acc_7_9;
                __m256d q_acc_9_8 = q_acc_8_9;
                const __m256d elMatVec_0 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_0_0,src_dof_0),_mm256_mul_pd(q_acc_0_1,src_dof_1)),_mm256_mul_pd(q_acc_0_2,src_dof_2)),_mm256_mul_pd(q_acc_0_3,src_dof_3)),_mm256_mul_pd(q_acc_0_4,src_dof_4)),_mm256_mul_pd(q_acc_0_5,src_dof_5)),_mm256_mul_pd(q_acc_0_6,src_dof_6)),_mm256_mul_pd(q_acc_0_7,src_dof_7)),_mm256_mul_pd(q_acc_0_8,src_dof_8)),_mm256_mul_pd(q_acc_0_9,src_dof_9));
                const __m256d elMatVec_1 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_1_0,src_dof_0),_mm256_mul_pd(q_acc_1_1,src_dof_1)),_mm256_mul_pd(q_acc_1_2,src_dof_2)),_mm256_mul_pd(q_acc_1_3,src_dof_3)),_mm256_mul_pd(q_acc_1_4,src_dof_4)),_mm256_mul_pd(q_acc_1_5,src_dof_5)),_mm256_mul_pd(q_acc_1_6,src_dof_6)),_mm256_mul_pd(q_acc_1_7,src_dof_7)),_mm256_mul_pd(q_acc_1_8,src_dof_8)),_mm256_mul_pd(q_acc_1_9,src_dof_9));
                const __m256d elMatVec_2 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_2_0,src_dof_0),_mm256_mul_pd(q_acc_2_1,src_dof_1)),_mm256_mul_pd(q_acc_2_2,src_dof_2)),_mm256_mul_pd(q_acc_2_3,src_dof_3)),_mm256_mul_pd(q_acc_2_4,src_dof_4)),_mm256_mul_pd(q_acc_2_5,src_dof_5)),_mm256_mul_pd(q_acc_2_6,src_dof_6)),_mm256_mul_pd(q_acc_2_7,src_dof_7)),_mm256_mul_pd(q_acc_2_8,src_dof_8)),_mm256_mul_pd(q_acc_2_9,src_dof_9));
                const __m256d elMatVec_3 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_3_0,src_dof_0),_mm256_mul_pd(q_acc_3_1,src_dof_1)),_mm256_mul_pd(q_acc_3_2,src_dof_2)),_mm256_mul_pd(q_acc_3_3,src_dof_3)),_mm256_mul_pd(q_acc_3_4,src_dof_4)),_mm256_mul_pd(q_acc_3_5,src_dof_5)),_mm256_mul_pd(q_acc_3_6,src_dof_6)),_mm256_mul_pd(q_acc_3_7,src_dof_7)),_mm256_mul_pd(q_acc_3_8,src_dof_8)),_mm256_mul_pd(q_acc_3_9,src_dof_9));
                const __m256d elMatVec_4 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_4_0,src_dof_0),_mm256_mul_pd(q_acc_4_1,src_dof_1)),_mm256_mul_pd(q_acc_4_2,src_dof_2)),_mm256_mul_pd(q_acc_4_3,src_dof_3)),_mm256_mul_pd(q_acc_4_4,src_dof_4)),_mm256_mul_pd(q_acc_4_5,src_dof_5)),_mm256_mul_pd(q_acc_4_6,src_dof_6)),_mm256_mul_pd(q_acc_4_7,src_dof_7)),_mm256_mul_pd(q_acc_4_8,src_dof_8)),_mm256_mul_pd(q_acc_4_9,src_dof_9));
                const __m256d elMatVec_5 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_5_0,src_dof_0),_mm256_mul_pd(q_acc_5_1,src_dof_1)),_mm256_mul_pd(q_acc_5_2,src_dof_2)),_mm256_mul_pd(q_acc_5_3,src_dof_3)),_mm256_mul_pd(q_acc_5_4,src_dof_4)),_mm256_mul_pd(q_acc_5_5,src_dof_5)),_mm256_mul_pd(q_acc_5_6,src_dof_6)),_mm256_mul_pd(q_acc_5_7,src_dof_7)),_mm256_mul_pd(q_acc_5_8,src_dof_8)),_mm256_mul_pd(q_acc_5_9,src_dof_9));
                const __m256d elMatVec_6 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_6_0,src_dof_0),_mm256_mul_pd(q_acc_6_1,src_dof_1)),_mm256_mul_pd(q_acc_6_2,src_dof_2)),_mm256_mul_pd(q_acc_6_3,src_dof_3)),_mm256_mul_pd(q_acc_6_4,src_dof_4)),_mm256_mul_pd(q_acc_6_5,src_dof_5)),_mm256_mul_pd(q_acc_6_6,src_dof_6)),_mm256_mul_pd(q_acc_6_7,src_dof_7)),_mm256_mul_pd(q_acc_6_8,src_dof_8)),_mm256_mul_pd(q_acc_6_9,src_dof_9));
                const __m256d elMatVec_7 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_7_0,src_dof_0),_mm256_mul_pd(q_acc_7_1,src_dof_1)),_mm256_mul_pd(q_acc_7_2,src_dof_2)),_mm256_mul_pd(q_acc_7_3,src_dof_3)),_mm256_mul_pd(q_acc_7_4,src_dof_4)),_mm256_mul_pd(q_acc_7_5,src_dof_5)),_mm256_mul_pd(q_acc_7_6,src_dof_6)),_mm256_mul_pd(q_acc_7_7,src_dof_7)),_mm256_mul_pd(q_acc_7_8,src_dof_8)),_mm256_mul_pd(q_acc_7_9,src_dof_9));
                const __m256d elMatVec_8 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_8_0,src_dof_0),_mm256_mul_pd(q_acc_8_1,src_dof_1)),_mm256_mul_pd(q_acc_8_2,src_dof_2)),_mm256_mul_pd(q_acc_8_3,src_dof_3)),_mm256_mul_pd(q_acc_8_4,src_dof_4)),_mm256_mul_pd(q_acc_8_5,src_dof_5)),_mm256_mul_pd(q_acc_8_6,src_dof_6)),_mm256_mul_pd(q_acc_8_7,src_dof_7)),_mm256_mul_pd(q_acc_8_8,src_dof_8)),_mm256_mul_pd(q_acc_8_9,src_dof_9));
                const __m256d elMatVec_9 = _mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_add_pd(_mm256_mul_pd(q_acc_9_0,src_dof_0),_mm256_mul_pd(q_acc_9_1,src_dof_1)),_mm256_mul_pd(q_acc_9_2,src_dof_2)),_mm256_mul_pd(q_acc_9_3,src_dof_3)),_mm256_mul_pd(q_acc_9_4,src_dof_4)),_mm256_mul_pd(q_acc_9_5,src_dof_5)),_mm256_mul_pd(q_acc_9_6,src_dof_6)),_mm256_mul_pd(q_acc_9_7,src_dof_7)),_mm256_mul_pd(q_acc_9_8,src_dof_8)),_mm256_mul_pd(q_acc_9_9,src_dof_9));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_0,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_1,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1],_mm256_add_pd(elMatVec_2,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))],_mm256_add_pd(elMatVec_3,_mm256_loadu_pd(& _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_4,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_5,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1],_mm256_add_pd(elMatVec_6,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_7,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))],_mm256_add_pd(elMatVec_8,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))])));
                _mm256_storeu_pd(&_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))],_mm256_add_pd(elMatVec_9,_mm256_loadu_pd(& _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))])));
             }
             for (int64_t ctr_0 = (int64_t)((-ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1) / (4)) * (4); ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
             {
                const double src_dof_0 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_1 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_2 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double src_dof_3 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_5 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double src_dof_7 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double src_dof_9 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_5 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                const double k_dof_9 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                double q_acc_0_0 = 0.0;
                double q_acc_0_1 = 0.0;
                double q_acc_0_2 = 0.0;
                double q_acc_0_3 = 0.0;
                double q_acc_0_4 = 0.0;
                double q_acc_0_5 = 0.0;
                double q_acc_0_6 = 0.0;
                double q_acc_0_7 = 0.0;
                double q_acc_0_8 = 0.0;
                double q_acc_0_9 = 0.0;
                double q_acc_1_1 = 0.0;
                double q_acc_1_2 = 0.0;
                double q_acc_1_3 = 0.0;
                double q_acc_1_4 = 0.0;
                double q_acc_1_5 = 0.0;
                double q_acc_1_6 = 0.0;
                double q_acc_1_7 = 0.0;
                double q_acc_1_8 = 0.0;
                double q_acc_1_9 = 0.0;
                double q_acc_2_2 = 0.0;
                double q_acc_2_3 = 0.0;
                double q_acc_2_4 = 0.0;
                double q_acc_2_5 = 0.0;
                double q_acc_2_6 = 0.0;
                double q_acc_2_7 = 0.0;
                double q_acc_2_8 = 0.0;
                double q_acc_2_9 = 0.0;
                double q_acc_3_3 = 0.0;
                double q_acc_3_4 = 0.0;
                double q_acc_3_5 = 0.0;
                double q_acc_3_6 = 0.0;
                double q_acc_3_7 = 0.0;
                double q_acc_3_8 = 0.0;
                double q_acc_3_9 = 0.0;
                double q_acc_4_4 = 0.0;
                double q_acc_4_5 = 0.0;
                double q_acc_4_6 = 0.0;
                double q_acc_4_7 = 0.0;
                double q_acc_4_8 = 0.0;
                double q_acc_4_9 = 0.0;
                double q_acc_5_5 = 0.0;
                double q_acc_5_6 = 0.0;
                double q_acc_5_7 = 0.0;
                double q_acc_5_8 = 0.0;
                double q_acc_5_9 = 0.0;
                double q_acc_6_6 = 0.0;
                double q_acc_6_7 = 0.0;
                double q_acc_6_8 = 0.0;
                double q_acc_6_9 = 0.0;
                double q_acc_7_7 = 0.0;
                double q_acc_7_8 = 0.0;
                double q_acc_7_9 = 0.0;
                double q_acc_8_8 = 0.0;
                double q_acc_8_9 = 0.0;
                double q_acc_9_9 = 0.0;
                for (int64_t q = 0; q < 4; q += 1)
                {
                   const double tmp_q_0 = 4.0*_data_q_p_2[q];
                   const double tmp_q_1 = 4.0*_data_q_p_0[q];
                   const double tmp_q_2 = 4.0*_data_q_p_1[q];
                   const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                   const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                   const double tmp_q_5 = Dummy_4269*tmp_q_4;
                   const double tmp_q_6 = Dummy_4272*tmp_q_4;
                   const double tmp_q_7 = Dummy_4275*tmp_q_4;
                   const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                   const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                   const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                   const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                   const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                   const double tmp_q_13 = tmp_q_12*2.0;
                   const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                   const double tmp_q_15 = tmp_q_14*2.0;
                   const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                   const double tmp_q_17 = tmp_q_16*2.0;
                   const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                   const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                   const double tmp_q_20 = Dummy_4270*tmp_q_4;
                   const double tmp_q_21 = Dummy_4273*tmp_q_4;
                   const double tmp_q_22 = Dummy_4276*tmp_q_4;
                   const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                   const double tmp_q_24 = Dummy_4271*tmp_q_4;
                   const double tmp_q_25 = Dummy_4274*tmp_q_4;
                   const double tmp_q_26 = Dummy_4277*tmp_q_4;
                   const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                   const double tmp_q_28 = Dummy_4278*_data_q_w[q];
                   const double tmp_q_29 = tmp_q_1 - 1.0;
                   const double tmp_q_30 = Dummy_4269*tmp_q_29;
                   const double tmp_q_31 = tmp_q_19*tmp_q_8;
                   const double tmp_q_32 = Dummy_4270*tmp_q_29;
                   const double tmp_q_33 = tmp_q_19*tmp_q_23;
                   const double tmp_q_34 = Dummy_4271*tmp_q_29;
                   const double tmp_q_35 = tmp_q_19*tmp_q_27;
                   const double tmp_q_36 = tmp_q_2 - 1.0;
                   const double tmp_q_37 = Dummy_4272*tmp_q_36;
                   const double tmp_q_38 = Dummy_4273*tmp_q_36;
                   const double tmp_q_39 = Dummy_4274*tmp_q_36;
                   const double tmp_q_40 = tmp_q_0 - 1.0;
                   const double tmp_q_41 = Dummy_4275*tmp_q_40;
                   const double tmp_q_42 = Dummy_4276*tmp_q_40;
                   const double tmp_q_43 = Dummy_4277*tmp_q_40;
                   const double tmp_q_44 = Dummy_4272*tmp_q_0;
                   const double tmp_q_45 = tmp_q_19*tmp_q_44;
                   const double tmp_q_46 = Dummy_4275*tmp_q_2;
                   const double tmp_q_47 = tmp_q_19*tmp_q_46;
                   const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                   const double tmp_q_49 = Dummy_4273*tmp_q_0;
                   const double tmp_q_50 = tmp_q_19*tmp_q_49;
                   const double tmp_q_51 = Dummy_4276*tmp_q_2;
                   const double tmp_q_52 = tmp_q_19*tmp_q_51;
                   const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                   const double tmp_q_54 = Dummy_4274*tmp_q_0;
                   const double tmp_q_55 = tmp_q_19*tmp_q_54;
                   const double tmp_q_56 = Dummy_4277*tmp_q_2;
                   const double tmp_q_57 = tmp_q_19*tmp_q_56;
                   const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                   const double tmp_q_59 = Dummy_4269*tmp_q_0;
                   const double tmp_q_60 = tmp_q_19*tmp_q_59;
                   const double tmp_q_61 = Dummy_4275*tmp_q_1;
                   const double tmp_q_62 = tmp_q_19*tmp_q_61;
                   const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                   const double tmp_q_64 = Dummy_4270*tmp_q_0;
                   const double tmp_q_65 = tmp_q_19*tmp_q_64;
                   const double tmp_q_66 = Dummy_4276*tmp_q_1;
                   const double tmp_q_67 = tmp_q_19*tmp_q_66;
                   const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                   const double tmp_q_69 = Dummy_4271*tmp_q_0;
                   const double tmp_q_70 = tmp_q_19*tmp_q_69;
                   const double tmp_q_71 = Dummy_4277*tmp_q_1;
                   const double tmp_q_72 = tmp_q_19*tmp_q_71;
                   const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                   const double tmp_q_74 = Dummy_4269*tmp_q_2;
                   const double tmp_q_75 = tmp_q_19*tmp_q_74;
                   const double tmp_q_76 = Dummy_4272*tmp_q_1;
                   const double tmp_q_77 = tmp_q_19*tmp_q_76;
                   const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                   const double tmp_q_79 = Dummy_4270*tmp_q_2;
                   const double tmp_q_80 = tmp_q_19*tmp_q_79;
                   const double tmp_q_81 = Dummy_4273*tmp_q_1;
                   const double tmp_q_82 = tmp_q_19*tmp_q_81;
                   const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                   const double tmp_q_84 = Dummy_4271*tmp_q_2;
                   const double tmp_q_85 = tmp_q_19*tmp_q_84;
                   const double tmp_q_86 = Dummy_4274*tmp_q_1;
                   const double tmp_q_87 = tmp_q_19*tmp_q_86;
                   const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                   const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                   const double tmp_q_90 = Dummy_4275*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                   const double tmp_q_91 = Dummy_4276*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                   const double tmp_q_92 = Dummy_4277*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                   const double tmp_q_93 = tmp_q_0 - 4.0;
                   const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                   const double tmp_q_95 = Dummy_4272*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                   const double tmp_q_96 = Dummy_4273*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                   const double tmp_q_97 = Dummy_4274*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                   const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                   const double tmp_q_99 = Dummy_4269*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                   const double tmp_q_100 = Dummy_4270*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                   const double tmp_q_101 = Dummy_4271*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                   const double tmp_q_102 = tmp_q_19*16.0;
                   const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                   const double tmp_q_104 = tmp_q_19*tmp_q_30;
                   const double tmp_q_105 = tmp_q_19*tmp_q_32;
                   const double tmp_q_106 = tmp_q_19*tmp_q_34;
                   const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                   const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                   const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                   const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                   const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                   const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                   const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                   const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                   const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                   const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                   const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                   const double tmp_q_118 = Dummy_4275*tmp_q_89 - tmp_q_44 - tmp_q_59;
                   const double tmp_q_119 = Dummy_4276*tmp_q_89 - tmp_q_49 - tmp_q_64;
                   const double tmp_q_120 = Dummy_4277*tmp_q_89 - tmp_q_54 - tmp_q_69;
                   const double tmp_q_121 = Dummy_4272*tmp_q_94 - tmp_q_46 - tmp_q_74;
                   const double tmp_q_122 = Dummy_4273*tmp_q_94 - tmp_q_51 - tmp_q_79;
                   const double tmp_q_123 = Dummy_4274*tmp_q_94 - tmp_q_56 - tmp_q_84;
                   const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                   const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                   const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                   const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                   const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                   const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                   const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                   const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                   const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                   const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                   const double res_tmp_1_1 = tmp_q_28*((Dummy_4269*Dummy_4269)*tmp_q_103 + (Dummy_4270*Dummy_4270)*tmp_q_103 + (Dummy_4271*Dummy_4271)*tmp_q_103);
                   const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                   const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                   const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                   const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                   const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                   const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                   const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                   const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                   const double res_tmp_2_2 = tmp_q_28*((Dummy_4272*Dummy_4272)*tmp_q_107 + (Dummy_4273*Dummy_4273)*tmp_q_107 + (Dummy_4274*Dummy_4274)*tmp_q_107);
                   const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                   const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                   const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                   const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                   const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                   const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                   const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                   const double res_tmp_3_3 = tmp_q_28*((Dummy_4275*Dummy_4275)*tmp_q_108 + (Dummy_4276*Dummy_4276)*tmp_q_108 + (Dummy_4277*Dummy_4277)*tmp_q_108);
                   const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                   const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                   const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                   const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                   const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                   const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                   const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                   const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                   const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                   const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                   const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                   const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                   const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                   const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                   const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                   const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                   const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                   const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                   const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                   const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                   const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                   const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                   const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                   const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                   const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                   const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                   const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4270*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4271*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4269*tmp_q_98 - tmp_q_61 - tmp_q_76));
                   q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                   q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                   q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                   q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                   q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                   q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                   q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                   q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                   q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                   q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                   q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                   q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                   q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                   q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                   q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                   q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                   q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                   q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                   q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                   q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                   q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                   q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                   q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                   q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                   q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                   q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                   q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                   q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                   q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                   q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                   q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                   q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                   q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                   q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                   q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                   q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                   q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                   q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                   q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                   q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                   q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                   q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                   q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                   q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                   q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                   q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                   q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                   q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                   q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                   q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                   q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                   q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                   q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                   q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                   q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
                }
                double q_acc_1_0 = q_acc_0_1;
                double q_acc_2_0 = q_acc_0_2;
                double q_acc_2_1 = q_acc_1_2;
                double q_acc_3_0 = q_acc_0_3;
                double q_acc_3_1 = q_acc_1_3;
                double q_acc_3_2 = q_acc_2_3;
                double q_acc_4_0 = q_acc_0_4;
                double q_acc_4_1 = q_acc_1_4;
                double q_acc_4_2 = q_acc_2_4;
                double q_acc_4_3 = q_acc_3_4;
                double q_acc_5_0 = q_acc_0_5;
                double q_acc_5_1 = q_acc_1_5;
                double q_acc_5_2 = q_acc_2_5;
                double q_acc_5_3 = q_acc_3_5;
                double q_acc_5_4 = q_acc_4_5;
                double q_acc_6_0 = q_acc_0_6;
                double q_acc_6_1 = q_acc_1_6;
                double q_acc_6_2 = q_acc_2_6;
                double q_acc_6_3 = q_acc_3_6;
                double q_acc_6_4 = q_acc_4_6;
                double q_acc_6_5 = q_acc_5_6;
                double q_acc_7_0 = q_acc_0_7;
                double q_acc_7_1 = q_acc_1_7;
                double q_acc_7_2 = q_acc_2_7;
                double q_acc_7_3 = q_acc_3_7;
                double q_acc_7_4 = q_acc_4_7;
                double q_acc_7_5 = q_acc_5_7;
                double q_acc_7_6 = q_acc_6_7;
                double q_acc_8_0 = q_acc_0_8;
                double q_acc_8_1 = q_acc_1_8;
                double q_acc_8_2 = q_acc_2_8;
                double q_acc_8_3 = q_acc_3_8;
                double q_acc_8_4 = q_acc_4_8;
                double q_acc_8_5 = q_acc_5_8;
                double q_acc_8_6 = q_acc_6_8;
                double q_acc_8_7 = q_acc_7_8;
                double q_acc_9_0 = q_acc_0_9;
                double q_acc_9_1 = q_acc_1_9;
                double q_acc_9_2 = q_acc_2_9;
                double q_acc_9_3 = q_acc_3_9;
                double q_acc_9_4 = q_acc_4_9;
                double q_acc_9_5 = q_acc_5_9;
                double q_acc_9_6 = q_acc_6_9;
                double q_acc_9_7 = q_acc_7_9;
                double q_acc_9_8 = q_acc_8_9;
                const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
                const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
                const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
                const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
                const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
                const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
                const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
                const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
                const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
                const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
                _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_7 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
                _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
                _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             }
          }
       }
    }
}
} // namespace operatorgeneration

} // namespace hyteg
