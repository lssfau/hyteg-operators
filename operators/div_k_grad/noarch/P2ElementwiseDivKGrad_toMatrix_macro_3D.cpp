/*
* Copyright (c) 2017-2023 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG form generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/

























#include "../P2ElementwiseDivKGrad.hpp"

#define FUNC_PREFIX  

namespace hyteg {

namespace operatorgeneration {

void P2ElementwiseDivKGrad::toMatrix_macro_3D( idx_t * RESTRICT  _data_dstEdge, idx_t * RESTRICT  _data_dstVertex, double * RESTRICT  _data_kEdge, double * RESTRICT  _data_kVertex, idx_t * RESTRICT  _data_srcEdge, idx_t * RESTRICT  _data_srcVertex, double macro_vertex_coord_id_0comp0, double macro_vertex_coord_id_0comp1, double macro_vertex_coord_id_0comp2, double macro_vertex_coord_id_1comp0, double macro_vertex_coord_id_1comp1, double macro_vertex_coord_id_1comp2, double macro_vertex_coord_id_2comp0, double macro_vertex_coord_id_2comp1, double macro_vertex_coord_id_2comp2, double macro_vertex_coord_id_3comp0, double macro_vertex_coord_id_3comp1, double macro_vertex_coord_id_3comp2, std::shared_ptr< SparseMatrixProxy > mat, int64_t micro_edges_per_macro_edge, double micro_edges_per_macro_edge_float ) const
{
    {
       const double _data_q_w [] = {0.0500868232228294, 0.0464629294477613, 0.0531823225835791, 0.0169345914124968};
   
       const double _data_q_p_0 [] = {0.180029693510365, 0.155933120499186, 0.216076429184848, 0.821572540967620};
   
       const double _data_q_p_1 [] = {0.365314518814635, 0.457461587085596, 0.000375515028729290, 0.123666800328458};
   
       const double _data_q_p_2 [] = {0.00692323557362745, 0.381765356069347, 0.430701707077836, 0.0399330486414984};
   
       const double p_affine_0_0 = macro_vertex_coord_id_0comp0;
       const double p_affine_0_1 = macro_vertex_coord_id_0comp1;
       const double p_affine_0_2 = macro_vertex_coord_id_0comp2;
       const double p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double jac_affine_0_0 = -p_affine_0_0 + p_affine_1_0;
       const double jac_affine_0_1 = -p_affine_0_0 + p_affine_2_0;
       const double jac_affine_0_2 = -p_affine_0_0 + p_affine_3_0;
       const double jac_affine_1_0 = -p_affine_0_1 + p_affine_1_1;
       const double jac_affine_1_1 = -p_affine_0_1 + p_affine_2_1;
       const double jac_affine_1_2 = -p_affine_0_1 + p_affine_3_1;
       const double jac_affine_2_0 = -p_affine_0_2 + p_affine_1_2;
       const double jac_affine_2_1 = -p_affine_0_2 + p_affine_2_2;
       const double jac_affine_2_2 = -p_affine_0_2 + p_affine_3_2;
       const double jac_affine_inv_0_0 = (jac_affine_1_1*jac_affine_2_2 - jac_affine_1_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_1 = (-jac_affine_0_1*jac_affine_2_2 + jac_affine_0_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_2 = (jac_affine_0_1*jac_affine_1_2 - jac_affine_0_2*jac_affine_1_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_0 = (-jac_affine_1_0*jac_affine_2_2 + jac_affine_1_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_1 = (jac_affine_0_0*jac_affine_2_2 - jac_affine_0_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_2 = (-jac_affine_0_0*jac_affine_1_2 + jac_affine_0_2*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_0 = (jac_affine_1_0*jac_affine_2_1 - jac_affine_1_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_1 = (-jac_affine_0_0*jac_affine_2_1 + jac_affine_0_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_2 = (jac_affine_0_0*jac_affine_1_1 - jac_affine_0_1*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double abs_det_jac_affine = fabs(jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double Dummy_4428 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4429 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4430 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4431 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4432 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4433 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4434 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4435 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4436 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4437 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4438 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4439 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4440 = -Dummy_4428 + Dummy_4431;
       const double Dummy_4441 = -Dummy_4428 + Dummy_4434;
       const double Dummy_4442 = -Dummy_4428 + Dummy_4437;
       const double Dummy_4443 = -Dummy_4429 + Dummy_4432;
       const double Dummy_4444 = -Dummy_4429 + Dummy_4435;
       const double Dummy_4445 = -Dummy_4429 + Dummy_4438;
       const double Dummy_4446 = -Dummy_4430 + Dummy_4433;
       const double Dummy_4447 = -Dummy_4430 + Dummy_4436;
       const double Dummy_4448 = -Dummy_4430 + Dummy_4439;
       const double Dummy_4449 = (Dummy_4444*Dummy_4448 - Dummy_4445*Dummy_4447)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4450 = (-Dummy_4441*Dummy_4448 + Dummy_4442*Dummy_4447)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4451 = (Dummy_4441*Dummy_4445 - Dummy_4442*Dummy_4444)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4452 = (-Dummy_4443*Dummy_4448 + Dummy_4445*Dummy_4446)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4453 = (Dummy_4440*Dummy_4448 - Dummy_4442*Dummy_4446)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4454 = (-Dummy_4440*Dummy_4445 + Dummy_4442*Dummy_4443)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4455 = (Dummy_4443*Dummy_4447 - Dummy_4444*Dummy_4446)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4456 = (-Dummy_4440*Dummy_4447 + Dummy_4441*Dummy_4446)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4457 = (Dummy_4440*Dummy_4444 - Dummy_4441*Dummy_4443)*1.0 / (Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4458 = fabs(Dummy_4440*Dummy_4444*Dummy_4448 - Dummy_4440*Dummy_4445*Dummy_4447 - Dummy_4441*Dummy_4443*Dummy_4448 + Dummy_4441*Dummy_4445*Dummy_4446 + Dummy_4442*Dummy_4443*Dummy_4447 - Dummy_4442*Dummy_4444*Dummy_4446);
       const double Dummy_4459 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4460 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4461 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4462 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4463 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4464 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4465 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4466 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4467 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4468 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4469 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4470 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4471 = -Dummy_4459 + Dummy_4462;
       const double Dummy_4472 = -Dummy_4459 + Dummy_4465;
       const double Dummy_4473 = -Dummy_4459 + Dummy_4468;
       const double Dummy_4474 = -Dummy_4460 + Dummy_4463;
       const double Dummy_4475 = -Dummy_4460 + Dummy_4466;
       const double Dummy_4476 = -Dummy_4460 + Dummy_4469;
       const double Dummy_4477 = -Dummy_4461 + Dummy_4464;
       const double Dummy_4478 = -Dummy_4461 + Dummy_4467;
       const double Dummy_4479 = -Dummy_4461 + Dummy_4470;
       const double Dummy_4480 = (Dummy_4475*Dummy_4479 - Dummy_4476*Dummy_4478)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4481 = (-Dummy_4472*Dummy_4479 + Dummy_4473*Dummy_4478)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4482 = (Dummy_4472*Dummy_4476 - Dummy_4473*Dummy_4475)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4483 = (-Dummy_4474*Dummy_4479 + Dummy_4476*Dummy_4477)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4484 = (Dummy_4471*Dummy_4479 - Dummy_4473*Dummy_4477)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4485 = (-Dummy_4471*Dummy_4476 + Dummy_4473*Dummy_4474)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4486 = (Dummy_4474*Dummy_4478 - Dummy_4475*Dummy_4477)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4487 = (-Dummy_4471*Dummy_4478 + Dummy_4472*Dummy_4477)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4488 = (Dummy_4471*Dummy_4475 - Dummy_4472*Dummy_4474)*1.0 / (Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4489 = fabs(Dummy_4471*Dummy_4475*Dummy_4479 - Dummy_4471*Dummy_4476*Dummy_4478 - Dummy_4472*Dummy_4474*Dummy_4479 + Dummy_4472*Dummy_4476*Dummy_4477 + Dummy_4473*Dummy_4474*Dummy_4478 - Dummy_4473*Dummy_4475*Dummy_4477);
       const double Dummy_4490 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4491 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4492 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4493 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4494 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4495 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4496 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4497 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4498 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4499 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4500 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4501 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4502 = -Dummy_4490 + Dummy_4493;
       const double Dummy_4503 = -Dummy_4490 + Dummy_4496;
       const double Dummy_4504 = -Dummy_4490 + Dummy_4499;
       const double Dummy_4505 = -Dummy_4491 + Dummy_4494;
       const double Dummy_4506 = -Dummy_4491 + Dummy_4497;
       const double Dummy_4507 = -Dummy_4491 + Dummy_4500;
       const double Dummy_4508 = -Dummy_4492 + Dummy_4495;
       const double Dummy_4509 = -Dummy_4492 + Dummy_4498;
       const double Dummy_4510 = -Dummy_4492 + Dummy_4501;
       const double Dummy_4511 = (Dummy_4506*Dummy_4510 - Dummy_4507*Dummy_4509)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4512 = (-Dummy_4503*Dummy_4510 + Dummy_4504*Dummy_4509)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4513 = (Dummy_4503*Dummy_4507 - Dummy_4504*Dummy_4506)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4514 = (-Dummy_4505*Dummy_4510 + Dummy_4507*Dummy_4508)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4515 = (Dummy_4502*Dummy_4510 - Dummy_4504*Dummy_4508)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4516 = (-Dummy_4502*Dummy_4507 + Dummy_4504*Dummy_4505)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4517 = (Dummy_4505*Dummy_4509 - Dummy_4506*Dummy_4508)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4518 = (-Dummy_4502*Dummy_4509 + Dummy_4503*Dummy_4508)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4519 = (Dummy_4502*Dummy_4506 - Dummy_4503*Dummy_4505)*1.0 / (Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4520 = fabs(Dummy_4502*Dummy_4506*Dummy_4510 - Dummy_4502*Dummy_4507*Dummy_4509 - Dummy_4503*Dummy_4505*Dummy_4510 + Dummy_4503*Dummy_4507*Dummy_4508 + Dummy_4504*Dummy_4505*Dummy_4509 - Dummy_4504*Dummy_4506*Dummy_4508);
       const double Dummy_4521 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4522 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4523 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4524 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4525 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4526 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4527 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4528 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4529 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4530 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4531 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4532 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4533 = -Dummy_4521 + Dummy_4524;
       const double Dummy_4534 = -Dummy_4521 + Dummy_4527;
       const double Dummy_4535 = -Dummy_4521 + Dummy_4530;
       const double Dummy_4536 = -Dummy_4522 + Dummy_4525;
       const double Dummy_4537 = -Dummy_4522 + Dummy_4528;
       const double Dummy_4538 = -Dummy_4522 + Dummy_4531;
       const double Dummy_4539 = -Dummy_4523 + Dummy_4526;
       const double Dummy_4540 = -Dummy_4523 + Dummy_4529;
       const double Dummy_4541 = -Dummy_4523 + Dummy_4532;
       const double Dummy_4542 = (Dummy_4537*Dummy_4541 - Dummy_4538*Dummy_4540)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4543 = (-Dummy_4534*Dummy_4541 + Dummy_4535*Dummy_4540)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4544 = (Dummy_4534*Dummy_4538 - Dummy_4535*Dummy_4537)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4545 = (-Dummy_4536*Dummy_4541 + Dummy_4538*Dummy_4539)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4546 = (Dummy_4533*Dummy_4541 - Dummy_4535*Dummy_4539)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4547 = (-Dummy_4533*Dummy_4538 + Dummy_4535*Dummy_4536)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4548 = (Dummy_4536*Dummy_4540 - Dummy_4537*Dummy_4539)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4549 = (-Dummy_4533*Dummy_4540 + Dummy_4534*Dummy_4539)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4550 = (Dummy_4533*Dummy_4537 - Dummy_4534*Dummy_4536)*1.0 / (Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4551 = fabs(Dummy_4533*Dummy_4537*Dummy_4541 - Dummy_4533*Dummy_4538*Dummy_4540 - Dummy_4534*Dummy_4536*Dummy_4541 + Dummy_4534*Dummy_4538*Dummy_4539 + Dummy_4535*Dummy_4536*Dummy_4540 - Dummy_4535*Dummy_4537*Dummy_4539);
       const double Dummy_4552 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4553 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4554 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4555 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4556 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4557 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4558 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4559 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4560 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4561 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4562 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4563 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4564 = -Dummy_4552 + Dummy_4555;
       const double Dummy_4565 = -Dummy_4552 + Dummy_4558;
       const double Dummy_4566 = -Dummy_4552 + Dummy_4561;
       const double Dummy_4567 = -Dummy_4553 + Dummy_4556;
       const double Dummy_4568 = -Dummy_4553 + Dummy_4559;
       const double Dummy_4569 = -Dummy_4553 + Dummy_4562;
       const double Dummy_4570 = -Dummy_4554 + Dummy_4557;
       const double Dummy_4571 = -Dummy_4554 + Dummy_4560;
       const double Dummy_4572 = -Dummy_4554 + Dummy_4563;
       const double Dummy_4573 = (Dummy_4568*Dummy_4572 - Dummy_4569*Dummy_4571)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4574 = (-Dummy_4565*Dummy_4572 + Dummy_4566*Dummy_4571)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4575 = (Dummy_4565*Dummy_4569 - Dummy_4566*Dummy_4568)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4576 = (-Dummy_4567*Dummy_4572 + Dummy_4569*Dummy_4570)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4577 = (Dummy_4564*Dummy_4572 - Dummy_4566*Dummy_4570)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4578 = (-Dummy_4564*Dummy_4569 + Dummy_4566*Dummy_4567)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4579 = (Dummy_4567*Dummy_4571 - Dummy_4568*Dummy_4570)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4580 = (-Dummy_4564*Dummy_4571 + Dummy_4565*Dummy_4570)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4581 = (Dummy_4564*Dummy_4568 - Dummy_4565*Dummy_4567)*1.0 / (Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       const double Dummy_4582 = fabs(Dummy_4564*Dummy_4568*Dummy_4572 - Dummy_4564*Dummy_4569*Dummy_4571 - Dummy_4565*Dummy_4567*Dummy_4572 + Dummy_4565*Dummy_4569*Dummy_4570 + Dummy_4566*Dummy_4567*Dummy_4571 - Dummy_4566*Dummy_4568*Dummy_4570);
       {
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1)
          {
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = jac_affine_inv_0_0*tmp_q_4;
                const double tmp_q_6 = jac_affine_inv_1_0*tmp_q_4;
                const double tmp_q_7 = jac_affine_inv_2_0*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = jac_affine_inv_0_1*tmp_q_4;
                const double tmp_q_21 = jac_affine_inv_1_1*tmp_q_4;
                const double tmp_q_22 = jac_affine_inv_2_1*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = jac_affine_inv_0_2*tmp_q_4;
                const double tmp_q_25 = jac_affine_inv_1_2*tmp_q_4;
                const double tmp_q_26 = jac_affine_inv_2_2*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = abs_det_jac_affine*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = jac_affine_inv_0_0*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = jac_affine_inv_0_1*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = jac_affine_inv_0_2*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = jac_affine_inv_1_0*tmp_q_36;
                const double tmp_q_38 = jac_affine_inv_1_1*tmp_q_36;
                const double tmp_q_39 = jac_affine_inv_1_2*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = jac_affine_inv_2_0*tmp_q_40;
                const double tmp_q_42 = jac_affine_inv_2_1*tmp_q_40;
                const double tmp_q_43 = jac_affine_inv_2_2*tmp_q_40;
                const double tmp_q_44 = jac_affine_inv_1_0*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = jac_affine_inv_2_0*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = jac_affine_inv_1_1*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = jac_affine_inv_2_1*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = jac_affine_inv_1_2*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = jac_affine_inv_2_2*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = jac_affine_inv_0_0*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = jac_affine_inv_2_0*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = jac_affine_inv_0_1*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = jac_affine_inv_2_1*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = jac_affine_inv_0_2*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = jac_affine_inv_2_2*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = jac_affine_inv_0_0*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = jac_affine_inv_1_0*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = jac_affine_inv_0_1*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = jac_affine_inv_1_1*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = jac_affine_inv_0_2*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = jac_affine_inv_1_2*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = jac_affine_inv_2_0*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = jac_affine_inv_2_1*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = jac_affine_inv_2_2*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = jac_affine_inv_1_0*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = jac_affine_inv_1_1*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = jac_affine_inv_1_2*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = jac_affine_inv_0_0*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = jac_affine_inv_0_1*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = jac_affine_inv_0_2*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = jac_affine_inv_2_0*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = jac_affine_inv_2_1*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = jac_affine_inv_2_2*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = jac_affine_inv_1_0*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = jac_affine_inv_1_1*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = jac_affine_inv_1_2*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((jac_affine_inv_0_0*jac_affine_inv_0_0)*tmp_q_103 + (jac_affine_inv_0_1*jac_affine_inv_0_1)*tmp_q_103 + (jac_affine_inv_0_2*jac_affine_inv_0_2)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((jac_affine_inv_1_0*jac_affine_inv_1_0)*tmp_q_107 + (jac_affine_inv_1_1*jac_affine_inv_1_1)*tmp_q_107 + (jac_affine_inv_1_2*jac_affine_inv_1_2)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((jac_affine_inv_2_0*jac_affine_inv_2_0)*tmp_q_108 + (jac_affine_inv_2_1*jac_affine_inv_2_1)*tmp_q_108 + (jac_affine_inv_2_2*jac_affine_inv_2_2)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(jac_affine_inv_0_1*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(jac_affine_inv_0_2*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(jac_affine_inv_0_0*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMat_0_0 = q_acc_0_0;
             const double elMat_0_1 = q_acc_0_1;
             const double elMat_0_2 = q_acc_0_2;
             const double elMat_0_3 = q_acc_0_3;
             const double elMat_0_4 = q_acc_0_4;
             const double elMat_0_5 = q_acc_0_5;
             const double elMat_0_6 = q_acc_0_6;
             const double elMat_0_7 = q_acc_0_7;
             const double elMat_0_8 = q_acc_0_8;
             const double elMat_0_9 = q_acc_0_9;
             const double elMat_1_0 = q_acc_1_0;
             const double elMat_1_1 = q_acc_1_1;
             const double elMat_1_2 = q_acc_1_2;
             const double elMat_1_3 = q_acc_1_3;
             const double elMat_1_4 = q_acc_1_4;
             const double elMat_1_5 = q_acc_1_5;
             const double elMat_1_6 = q_acc_1_6;
             const double elMat_1_7 = q_acc_1_7;
             const double elMat_1_8 = q_acc_1_8;
             const double elMat_1_9 = q_acc_1_9;
             const double elMat_2_0 = q_acc_2_0;
             const double elMat_2_1 = q_acc_2_1;
             const double elMat_2_2 = q_acc_2_2;
             const double elMat_2_3 = q_acc_2_3;
             const double elMat_2_4 = q_acc_2_4;
             const double elMat_2_5 = q_acc_2_5;
             const double elMat_2_6 = q_acc_2_6;
             const double elMat_2_7 = q_acc_2_7;
             const double elMat_2_8 = q_acc_2_8;
             const double elMat_2_9 = q_acc_2_9;
             const double elMat_3_0 = q_acc_3_0;
             const double elMat_3_1 = q_acc_3_1;
             const double elMat_3_2 = q_acc_3_2;
             const double elMat_3_3 = q_acc_3_3;
             const double elMat_3_4 = q_acc_3_4;
             const double elMat_3_5 = q_acc_3_5;
             const double elMat_3_6 = q_acc_3_6;
             const double elMat_3_7 = q_acc_3_7;
             const double elMat_3_8 = q_acc_3_8;
             const double elMat_3_9 = q_acc_3_9;
             const double elMat_4_0 = q_acc_4_0;
             const double elMat_4_1 = q_acc_4_1;
             const double elMat_4_2 = q_acc_4_2;
             const double elMat_4_3 = q_acc_4_3;
             const double elMat_4_4 = q_acc_4_4;
             const double elMat_4_5 = q_acc_4_5;
             const double elMat_4_6 = q_acc_4_6;
             const double elMat_4_7 = q_acc_4_7;
             const double elMat_4_8 = q_acc_4_8;
             const double elMat_4_9 = q_acc_4_9;
             const double elMat_5_0 = q_acc_5_0;
             const double elMat_5_1 = q_acc_5_1;
             const double elMat_5_2 = q_acc_5_2;
             const double elMat_5_3 = q_acc_5_3;
             const double elMat_5_4 = q_acc_5_4;
             const double elMat_5_5 = q_acc_5_5;
             const double elMat_5_6 = q_acc_5_6;
             const double elMat_5_7 = q_acc_5_7;
             const double elMat_5_8 = q_acc_5_8;
             const double elMat_5_9 = q_acc_5_9;
             const double elMat_6_0 = q_acc_6_0;
             const double elMat_6_1 = q_acc_6_1;
             const double elMat_6_2 = q_acc_6_2;
             const double elMat_6_3 = q_acc_6_3;
             const double elMat_6_4 = q_acc_6_4;
             const double elMat_6_5 = q_acc_6_5;
             const double elMat_6_6 = q_acc_6_6;
             const double elMat_6_7 = q_acc_6_7;
             const double elMat_6_8 = q_acc_6_8;
             const double elMat_6_9 = q_acc_6_9;
             const double elMat_7_0 = q_acc_7_0;
             const double elMat_7_1 = q_acc_7_1;
             const double elMat_7_2 = q_acc_7_2;
             const double elMat_7_3 = q_acc_7_3;
             const double elMat_7_4 = q_acc_7_4;
             const double elMat_7_5 = q_acc_7_5;
             const double elMat_7_6 = q_acc_7_6;
             const double elMat_7_7 = q_acc_7_7;
             const double elMat_7_8 = q_acc_7_8;
             const double elMat_7_9 = q_acc_7_9;
             const double elMat_8_0 = q_acc_8_0;
             const double elMat_8_1 = q_acc_8_1;
             const double elMat_8_2 = q_acc_8_2;
             const double elMat_8_3 = q_acc_8_3;
             const double elMat_8_4 = q_acc_8_4;
             const double elMat_8_5 = q_acc_8_5;
             const double elMat_8_6 = q_acc_8_6;
             const double elMat_8_7 = q_acc_8_7;
             const double elMat_8_8 = q_acc_8_8;
             const double elMat_8_9 = q_acc_8_9;
             const double elMat_9_0 = q_acc_9_0;
             const double elMat_9_1 = q_acc_9_1;
             const double elMat_9_2 = q_acc_9_2;
             const double elMat_9_3 = q_acc_9_3;
             const double elMat_9_4 = q_acc_9_4;
             const double elMat_9_5 = q_acc_9_5;
             const double elMat_9_6 = q_acc_9_6;
             const double elMat_9_7 = q_acc_9_7;
             const double elMat_9_8 = q_acc_9_8;
             const double elMat_9_9 = q_acc_9_9;
         
             std::vector< uint_t > _data_rowIdx( 10 );
             std::vector< uint_t > _data_colIdx( 10 );
             std::vector< real_t > _data_mat( 100 );
         
             _data_rowIdx[0] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[1] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[2] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[3] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[4] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[5] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[6] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[7] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[8] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[9] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[0] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[1] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[2] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[3] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[4] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[5] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[6] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[7] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[8] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[9] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
         
             /* Apply basis transformation */
         
         
         
             _data_mat[0] = ((real_t)(elMat_0_0));
             _data_mat[1] = ((real_t)(elMat_0_1));
             _data_mat[2] = ((real_t)(elMat_0_2));
             _data_mat[3] = ((real_t)(elMat_0_3));
             _data_mat[4] = ((real_t)(elMat_0_4));
             _data_mat[5] = ((real_t)(elMat_0_5));
             _data_mat[6] = ((real_t)(elMat_0_6));
             _data_mat[7] = ((real_t)(elMat_0_7));
             _data_mat[8] = ((real_t)(elMat_0_8));
             _data_mat[9] = ((real_t)(elMat_0_9));
             _data_mat[10] = ((real_t)(elMat_1_0));
             _data_mat[11] = ((real_t)(elMat_1_1));
             _data_mat[12] = ((real_t)(elMat_1_2));
             _data_mat[13] = ((real_t)(elMat_1_3));
             _data_mat[14] = ((real_t)(elMat_1_4));
             _data_mat[15] = ((real_t)(elMat_1_5));
             _data_mat[16] = ((real_t)(elMat_1_6));
             _data_mat[17] = ((real_t)(elMat_1_7));
             _data_mat[18] = ((real_t)(elMat_1_8));
             _data_mat[19] = ((real_t)(elMat_1_9));
             _data_mat[20] = ((real_t)(elMat_2_0));
             _data_mat[21] = ((real_t)(elMat_2_1));
             _data_mat[22] = ((real_t)(elMat_2_2));
             _data_mat[23] = ((real_t)(elMat_2_3));
             _data_mat[24] = ((real_t)(elMat_2_4));
             _data_mat[25] = ((real_t)(elMat_2_5));
             _data_mat[26] = ((real_t)(elMat_2_6));
             _data_mat[27] = ((real_t)(elMat_2_7));
             _data_mat[28] = ((real_t)(elMat_2_8));
             _data_mat[29] = ((real_t)(elMat_2_9));
             _data_mat[30] = ((real_t)(elMat_3_0));
             _data_mat[31] = ((real_t)(elMat_3_1));
             _data_mat[32] = ((real_t)(elMat_3_2));
             _data_mat[33] = ((real_t)(elMat_3_3));
             _data_mat[34] = ((real_t)(elMat_3_4));
             _data_mat[35] = ((real_t)(elMat_3_5));
             _data_mat[36] = ((real_t)(elMat_3_6));
             _data_mat[37] = ((real_t)(elMat_3_7));
             _data_mat[38] = ((real_t)(elMat_3_8));
             _data_mat[39] = ((real_t)(elMat_3_9));
             _data_mat[40] = ((real_t)(elMat_4_0));
             _data_mat[41] = ((real_t)(elMat_4_1));
             _data_mat[42] = ((real_t)(elMat_4_2));
             _data_mat[43] = ((real_t)(elMat_4_3));
             _data_mat[44] = ((real_t)(elMat_4_4));
             _data_mat[45] = ((real_t)(elMat_4_5));
             _data_mat[46] = ((real_t)(elMat_4_6));
             _data_mat[47] = ((real_t)(elMat_4_7));
             _data_mat[48] = ((real_t)(elMat_4_8));
             _data_mat[49] = ((real_t)(elMat_4_9));
             _data_mat[50] = ((real_t)(elMat_5_0));
             _data_mat[51] = ((real_t)(elMat_5_1));
             _data_mat[52] = ((real_t)(elMat_5_2));
             _data_mat[53] = ((real_t)(elMat_5_3));
             _data_mat[54] = ((real_t)(elMat_5_4));
             _data_mat[55] = ((real_t)(elMat_5_5));
             _data_mat[56] = ((real_t)(elMat_5_6));
             _data_mat[57] = ((real_t)(elMat_5_7));
             _data_mat[58] = ((real_t)(elMat_5_8));
             _data_mat[59] = ((real_t)(elMat_5_9));
             _data_mat[60] = ((real_t)(elMat_6_0));
             _data_mat[61] = ((real_t)(elMat_6_1));
             _data_mat[62] = ((real_t)(elMat_6_2));
             _data_mat[63] = ((real_t)(elMat_6_3));
             _data_mat[64] = ((real_t)(elMat_6_4));
             _data_mat[65] = ((real_t)(elMat_6_5));
             _data_mat[66] = ((real_t)(elMat_6_6));
             _data_mat[67] = ((real_t)(elMat_6_7));
             _data_mat[68] = ((real_t)(elMat_6_8));
             _data_mat[69] = ((real_t)(elMat_6_9));
             _data_mat[70] = ((real_t)(elMat_7_0));
             _data_mat[71] = ((real_t)(elMat_7_1));
             _data_mat[72] = ((real_t)(elMat_7_2));
             _data_mat[73] = ((real_t)(elMat_7_3));
             _data_mat[74] = ((real_t)(elMat_7_4));
             _data_mat[75] = ((real_t)(elMat_7_5));
             _data_mat[76] = ((real_t)(elMat_7_6));
             _data_mat[77] = ((real_t)(elMat_7_7));
             _data_mat[78] = ((real_t)(elMat_7_8));
             _data_mat[79] = ((real_t)(elMat_7_9));
             _data_mat[80] = ((real_t)(elMat_8_0));
             _data_mat[81] = ((real_t)(elMat_8_1));
             _data_mat[82] = ((real_t)(elMat_8_2));
             _data_mat[83] = ((real_t)(elMat_8_3));
             _data_mat[84] = ((real_t)(elMat_8_4));
             _data_mat[85] = ((real_t)(elMat_8_5));
             _data_mat[86] = ((real_t)(elMat_8_6));
             _data_mat[87] = ((real_t)(elMat_8_7));
             _data_mat[88] = ((real_t)(elMat_8_8));
             _data_mat[89] = ((real_t)(elMat_8_9));
             _data_mat[90] = ((real_t)(elMat_9_0));
             _data_mat[91] = ((real_t)(elMat_9_1));
             _data_mat[92] = ((real_t)(elMat_9_2));
             _data_mat[93] = ((real_t)(elMat_9_3));
             _data_mat[94] = ((real_t)(elMat_9_4));
             _data_mat[95] = ((real_t)(elMat_9_5));
             _data_mat[96] = ((real_t)(elMat_9_6));
             _data_mat[97] = ((real_t)(elMat_9_7));
             _data_mat[98] = ((real_t)(elMat_9_8));
             _data_mat[99] = ((real_t)(elMat_9_9));
         
         
             mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2; ctr_0 += 1)
          {
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_4 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_8 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4449*tmp_q_4;
                const double tmp_q_6 = Dummy_4452*tmp_q_4;
                const double tmp_q_7 = Dummy_4455*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4450*tmp_q_4;
                const double tmp_q_21 = Dummy_4453*tmp_q_4;
                const double tmp_q_22 = Dummy_4456*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4451*tmp_q_4;
                const double tmp_q_25 = Dummy_4454*tmp_q_4;
                const double tmp_q_26 = Dummy_4457*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4458*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4449*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4450*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4451*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4452*tmp_q_36;
                const double tmp_q_38 = Dummy_4453*tmp_q_36;
                const double tmp_q_39 = Dummy_4454*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4455*tmp_q_40;
                const double tmp_q_42 = Dummy_4456*tmp_q_40;
                const double tmp_q_43 = Dummy_4457*tmp_q_40;
                const double tmp_q_44 = Dummy_4452*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4455*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4453*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4456*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4454*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4457*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4449*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4455*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4450*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4456*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4451*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4457*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4449*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4452*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4450*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4453*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4451*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4454*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4455*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4456*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4457*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4452*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4453*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4454*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4449*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4450*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4451*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4455*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4456*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4457*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4452*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4453*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4454*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4449*Dummy_4449)*tmp_q_103 + (Dummy_4450*Dummy_4450)*tmp_q_103 + (Dummy_4451*Dummy_4451)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4452*Dummy_4452)*tmp_q_107 + (Dummy_4453*Dummy_4453)*tmp_q_107 + (Dummy_4454*Dummy_4454)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4455*Dummy_4455)*tmp_q_108 + (Dummy_4456*Dummy_4456)*tmp_q_108 + (Dummy_4457*Dummy_4457)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4450*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4451*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4449*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMat_0_0 = q_acc_0_0;
             const double elMat_0_1 = q_acc_0_1;
             const double elMat_0_2 = q_acc_0_2;
             const double elMat_0_3 = q_acc_0_3;
             const double elMat_0_4 = q_acc_0_4;
             const double elMat_0_5 = q_acc_0_5;
             const double elMat_0_6 = q_acc_0_6;
             const double elMat_0_7 = q_acc_0_7;
             const double elMat_0_8 = q_acc_0_8;
             const double elMat_0_9 = q_acc_0_9;
             const double elMat_1_0 = q_acc_1_0;
             const double elMat_1_1 = q_acc_1_1;
             const double elMat_1_2 = q_acc_1_2;
             const double elMat_1_3 = q_acc_1_3;
             const double elMat_1_4 = q_acc_1_4;
             const double elMat_1_5 = q_acc_1_5;
             const double elMat_1_6 = q_acc_1_6;
             const double elMat_1_7 = q_acc_1_7;
             const double elMat_1_8 = q_acc_1_8;
             const double elMat_1_9 = q_acc_1_9;
             const double elMat_2_0 = q_acc_2_0;
             const double elMat_2_1 = q_acc_2_1;
             const double elMat_2_2 = q_acc_2_2;
             const double elMat_2_3 = q_acc_2_3;
             const double elMat_2_4 = q_acc_2_4;
             const double elMat_2_5 = q_acc_2_5;
             const double elMat_2_6 = q_acc_2_6;
             const double elMat_2_7 = q_acc_2_7;
             const double elMat_2_8 = q_acc_2_8;
             const double elMat_2_9 = q_acc_2_9;
             const double elMat_3_0 = q_acc_3_0;
             const double elMat_3_1 = q_acc_3_1;
             const double elMat_3_2 = q_acc_3_2;
             const double elMat_3_3 = q_acc_3_3;
             const double elMat_3_4 = q_acc_3_4;
             const double elMat_3_5 = q_acc_3_5;
             const double elMat_3_6 = q_acc_3_6;
             const double elMat_3_7 = q_acc_3_7;
             const double elMat_3_8 = q_acc_3_8;
             const double elMat_3_9 = q_acc_3_9;
             const double elMat_4_0 = q_acc_4_0;
             const double elMat_4_1 = q_acc_4_1;
             const double elMat_4_2 = q_acc_4_2;
             const double elMat_4_3 = q_acc_4_3;
             const double elMat_4_4 = q_acc_4_4;
             const double elMat_4_5 = q_acc_4_5;
             const double elMat_4_6 = q_acc_4_6;
             const double elMat_4_7 = q_acc_4_7;
             const double elMat_4_8 = q_acc_4_8;
             const double elMat_4_9 = q_acc_4_9;
             const double elMat_5_0 = q_acc_5_0;
             const double elMat_5_1 = q_acc_5_1;
             const double elMat_5_2 = q_acc_5_2;
             const double elMat_5_3 = q_acc_5_3;
             const double elMat_5_4 = q_acc_5_4;
             const double elMat_5_5 = q_acc_5_5;
             const double elMat_5_6 = q_acc_5_6;
             const double elMat_5_7 = q_acc_5_7;
             const double elMat_5_8 = q_acc_5_8;
             const double elMat_5_9 = q_acc_5_9;
             const double elMat_6_0 = q_acc_6_0;
             const double elMat_6_1 = q_acc_6_1;
             const double elMat_6_2 = q_acc_6_2;
             const double elMat_6_3 = q_acc_6_3;
             const double elMat_6_4 = q_acc_6_4;
             const double elMat_6_5 = q_acc_6_5;
             const double elMat_6_6 = q_acc_6_6;
             const double elMat_6_7 = q_acc_6_7;
             const double elMat_6_8 = q_acc_6_8;
             const double elMat_6_9 = q_acc_6_9;
             const double elMat_7_0 = q_acc_7_0;
             const double elMat_7_1 = q_acc_7_1;
             const double elMat_7_2 = q_acc_7_2;
             const double elMat_7_3 = q_acc_7_3;
             const double elMat_7_4 = q_acc_7_4;
             const double elMat_7_5 = q_acc_7_5;
             const double elMat_7_6 = q_acc_7_6;
             const double elMat_7_7 = q_acc_7_7;
             const double elMat_7_8 = q_acc_7_8;
             const double elMat_7_9 = q_acc_7_9;
             const double elMat_8_0 = q_acc_8_0;
             const double elMat_8_1 = q_acc_8_1;
             const double elMat_8_2 = q_acc_8_2;
             const double elMat_8_3 = q_acc_8_3;
             const double elMat_8_4 = q_acc_8_4;
             const double elMat_8_5 = q_acc_8_5;
             const double elMat_8_6 = q_acc_8_6;
             const double elMat_8_7 = q_acc_8_7;
             const double elMat_8_8 = q_acc_8_8;
             const double elMat_8_9 = q_acc_8_9;
             const double elMat_9_0 = q_acc_9_0;
             const double elMat_9_1 = q_acc_9_1;
             const double elMat_9_2 = q_acc_9_2;
             const double elMat_9_3 = q_acc_9_3;
             const double elMat_9_4 = q_acc_9_4;
             const double elMat_9_5 = q_acc_9_5;
             const double elMat_9_6 = q_acc_9_6;
             const double elMat_9_7 = q_acc_9_7;
             const double elMat_9_8 = q_acc_9_8;
             const double elMat_9_9 = q_acc_9_9;
         
             std::vector< uint_t > _data_rowIdx( 10 );
             std::vector< uint_t > _data_colIdx( 10 );
             std::vector< real_t > _data_mat( 100 );
         
             _data_rowIdx[0] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[1] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[2] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[3] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[4] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[5] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]));
             _data_rowIdx[6] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[7] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_rowIdx[8] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[9] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[0] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[1] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[2] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[3] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[4] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[5] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1]));
             _data_colIdx[6] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[7] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[8] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[9] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
         
             /* Apply basis transformation */
         
         
         
             _data_mat[0] = ((real_t)(elMat_0_0));
             _data_mat[1] = ((real_t)(elMat_0_1));
             _data_mat[2] = ((real_t)(elMat_0_2));
             _data_mat[3] = ((real_t)(elMat_0_3));
             _data_mat[4] = ((real_t)(elMat_0_4));
             _data_mat[5] = ((real_t)(elMat_0_5));
             _data_mat[6] = ((real_t)(elMat_0_6));
             _data_mat[7] = ((real_t)(elMat_0_7));
             _data_mat[8] = ((real_t)(elMat_0_8));
             _data_mat[9] = ((real_t)(elMat_0_9));
             _data_mat[10] = ((real_t)(elMat_1_0));
             _data_mat[11] = ((real_t)(elMat_1_1));
             _data_mat[12] = ((real_t)(elMat_1_2));
             _data_mat[13] = ((real_t)(elMat_1_3));
             _data_mat[14] = ((real_t)(elMat_1_4));
             _data_mat[15] = ((real_t)(elMat_1_5));
             _data_mat[16] = ((real_t)(elMat_1_6));
             _data_mat[17] = ((real_t)(elMat_1_7));
             _data_mat[18] = ((real_t)(elMat_1_8));
             _data_mat[19] = ((real_t)(elMat_1_9));
             _data_mat[20] = ((real_t)(elMat_2_0));
             _data_mat[21] = ((real_t)(elMat_2_1));
             _data_mat[22] = ((real_t)(elMat_2_2));
             _data_mat[23] = ((real_t)(elMat_2_3));
             _data_mat[24] = ((real_t)(elMat_2_4));
             _data_mat[25] = ((real_t)(elMat_2_5));
             _data_mat[26] = ((real_t)(elMat_2_6));
             _data_mat[27] = ((real_t)(elMat_2_7));
             _data_mat[28] = ((real_t)(elMat_2_8));
             _data_mat[29] = ((real_t)(elMat_2_9));
             _data_mat[30] = ((real_t)(elMat_3_0));
             _data_mat[31] = ((real_t)(elMat_3_1));
             _data_mat[32] = ((real_t)(elMat_3_2));
             _data_mat[33] = ((real_t)(elMat_3_3));
             _data_mat[34] = ((real_t)(elMat_3_4));
             _data_mat[35] = ((real_t)(elMat_3_5));
             _data_mat[36] = ((real_t)(elMat_3_6));
             _data_mat[37] = ((real_t)(elMat_3_7));
             _data_mat[38] = ((real_t)(elMat_3_8));
             _data_mat[39] = ((real_t)(elMat_3_9));
             _data_mat[40] = ((real_t)(elMat_4_0));
             _data_mat[41] = ((real_t)(elMat_4_1));
             _data_mat[42] = ((real_t)(elMat_4_2));
             _data_mat[43] = ((real_t)(elMat_4_3));
             _data_mat[44] = ((real_t)(elMat_4_4));
             _data_mat[45] = ((real_t)(elMat_4_5));
             _data_mat[46] = ((real_t)(elMat_4_6));
             _data_mat[47] = ((real_t)(elMat_4_7));
             _data_mat[48] = ((real_t)(elMat_4_8));
             _data_mat[49] = ((real_t)(elMat_4_9));
             _data_mat[50] = ((real_t)(elMat_5_0));
             _data_mat[51] = ((real_t)(elMat_5_1));
             _data_mat[52] = ((real_t)(elMat_5_2));
             _data_mat[53] = ((real_t)(elMat_5_3));
             _data_mat[54] = ((real_t)(elMat_5_4));
             _data_mat[55] = ((real_t)(elMat_5_5));
             _data_mat[56] = ((real_t)(elMat_5_6));
             _data_mat[57] = ((real_t)(elMat_5_7));
             _data_mat[58] = ((real_t)(elMat_5_8));
             _data_mat[59] = ((real_t)(elMat_5_9));
             _data_mat[60] = ((real_t)(elMat_6_0));
             _data_mat[61] = ((real_t)(elMat_6_1));
             _data_mat[62] = ((real_t)(elMat_6_2));
             _data_mat[63] = ((real_t)(elMat_6_3));
             _data_mat[64] = ((real_t)(elMat_6_4));
             _data_mat[65] = ((real_t)(elMat_6_5));
             _data_mat[66] = ((real_t)(elMat_6_6));
             _data_mat[67] = ((real_t)(elMat_6_7));
             _data_mat[68] = ((real_t)(elMat_6_8));
             _data_mat[69] = ((real_t)(elMat_6_9));
             _data_mat[70] = ((real_t)(elMat_7_0));
             _data_mat[71] = ((real_t)(elMat_7_1));
             _data_mat[72] = ((real_t)(elMat_7_2));
             _data_mat[73] = ((real_t)(elMat_7_3));
             _data_mat[74] = ((real_t)(elMat_7_4));
             _data_mat[75] = ((real_t)(elMat_7_5));
             _data_mat[76] = ((real_t)(elMat_7_6));
             _data_mat[77] = ((real_t)(elMat_7_7));
             _data_mat[78] = ((real_t)(elMat_7_8));
             _data_mat[79] = ((real_t)(elMat_7_9));
             _data_mat[80] = ((real_t)(elMat_8_0));
             _data_mat[81] = ((real_t)(elMat_8_1));
             _data_mat[82] = ((real_t)(elMat_8_2));
             _data_mat[83] = ((real_t)(elMat_8_3));
             _data_mat[84] = ((real_t)(elMat_8_4));
             _data_mat[85] = ((real_t)(elMat_8_5));
             _data_mat[86] = ((real_t)(elMat_8_6));
             _data_mat[87] = ((real_t)(elMat_8_7));
             _data_mat[88] = ((real_t)(elMat_8_8));
             _data_mat[89] = ((real_t)(elMat_8_9));
             _data_mat[90] = ((real_t)(elMat_9_0));
             _data_mat[91] = ((real_t)(elMat_9_1));
             _data_mat[92] = ((real_t)(elMat_9_2));
             _data_mat[93] = ((real_t)(elMat_9_3));
             _data_mat[94] = ((real_t)(elMat_9_4));
             _data_mat[95] = ((real_t)(elMat_9_5));
             _data_mat[96] = ((real_t)(elMat_9_6));
             _data_mat[97] = ((real_t)(elMat_9_7));
             _data_mat[98] = ((real_t)(elMat_9_8));
             _data_mat[99] = ((real_t)(elMat_9_9));
         
         
             mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_6 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4480*tmp_q_4;
                const double tmp_q_6 = Dummy_4483*tmp_q_4;
                const double tmp_q_7 = Dummy_4486*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4481*tmp_q_4;
                const double tmp_q_21 = Dummy_4484*tmp_q_4;
                const double tmp_q_22 = Dummy_4487*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4482*tmp_q_4;
                const double tmp_q_25 = Dummy_4485*tmp_q_4;
                const double tmp_q_26 = Dummy_4488*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4489*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4480*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4481*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4482*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4483*tmp_q_36;
                const double tmp_q_38 = Dummy_4484*tmp_q_36;
                const double tmp_q_39 = Dummy_4485*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4486*tmp_q_40;
                const double tmp_q_42 = Dummy_4487*tmp_q_40;
                const double tmp_q_43 = Dummy_4488*tmp_q_40;
                const double tmp_q_44 = Dummy_4483*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4486*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4484*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4487*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4485*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4488*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4480*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4486*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4481*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4487*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4482*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4488*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4480*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4483*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4481*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4484*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4482*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4485*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4486*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4487*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4488*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4483*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4484*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4485*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4480*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4481*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4482*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4486*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4487*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4488*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4483*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4484*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4485*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4480*Dummy_4480)*tmp_q_103 + (Dummy_4481*Dummy_4481)*tmp_q_103 + (Dummy_4482*Dummy_4482)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4483*Dummy_4483)*tmp_q_107 + (Dummy_4484*Dummy_4484)*tmp_q_107 + (Dummy_4485*Dummy_4485)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4486*Dummy_4486)*tmp_q_108 + (Dummy_4487*Dummy_4487)*tmp_q_108 + (Dummy_4488*Dummy_4488)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4481*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4482*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4480*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMat_0_0 = q_acc_0_0;
             const double elMat_0_1 = q_acc_0_1;
             const double elMat_0_2 = q_acc_0_2;
             const double elMat_0_3 = q_acc_0_3;
             const double elMat_0_4 = q_acc_0_4;
             const double elMat_0_5 = q_acc_0_5;
             const double elMat_0_6 = q_acc_0_6;
             const double elMat_0_7 = q_acc_0_7;
             const double elMat_0_8 = q_acc_0_8;
             const double elMat_0_9 = q_acc_0_9;
             const double elMat_1_0 = q_acc_1_0;
             const double elMat_1_1 = q_acc_1_1;
             const double elMat_1_2 = q_acc_1_2;
             const double elMat_1_3 = q_acc_1_3;
             const double elMat_1_4 = q_acc_1_4;
             const double elMat_1_5 = q_acc_1_5;
             const double elMat_1_6 = q_acc_1_6;
             const double elMat_1_7 = q_acc_1_7;
             const double elMat_1_8 = q_acc_1_8;
             const double elMat_1_9 = q_acc_1_9;
             const double elMat_2_0 = q_acc_2_0;
             const double elMat_2_1 = q_acc_2_1;
             const double elMat_2_2 = q_acc_2_2;
             const double elMat_2_3 = q_acc_2_3;
             const double elMat_2_4 = q_acc_2_4;
             const double elMat_2_5 = q_acc_2_5;
             const double elMat_2_6 = q_acc_2_6;
             const double elMat_2_7 = q_acc_2_7;
             const double elMat_2_8 = q_acc_2_8;
             const double elMat_2_9 = q_acc_2_9;
             const double elMat_3_0 = q_acc_3_0;
             const double elMat_3_1 = q_acc_3_1;
             const double elMat_3_2 = q_acc_3_2;
             const double elMat_3_3 = q_acc_3_3;
             const double elMat_3_4 = q_acc_3_4;
             const double elMat_3_5 = q_acc_3_5;
             const double elMat_3_6 = q_acc_3_6;
             const double elMat_3_7 = q_acc_3_7;
             const double elMat_3_8 = q_acc_3_8;
             const double elMat_3_9 = q_acc_3_9;
             const double elMat_4_0 = q_acc_4_0;
             const double elMat_4_1 = q_acc_4_1;
             const double elMat_4_2 = q_acc_4_2;
             const double elMat_4_3 = q_acc_4_3;
             const double elMat_4_4 = q_acc_4_4;
             const double elMat_4_5 = q_acc_4_5;
             const double elMat_4_6 = q_acc_4_6;
             const double elMat_4_7 = q_acc_4_7;
             const double elMat_4_8 = q_acc_4_8;
             const double elMat_4_9 = q_acc_4_9;
             const double elMat_5_0 = q_acc_5_0;
             const double elMat_5_1 = q_acc_5_1;
             const double elMat_5_2 = q_acc_5_2;
             const double elMat_5_3 = q_acc_5_3;
             const double elMat_5_4 = q_acc_5_4;
             const double elMat_5_5 = q_acc_5_5;
             const double elMat_5_6 = q_acc_5_6;
             const double elMat_5_7 = q_acc_5_7;
             const double elMat_5_8 = q_acc_5_8;
             const double elMat_5_9 = q_acc_5_9;
             const double elMat_6_0 = q_acc_6_0;
             const double elMat_6_1 = q_acc_6_1;
             const double elMat_6_2 = q_acc_6_2;
             const double elMat_6_3 = q_acc_6_3;
             const double elMat_6_4 = q_acc_6_4;
             const double elMat_6_5 = q_acc_6_5;
             const double elMat_6_6 = q_acc_6_6;
             const double elMat_6_7 = q_acc_6_7;
             const double elMat_6_8 = q_acc_6_8;
             const double elMat_6_9 = q_acc_6_9;
             const double elMat_7_0 = q_acc_7_0;
             const double elMat_7_1 = q_acc_7_1;
             const double elMat_7_2 = q_acc_7_2;
             const double elMat_7_3 = q_acc_7_3;
             const double elMat_7_4 = q_acc_7_4;
             const double elMat_7_5 = q_acc_7_5;
             const double elMat_7_6 = q_acc_7_6;
             const double elMat_7_7 = q_acc_7_7;
             const double elMat_7_8 = q_acc_7_8;
             const double elMat_7_9 = q_acc_7_9;
             const double elMat_8_0 = q_acc_8_0;
             const double elMat_8_1 = q_acc_8_1;
             const double elMat_8_2 = q_acc_8_2;
             const double elMat_8_3 = q_acc_8_3;
             const double elMat_8_4 = q_acc_8_4;
             const double elMat_8_5 = q_acc_8_5;
             const double elMat_8_6 = q_acc_8_6;
             const double elMat_8_7 = q_acc_8_7;
             const double elMat_8_8 = q_acc_8_8;
             const double elMat_8_9 = q_acc_8_9;
             const double elMat_9_0 = q_acc_9_0;
             const double elMat_9_1 = q_acc_9_1;
             const double elMat_9_2 = q_acc_9_2;
             const double elMat_9_3 = q_acc_9_3;
             const double elMat_9_4 = q_acc_9_4;
             const double elMat_9_5 = q_acc_9_5;
             const double elMat_9_6 = q_acc_9_6;
             const double elMat_9_7 = q_acc_9_7;
             const double elMat_9_8 = q_acc_9_8;
             const double elMat_9_9 = q_acc_9_9;
         
             std::vector< uint_t > _data_rowIdx( 10 );
             std::vector< uint_t > _data_colIdx( 10 );
             std::vector< real_t > _data_mat( 100 );
         
             _data_rowIdx[0] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[1] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[2] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[3] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[4] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_rowIdx[5] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[6] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[7] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_rowIdx[8] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_rowIdx[9] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[0] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[1] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[2] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[3] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[4] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[5] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[6] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[7] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[8] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[9] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
         
             /* Apply basis transformation */
         
         
         
             _data_mat[0] = ((real_t)(elMat_0_0));
             _data_mat[1] = ((real_t)(elMat_0_1));
             _data_mat[2] = ((real_t)(elMat_0_2));
             _data_mat[3] = ((real_t)(elMat_0_3));
             _data_mat[4] = ((real_t)(elMat_0_4));
             _data_mat[5] = ((real_t)(elMat_0_5));
             _data_mat[6] = ((real_t)(elMat_0_6));
             _data_mat[7] = ((real_t)(elMat_0_7));
             _data_mat[8] = ((real_t)(elMat_0_8));
             _data_mat[9] = ((real_t)(elMat_0_9));
             _data_mat[10] = ((real_t)(elMat_1_0));
             _data_mat[11] = ((real_t)(elMat_1_1));
             _data_mat[12] = ((real_t)(elMat_1_2));
             _data_mat[13] = ((real_t)(elMat_1_3));
             _data_mat[14] = ((real_t)(elMat_1_4));
             _data_mat[15] = ((real_t)(elMat_1_5));
             _data_mat[16] = ((real_t)(elMat_1_6));
             _data_mat[17] = ((real_t)(elMat_1_7));
             _data_mat[18] = ((real_t)(elMat_1_8));
             _data_mat[19] = ((real_t)(elMat_1_9));
             _data_mat[20] = ((real_t)(elMat_2_0));
             _data_mat[21] = ((real_t)(elMat_2_1));
             _data_mat[22] = ((real_t)(elMat_2_2));
             _data_mat[23] = ((real_t)(elMat_2_3));
             _data_mat[24] = ((real_t)(elMat_2_4));
             _data_mat[25] = ((real_t)(elMat_2_5));
             _data_mat[26] = ((real_t)(elMat_2_6));
             _data_mat[27] = ((real_t)(elMat_2_7));
             _data_mat[28] = ((real_t)(elMat_2_8));
             _data_mat[29] = ((real_t)(elMat_2_9));
             _data_mat[30] = ((real_t)(elMat_3_0));
             _data_mat[31] = ((real_t)(elMat_3_1));
             _data_mat[32] = ((real_t)(elMat_3_2));
             _data_mat[33] = ((real_t)(elMat_3_3));
             _data_mat[34] = ((real_t)(elMat_3_4));
             _data_mat[35] = ((real_t)(elMat_3_5));
             _data_mat[36] = ((real_t)(elMat_3_6));
             _data_mat[37] = ((real_t)(elMat_3_7));
             _data_mat[38] = ((real_t)(elMat_3_8));
             _data_mat[39] = ((real_t)(elMat_3_9));
             _data_mat[40] = ((real_t)(elMat_4_0));
             _data_mat[41] = ((real_t)(elMat_4_1));
             _data_mat[42] = ((real_t)(elMat_4_2));
             _data_mat[43] = ((real_t)(elMat_4_3));
             _data_mat[44] = ((real_t)(elMat_4_4));
             _data_mat[45] = ((real_t)(elMat_4_5));
             _data_mat[46] = ((real_t)(elMat_4_6));
             _data_mat[47] = ((real_t)(elMat_4_7));
             _data_mat[48] = ((real_t)(elMat_4_8));
             _data_mat[49] = ((real_t)(elMat_4_9));
             _data_mat[50] = ((real_t)(elMat_5_0));
             _data_mat[51] = ((real_t)(elMat_5_1));
             _data_mat[52] = ((real_t)(elMat_5_2));
             _data_mat[53] = ((real_t)(elMat_5_3));
             _data_mat[54] = ((real_t)(elMat_5_4));
             _data_mat[55] = ((real_t)(elMat_5_5));
             _data_mat[56] = ((real_t)(elMat_5_6));
             _data_mat[57] = ((real_t)(elMat_5_7));
             _data_mat[58] = ((real_t)(elMat_5_8));
             _data_mat[59] = ((real_t)(elMat_5_9));
             _data_mat[60] = ((real_t)(elMat_6_0));
             _data_mat[61] = ((real_t)(elMat_6_1));
             _data_mat[62] = ((real_t)(elMat_6_2));
             _data_mat[63] = ((real_t)(elMat_6_3));
             _data_mat[64] = ((real_t)(elMat_6_4));
             _data_mat[65] = ((real_t)(elMat_6_5));
             _data_mat[66] = ((real_t)(elMat_6_6));
             _data_mat[67] = ((real_t)(elMat_6_7));
             _data_mat[68] = ((real_t)(elMat_6_8));
             _data_mat[69] = ((real_t)(elMat_6_9));
             _data_mat[70] = ((real_t)(elMat_7_0));
             _data_mat[71] = ((real_t)(elMat_7_1));
             _data_mat[72] = ((real_t)(elMat_7_2));
             _data_mat[73] = ((real_t)(elMat_7_3));
             _data_mat[74] = ((real_t)(elMat_7_4));
             _data_mat[75] = ((real_t)(elMat_7_5));
             _data_mat[76] = ((real_t)(elMat_7_6));
             _data_mat[77] = ((real_t)(elMat_7_7));
             _data_mat[78] = ((real_t)(elMat_7_8));
             _data_mat[79] = ((real_t)(elMat_7_9));
             _data_mat[80] = ((real_t)(elMat_8_0));
             _data_mat[81] = ((real_t)(elMat_8_1));
             _data_mat[82] = ((real_t)(elMat_8_2));
             _data_mat[83] = ((real_t)(elMat_8_3));
             _data_mat[84] = ((real_t)(elMat_8_4));
             _data_mat[85] = ((real_t)(elMat_8_5));
             _data_mat[86] = ((real_t)(elMat_8_6));
             _data_mat[87] = ((real_t)(elMat_8_7));
             _data_mat[88] = ((real_t)(elMat_8_8));
             _data_mat[89] = ((real_t)(elMat_8_9));
             _data_mat[90] = ((real_t)(elMat_9_0));
             _data_mat[91] = ((real_t)(elMat_9_1));
             _data_mat[92] = ((real_t)(elMat_9_2));
             _data_mat[93] = ((real_t)(elMat_9_3));
             _data_mat[94] = ((real_t)(elMat_9_4));
             _data_mat[95] = ((real_t)(elMat_9_5));
             _data_mat[96] = ((real_t)(elMat_9_6));
             _data_mat[97] = ((real_t)(elMat_9_7));
             _data_mat[98] = ((real_t)(elMat_9_8));
             _data_mat[99] = ((real_t)(elMat_9_9));
         
         
             mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4511*tmp_q_4;
                const double tmp_q_6 = Dummy_4514*tmp_q_4;
                const double tmp_q_7 = Dummy_4517*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4512*tmp_q_4;
                const double tmp_q_21 = Dummy_4515*tmp_q_4;
                const double tmp_q_22 = Dummy_4518*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4513*tmp_q_4;
                const double tmp_q_25 = Dummy_4516*tmp_q_4;
                const double tmp_q_26 = Dummy_4519*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4520*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4511*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4512*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4513*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4514*tmp_q_36;
                const double tmp_q_38 = Dummy_4515*tmp_q_36;
                const double tmp_q_39 = Dummy_4516*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4517*tmp_q_40;
                const double tmp_q_42 = Dummy_4518*tmp_q_40;
                const double tmp_q_43 = Dummy_4519*tmp_q_40;
                const double tmp_q_44 = Dummy_4514*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4517*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4515*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4518*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4516*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4519*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4511*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4517*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4512*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4518*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4513*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4519*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4511*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4514*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4512*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4515*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4513*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4516*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4517*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4518*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4519*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4514*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4515*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4516*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4511*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4512*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4513*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4517*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4518*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4519*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4514*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4515*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4516*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4511*Dummy_4511)*tmp_q_103 + (Dummy_4512*Dummy_4512)*tmp_q_103 + (Dummy_4513*Dummy_4513)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4514*Dummy_4514)*tmp_q_107 + (Dummy_4515*Dummy_4515)*tmp_q_107 + (Dummy_4516*Dummy_4516)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4517*Dummy_4517)*tmp_q_108 + (Dummy_4518*Dummy_4518)*tmp_q_108 + (Dummy_4519*Dummy_4519)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4512*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4513*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4511*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMat_0_0 = q_acc_0_0;
             const double elMat_0_1 = q_acc_0_1;
             const double elMat_0_2 = q_acc_0_2;
             const double elMat_0_3 = q_acc_0_3;
             const double elMat_0_4 = q_acc_0_4;
             const double elMat_0_5 = q_acc_0_5;
             const double elMat_0_6 = q_acc_0_6;
             const double elMat_0_7 = q_acc_0_7;
             const double elMat_0_8 = q_acc_0_8;
             const double elMat_0_9 = q_acc_0_9;
             const double elMat_1_0 = q_acc_1_0;
             const double elMat_1_1 = q_acc_1_1;
             const double elMat_1_2 = q_acc_1_2;
             const double elMat_1_3 = q_acc_1_3;
             const double elMat_1_4 = q_acc_1_4;
             const double elMat_1_5 = q_acc_1_5;
             const double elMat_1_6 = q_acc_1_6;
             const double elMat_1_7 = q_acc_1_7;
             const double elMat_1_8 = q_acc_1_8;
             const double elMat_1_9 = q_acc_1_9;
             const double elMat_2_0 = q_acc_2_0;
             const double elMat_2_1 = q_acc_2_1;
             const double elMat_2_2 = q_acc_2_2;
             const double elMat_2_3 = q_acc_2_3;
             const double elMat_2_4 = q_acc_2_4;
             const double elMat_2_5 = q_acc_2_5;
             const double elMat_2_6 = q_acc_2_6;
             const double elMat_2_7 = q_acc_2_7;
             const double elMat_2_8 = q_acc_2_8;
             const double elMat_2_9 = q_acc_2_9;
             const double elMat_3_0 = q_acc_3_0;
             const double elMat_3_1 = q_acc_3_1;
             const double elMat_3_2 = q_acc_3_2;
             const double elMat_3_3 = q_acc_3_3;
             const double elMat_3_4 = q_acc_3_4;
             const double elMat_3_5 = q_acc_3_5;
             const double elMat_3_6 = q_acc_3_6;
             const double elMat_3_7 = q_acc_3_7;
             const double elMat_3_8 = q_acc_3_8;
             const double elMat_3_9 = q_acc_3_9;
             const double elMat_4_0 = q_acc_4_0;
             const double elMat_4_1 = q_acc_4_1;
             const double elMat_4_2 = q_acc_4_2;
             const double elMat_4_3 = q_acc_4_3;
             const double elMat_4_4 = q_acc_4_4;
             const double elMat_4_5 = q_acc_4_5;
             const double elMat_4_6 = q_acc_4_6;
             const double elMat_4_7 = q_acc_4_7;
             const double elMat_4_8 = q_acc_4_8;
             const double elMat_4_9 = q_acc_4_9;
             const double elMat_5_0 = q_acc_5_0;
             const double elMat_5_1 = q_acc_5_1;
             const double elMat_5_2 = q_acc_5_2;
             const double elMat_5_3 = q_acc_5_3;
             const double elMat_5_4 = q_acc_5_4;
             const double elMat_5_5 = q_acc_5_5;
             const double elMat_5_6 = q_acc_5_6;
             const double elMat_5_7 = q_acc_5_7;
             const double elMat_5_8 = q_acc_5_8;
             const double elMat_5_9 = q_acc_5_9;
             const double elMat_6_0 = q_acc_6_0;
             const double elMat_6_1 = q_acc_6_1;
             const double elMat_6_2 = q_acc_6_2;
             const double elMat_6_3 = q_acc_6_3;
             const double elMat_6_4 = q_acc_6_4;
             const double elMat_6_5 = q_acc_6_5;
             const double elMat_6_6 = q_acc_6_6;
             const double elMat_6_7 = q_acc_6_7;
             const double elMat_6_8 = q_acc_6_8;
             const double elMat_6_9 = q_acc_6_9;
             const double elMat_7_0 = q_acc_7_0;
             const double elMat_7_1 = q_acc_7_1;
             const double elMat_7_2 = q_acc_7_2;
             const double elMat_7_3 = q_acc_7_3;
             const double elMat_7_4 = q_acc_7_4;
             const double elMat_7_5 = q_acc_7_5;
             const double elMat_7_6 = q_acc_7_6;
             const double elMat_7_7 = q_acc_7_7;
             const double elMat_7_8 = q_acc_7_8;
             const double elMat_7_9 = q_acc_7_9;
             const double elMat_8_0 = q_acc_8_0;
             const double elMat_8_1 = q_acc_8_1;
             const double elMat_8_2 = q_acc_8_2;
             const double elMat_8_3 = q_acc_8_3;
             const double elMat_8_4 = q_acc_8_4;
             const double elMat_8_5 = q_acc_8_5;
             const double elMat_8_6 = q_acc_8_6;
             const double elMat_8_7 = q_acc_8_7;
             const double elMat_8_8 = q_acc_8_8;
             const double elMat_8_9 = q_acc_8_9;
             const double elMat_9_0 = q_acc_9_0;
             const double elMat_9_1 = q_acc_9_1;
             const double elMat_9_2 = q_acc_9_2;
             const double elMat_9_3 = q_acc_9_3;
             const double elMat_9_4 = q_acc_9_4;
             const double elMat_9_5 = q_acc_9_5;
             const double elMat_9_6 = q_acc_9_6;
             const double elMat_9_7 = q_acc_9_7;
             const double elMat_9_8 = q_acc_9_8;
             const double elMat_9_9 = q_acc_9_9;
         
             std::vector< uint_t > _data_rowIdx( 10 );
             std::vector< uint_t > _data_colIdx( 10 );
             std::vector< real_t > _data_mat( 100 );
         
             _data_rowIdx[0] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[1] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[2] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[3] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[4] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[5] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[6] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[7] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[8] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[9] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[0] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[1] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[2] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[3] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[4] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[5] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[6] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[7] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[8] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[9] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
         
             /* Apply basis transformation */
         
         
         
             _data_mat[0] = ((real_t)(elMat_0_0));
             _data_mat[1] = ((real_t)(elMat_0_1));
             _data_mat[2] = ((real_t)(elMat_0_2));
             _data_mat[3] = ((real_t)(elMat_0_3));
             _data_mat[4] = ((real_t)(elMat_0_4));
             _data_mat[5] = ((real_t)(elMat_0_5));
             _data_mat[6] = ((real_t)(elMat_0_6));
             _data_mat[7] = ((real_t)(elMat_0_7));
             _data_mat[8] = ((real_t)(elMat_0_8));
             _data_mat[9] = ((real_t)(elMat_0_9));
             _data_mat[10] = ((real_t)(elMat_1_0));
             _data_mat[11] = ((real_t)(elMat_1_1));
             _data_mat[12] = ((real_t)(elMat_1_2));
             _data_mat[13] = ((real_t)(elMat_1_3));
             _data_mat[14] = ((real_t)(elMat_1_4));
             _data_mat[15] = ((real_t)(elMat_1_5));
             _data_mat[16] = ((real_t)(elMat_1_6));
             _data_mat[17] = ((real_t)(elMat_1_7));
             _data_mat[18] = ((real_t)(elMat_1_8));
             _data_mat[19] = ((real_t)(elMat_1_9));
             _data_mat[20] = ((real_t)(elMat_2_0));
             _data_mat[21] = ((real_t)(elMat_2_1));
             _data_mat[22] = ((real_t)(elMat_2_2));
             _data_mat[23] = ((real_t)(elMat_2_3));
             _data_mat[24] = ((real_t)(elMat_2_4));
             _data_mat[25] = ((real_t)(elMat_2_5));
             _data_mat[26] = ((real_t)(elMat_2_6));
             _data_mat[27] = ((real_t)(elMat_2_7));
             _data_mat[28] = ((real_t)(elMat_2_8));
             _data_mat[29] = ((real_t)(elMat_2_9));
             _data_mat[30] = ((real_t)(elMat_3_0));
             _data_mat[31] = ((real_t)(elMat_3_1));
             _data_mat[32] = ((real_t)(elMat_3_2));
             _data_mat[33] = ((real_t)(elMat_3_3));
             _data_mat[34] = ((real_t)(elMat_3_4));
             _data_mat[35] = ((real_t)(elMat_3_5));
             _data_mat[36] = ((real_t)(elMat_3_6));
             _data_mat[37] = ((real_t)(elMat_3_7));
             _data_mat[38] = ((real_t)(elMat_3_8));
             _data_mat[39] = ((real_t)(elMat_3_9));
             _data_mat[40] = ((real_t)(elMat_4_0));
             _data_mat[41] = ((real_t)(elMat_4_1));
             _data_mat[42] = ((real_t)(elMat_4_2));
             _data_mat[43] = ((real_t)(elMat_4_3));
             _data_mat[44] = ((real_t)(elMat_4_4));
             _data_mat[45] = ((real_t)(elMat_4_5));
             _data_mat[46] = ((real_t)(elMat_4_6));
             _data_mat[47] = ((real_t)(elMat_4_7));
             _data_mat[48] = ((real_t)(elMat_4_8));
             _data_mat[49] = ((real_t)(elMat_4_9));
             _data_mat[50] = ((real_t)(elMat_5_0));
             _data_mat[51] = ((real_t)(elMat_5_1));
             _data_mat[52] = ((real_t)(elMat_5_2));
             _data_mat[53] = ((real_t)(elMat_5_3));
             _data_mat[54] = ((real_t)(elMat_5_4));
             _data_mat[55] = ((real_t)(elMat_5_5));
             _data_mat[56] = ((real_t)(elMat_5_6));
             _data_mat[57] = ((real_t)(elMat_5_7));
             _data_mat[58] = ((real_t)(elMat_5_8));
             _data_mat[59] = ((real_t)(elMat_5_9));
             _data_mat[60] = ((real_t)(elMat_6_0));
             _data_mat[61] = ((real_t)(elMat_6_1));
             _data_mat[62] = ((real_t)(elMat_6_2));
             _data_mat[63] = ((real_t)(elMat_6_3));
             _data_mat[64] = ((real_t)(elMat_6_4));
             _data_mat[65] = ((real_t)(elMat_6_5));
             _data_mat[66] = ((real_t)(elMat_6_6));
             _data_mat[67] = ((real_t)(elMat_6_7));
             _data_mat[68] = ((real_t)(elMat_6_8));
             _data_mat[69] = ((real_t)(elMat_6_9));
             _data_mat[70] = ((real_t)(elMat_7_0));
             _data_mat[71] = ((real_t)(elMat_7_1));
             _data_mat[72] = ((real_t)(elMat_7_2));
             _data_mat[73] = ((real_t)(elMat_7_3));
             _data_mat[74] = ((real_t)(elMat_7_4));
             _data_mat[75] = ((real_t)(elMat_7_5));
             _data_mat[76] = ((real_t)(elMat_7_6));
             _data_mat[77] = ((real_t)(elMat_7_7));
             _data_mat[78] = ((real_t)(elMat_7_8));
             _data_mat[79] = ((real_t)(elMat_7_9));
             _data_mat[80] = ((real_t)(elMat_8_0));
             _data_mat[81] = ((real_t)(elMat_8_1));
             _data_mat[82] = ((real_t)(elMat_8_2));
             _data_mat[83] = ((real_t)(elMat_8_3));
             _data_mat[84] = ((real_t)(elMat_8_4));
             _data_mat[85] = ((real_t)(elMat_8_5));
             _data_mat[86] = ((real_t)(elMat_8_6));
             _data_mat[87] = ((real_t)(elMat_8_7));
             _data_mat[88] = ((real_t)(elMat_8_8));
             _data_mat[89] = ((real_t)(elMat_8_9));
             _data_mat[90] = ((real_t)(elMat_9_0));
             _data_mat[91] = ((real_t)(elMat_9_1));
             _data_mat[92] = ((real_t)(elMat_9_2));
             _data_mat[93] = ((real_t)(elMat_9_3));
             _data_mat[94] = ((real_t)(elMat_9_4));
             _data_mat[95] = ((real_t)(elMat_9_5));
             _data_mat[96] = ((real_t)(elMat_9_6));
             _data_mat[97] = ((real_t)(elMat_9_7));
             _data_mat[98] = ((real_t)(elMat_9_8));
             _data_mat[99] = ((real_t)(elMat_9_9));
         
         
             mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4542*tmp_q_4;
                const double tmp_q_6 = Dummy_4545*tmp_q_4;
                const double tmp_q_7 = Dummy_4548*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4543*tmp_q_4;
                const double tmp_q_21 = Dummy_4546*tmp_q_4;
                const double tmp_q_22 = Dummy_4549*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4544*tmp_q_4;
                const double tmp_q_25 = Dummy_4547*tmp_q_4;
                const double tmp_q_26 = Dummy_4550*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4551*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4542*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4543*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4544*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4545*tmp_q_36;
                const double tmp_q_38 = Dummy_4546*tmp_q_36;
                const double tmp_q_39 = Dummy_4547*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4548*tmp_q_40;
                const double tmp_q_42 = Dummy_4549*tmp_q_40;
                const double tmp_q_43 = Dummy_4550*tmp_q_40;
                const double tmp_q_44 = Dummy_4545*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4548*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4546*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4549*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4547*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4550*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4542*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4548*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4543*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4549*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4544*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4550*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4542*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4545*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4543*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4546*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4544*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4547*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4548*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4549*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4550*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4545*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4546*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4547*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4542*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4543*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4544*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4548*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4549*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4550*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4545*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4546*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4547*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4542*Dummy_4542)*tmp_q_103 + (Dummy_4543*Dummy_4543)*tmp_q_103 + (Dummy_4544*Dummy_4544)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4545*Dummy_4545)*tmp_q_107 + (Dummy_4546*Dummy_4546)*tmp_q_107 + (Dummy_4547*Dummy_4547)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4548*Dummy_4548)*tmp_q_108 + (Dummy_4549*Dummy_4549)*tmp_q_108 + (Dummy_4550*Dummy_4550)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4543*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4544*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4542*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMat_0_0 = q_acc_0_0;
             const double elMat_0_1 = q_acc_0_1;
             const double elMat_0_2 = q_acc_0_2;
             const double elMat_0_3 = q_acc_0_3;
             const double elMat_0_4 = q_acc_0_4;
             const double elMat_0_5 = q_acc_0_5;
             const double elMat_0_6 = q_acc_0_6;
             const double elMat_0_7 = q_acc_0_7;
             const double elMat_0_8 = q_acc_0_8;
             const double elMat_0_9 = q_acc_0_9;
             const double elMat_1_0 = q_acc_1_0;
             const double elMat_1_1 = q_acc_1_1;
             const double elMat_1_2 = q_acc_1_2;
             const double elMat_1_3 = q_acc_1_3;
             const double elMat_1_4 = q_acc_1_4;
             const double elMat_1_5 = q_acc_1_5;
             const double elMat_1_6 = q_acc_1_6;
             const double elMat_1_7 = q_acc_1_7;
             const double elMat_1_8 = q_acc_1_8;
             const double elMat_1_9 = q_acc_1_9;
             const double elMat_2_0 = q_acc_2_0;
             const double elMat_2_1 = q_acc_2_1;
             const double elMat_2_2 = q_acc_2_2;
             const double elMat_2_3 = q_acc_2_3;
             const double elMat_2_4 = q_acc_2_4;
             const double elMat_2_5 = q_acc_2_5;
             const double elMat_2_6 = q_acc_2_6;
             const double elMat_2_7 = q_acc_2_7;
             const double elMat_2_8 = q_acc_2_8;
             const double elMat_2_9 = q_acc_2_9;
             const double elMat_3_0 = q_acc_3_0;
             const double elMat_3_1 = q_acc_3_1;
             const double elMat_3_2 = q_acc_3_2;
             const double elMat_3_3 = q_acc_3_3;
             const double elMat_3_4 = q_acc_3_4;
             const double elMat_3_5 = q_acc_3_5;
             const double elMat_3_6 = q_acc_3_6;
             const double elMat_3_7 = q_acc_3_7;
             const double elMat_3_8 = q_acc_3_8;
             const double elMat_3_9 = q_acc_3_9;
             const double elMat_4_0 = q_acc_4_0;
             const double elMat_4_1 = q_acc_4_1;
             const double elMat_4_2 = q_acc_4_2;
             const double elMat_4_3 = q_acc_4_3;
             const double elMat_4_4 = q_acc_4_4;
             const double elMat_4_5 = q_acc_4_5;
             const double elMat_4_6 = q_acc_4_6;
             const double elMat_4_7 = q_acc_4_7;
             const double elMat_4_8 = q_acc_4_8;
             const double elMat_4_9 = q_acc_4_9;
             const double elMat_5_0 = q_acc_5_0;
             const double elMat_5_1 = q_acc_5_1;
             const double elMat_5_2 = q_acc_5_2;
             const double elMat_5_3 = q_acc_5_3;
             const double elMat_5_4 = q_acc_5_4;
             const double elMat_5_5 = q_acc_5_5;
             const double elMat_5_6 = q_acc_5_6;
             const double elMat_5_7 = q_acc_5_7;
             const double elMat_5_8 = q_acc_5_8;
             const double elMat_5_9 = q_acc_5_9;
             const double elMat_6_0 = q_acc_6_0;
             const double elMat_6_1 = q_acc_6_1;
             const double elMat_6_2 = q_acc_6_2;
             const double elMat_6_3 = q_acc_6_3;
             const double elMat_6_4 = q_acc_6_4;
             const double elMat_6_5 = q_acc_6_5;
             const double elMat_6_6 = q_acc_6_6;
             const double elMat_6_7 = q_acc_6_7;
             const double elMat_6_8 = q_acc_6_8;
             const double elMat_6_9 = q_acc_6_9;
             const double elMat_7_0 = q_acc_7_0;
             const double elMat_7_1 = q_acc_7_1;
             const double elMat_7_2 = q_acc_7_2;
             const double elMat_7_3 = q_acc_7_3;
             const double elMat_7_4 = q_acc_7_4;
             const double elMat_7_5 = q_acc_7_5;
             const double elMat_7_6 = q_acc_7_6;
             const double elMat_7_7 = q_acc_7_7;
             const double elMat_7_8 = q_acc_7_8;
             const double elMat_7_9 = q_acc_7_9;
             const double elMat_8_0 = q_acc_8_0;
             const double elMat_8_1 = q_acc_8_1;
             const double elMat_8_2 = q_acc_8_2;
             const double elMat_8_3 = q_acc_8_3;
             const double elMat_8_4 = q_acc_8_4;
             const double elMat_8_5 = q_acc_8_5;
             const double elMat_8_6 = q_acc_8_6;
             const double elMat_8_7 = q_acc_8_7;
             const double elMat_8_8 = q_acc_8_8;
             const double elMat_8_9 = q_acc_8_9;
             const double elMat_9_0 = q_acc_9_0;
             const double elMat_9_1 = q_acc_9_1;
             const double elMat_9_2 = q_acc_9_2;
             const double elMat_9_3 = q_acc_9_3;
             const double elMat_9_4 = q_acc_9_4;
             const double elMat_9_5 = q_acc_9_5;
             const double elMat_9_6 = q_acc_9_6;
             const double elMat_9_7 = q_acc_9_7;
             const double elMat_9_8 = q_acc_9_8;
             const double elMat_9_9 = q_acc_9_9;
         
             std::vector< uint_t > _data_rowIdx( 10 );
             std::vector< uint_t > _data_colIdx( 10 );
             std::vector< real_t > _data_mat( 100 );
         
             _data_rowIdx[0] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[1] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[2] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[3] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[4] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[5] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[6] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[7] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_rowIdx[8] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[9] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[0] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[1] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[2] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[3] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[4] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[5] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[6] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[7] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[8] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[9] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
         
             /* Apply basis transformation */
         
         
         
             _data_mat[0] = ((real_t)(elMat_0_0));
             _data_mat[1] = ((real_t)(elMat_0_1));
             _data_mat[2] = ((real_t)(elMat_0_2));
             _data_mat[3] = ((real_t)(elMat_0_3));
             _data_mat[4] = ((real_t)(elMat_0_4));
             _data_mat[5] = ((real_t)(elMat_0_5));
             _data_mat[6] = ((real_t)(elMat_0_6));
             _data_mat[7] = ((real_t)(elMat_0_7));
             _data_mat[8] = ((real_t)(elMat_0_8));
             _data_mat[9] = ((real_t)(elMat_0_9));
             _data_mat[10] = ((real_t)(elMat_1_0));
             _data_mat[11] = ((real_t)(elMat_1_1));
             _data_mat[12] = ((real_t)(elMat_1_2));
             _data_mat[13] = ((real_t)(elMat_1_3));
             _data_mat[14] = ((real_t)(elMat_1_4));
             _data_mat[15] = ((real_t)(elMat_1_5));
             _data_mat[16] = ((real_t)(elMat_1_6));
             _data_mat[17] = ((real_t)(elMat_1_7));
             _data_mat[18] = ((real_t)(elMat_1_8));
             _data_mat[19] = ((real_t)(elMat_1_9));
             _data_mat[20] = ((real_t)(elMat_2_0));
             _data_mat[21] = ((real_t)(elMat_2_1));
             _data_mat[22] = ((real_t)(elMat_2_2));
             _data_mat[23] = ((real_t)(elMat_2_3));
             _data_mat[24] = ((real_t)(elMat_2_4));
             _data_mat[25] = ((real_t)(elMat_2_5));
             _data_mat[26] = ((real_t)(elMat_2_6));
             _data_mat[27] = ((real_t)(elMat_2_7));
             _data_mat[28] = ((real_t)(elMat_2_8));
             _data_mat[29] = ((real_t)(elMat_2_9));
             _data_mat[30] = ((real_t)(elMat_3_0));
             _data_mat[31] = ((real_t)(elMat_3_1));
             _data_mat[32] = ((real_t)(elMat_3_2));
             _data_mat[33] = ((real_t)(elMat_3_3));
             _data_mat[34] = ((real_t)(elMat_3_4));
             _data_mat[35] = ((real_t)(elMat_3_5));
             _data_mat[36] = ((real_t)(elMat_3_6));
             _data_mat[37] = ((real_t)(elMat_3_7));
             _data_mat[38] = ((real_t)(elMat_3_8));
             _data_mat[39] = ((real_t)(elMat_3_9));
             _data_mat[40] = ((real_t)(elMat_4_0));
             _data_mat[41] = ((real_t)(elMat_4_1));
             _data_mat[42] = ((real_t)(elMat_4_2));
             _data_mat[43] = ((real_t)(elMat_4_3));
             _data_mat[44] = ((real_t)(elMat_4_4));
             _data_mat[45] = ((real_t)(elMat_4_5));
             _data_mat[46] = ((real_t)(elMat_4_6));
             _data_mat[47] = ((real_t)(elMat_4_7));
             _data_mat[48] = ((real_t)(elMat_4_8));
             _data_mat[49] = ((real_t)(elMat_4_9));
             _data_mat[50] = ((real_t)(elMat_5_0));
             _data_mat[51] = ((real_t)(elMat_5_1));
             _data_mat[52] = ((real_t)(elMat_5_2));
             _data_mat[53] = ((real_t)(elMat_5_3));
             _data_mat[54] = ((real_t)(elMat_5_4));
             _data_mat[55] = ((real_t)(elMat_5_5));
             _data_mat[56] = ((real_t)(elMat_5_6));
             _data_mat[57] = ((real_t)(elMat_5_7));
             _data_mat[58] = ((real_t)(elMat_5_8));
             _data_mat[59] = ((real_t)(elMat_5_9));
             _data_mat[60] = ((real_t)(elMat_6_0));
             _data_mat[61] = ((real_t)(elMat_6_1));
             _data_mat[62] = ((real_t)(elMat_6_2));
             _data_mat[63] = ((real_t)(elMat_6_3));
             _data_mat[64] = ((real_t)(elMat_6_4));
             _data_mat[65] = ((real_t)(elMat_6_5));
             _data_mat[66] = ((real_t)(elMat_6_6));
             _data_mat[67] = ((real_t)(elMat_6_7));
             _data_mat[68] = ((real_t)(elMat_6_8));
             _data_mat[69] = ((real_t)(elMat_6_9));
             _data_mat[70] = ((real_t)(elMat_7_0));
             _data_mat[71] = ((real_t)(elMat_7_1));
             _data_mat[72] = ((real_t)(elMat_7_2));
             _data_mat[73] = ((real_t)(elMat_7_3));
             _data_mat[74] = ((real_t)(elMat_7_4));
             _data_mat[75] = ((real_t)(elMat_7_5));
             _data_mat[76] = ((real_t)(elMat_7_6));
             _data_mat[77] = ((real_t)(elMat_7_7));
             _data_mat[78] = ((real_t)(elMat_7_8));
             _data_mat[79] = ((real_t)(elMat_7_9));
             _data_mat[80] = ((real_t)(elMat_8_0));
             _data_mat[81] = ((real_t)(elMat_8_1));
             _data_mat[82] = ((real_t)(elMat_8_2));
             _data_mat[83] = ((real_t)(elMat_8_3));
             _data_mat[84] = ((real_t)(elMat_8_4));
             _data_mat[85] = ((real_t)(elMat_8_5));
             _data_mat[86] = ((real_t)(elMat_8_6));
             _data_mat[87] = ((real_t)(elMat_8_7));
             _data_mat[88] = ((real_t)(elMat_8_8));
             _data_mat[89] = ((real_t)(elMat_8_9));
             _data_mat[90] = ((real_t)(elMat_9_0));
             _data_mat[91] = ((real_t)(elMat_9_1));
             _data_mat[92] = ((real_t)(elMat_9_2));
             _data_mat[93] = ((real_t)(elMat_9_3));
             _data_mat[94] = ((real_t)(elMat_9_4));
             _data_mat[95] = ((real_t)(elMat_9_5));
             _data_mat[96] = ((real_t)(elMat_9_6));
             _data_mat[97] = ((real_t)(elMat_9_7));
             _data_mat[98] = ((real_t)(elMat_9_8));
             _data_mat[99] = ((real_t)(elMat_9_9));
         
         
             mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double k_dof_5 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4573*tmp_q_4;
                const double tmp_q_6 = Dummy_4576*tmp_q_4;
                const double tmp_q_7 = Dummy_4579*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4574*tmp_q_4;
                const double tmp_q_21 = Dummy_4577*tmp_q_4;
                const double tmp_q_22 = Dummy_4580*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4575*tmp_q_4;
                const double tmp_q_25 = Dummy_4578*tmp_q_4;
                const double tmp_q_26 = Dummy_4581*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4582*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4573*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4574*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4575*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4576*tmp_q_36;
                const double tmp_q_38 = Dummy_4577*tmp_q_36;
                const double tmp_q_39 = Dummy_4578*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4579*tmp_q_40;
                const double tmp_q_42 = Dummy_4580*tmp_q_40;
                const double tmp_q_43 = Dummy_4581*tmp_q_40;
                const double tmp_q_44 = Dummy_4576*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4579*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4577*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4580*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4578*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4581*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4573*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4579*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4574*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4580*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4575*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4581*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4573*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4576*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4574*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4577*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4575*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4578*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4579*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4580*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4581*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4576*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4577*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4578*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4573*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4574*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4575*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4579*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4580*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4581*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4576*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4577*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4578*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4573*Dummy_4573)*tmp_q_103 + (Dummy_4574*Dummy_4574)*tmp_q_103 + (Dummy_4575*Dummy_4575)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4576*Dummy_4576)*tmp_q_107 + (Dummy_4577*Dummy_4577)*tmp_q_107 + (Dummy_4578*Dummy_4578)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4579*Dummy_4579)*tmp_q_108 + (Dummy_4580*Dummy_4580)*tmp_q_108 + (Dummy_4581*Dummy_4581)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4574*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4575*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4573*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMat_0_0 = q_acc_0_0;
             const double elMat_0_1 = q_acc_0_1;
             const double elMat_0_2 = q_acc_0_2;
             const double elMat_0_3 = q_acc_0_3;
             const double elMat_0_4 = q_acc_0_4;
             const double elMat_0_5 = q_acc_0_5;
             const double elMat_0_6 = q_acc_0_6;
             const double elMat_0_7 = q_acc_0_7;
             const double elMat_0_8 = q_acc_0_8;
             const double elMat_0_9 = q_acc_0_9;
             const double elMat_1_0 = q_acc_1_0;
             const double elMat_1_1 = q_acc_1_1;
             const double elMat_1_2 = q_acc_1_2;
             const double elMat_1_3 = q_acc_1_3;
             const double elMat_1_4 = q_acc_1_4;
             const double elMat_1_5 = q_acc_1_5;
             const double elMat_1_6 = q_acc_1_6;
             const double elMat_1_7 = q_acc_1_7;
             const double elMat_1_8 = q_acc_1_8;
             const double elMat_1_9 = q_acc_1_9;
             const double elMat_2_0 = q_acc_2_0;
             const double elMat_2_1 = q_acc_2_1;
             const double elMat_2_2 = q_acc_2_2;
             const double elMat_2_3 = q_acc_2_3;
             const double elMat_2_4 = q_acc_2_4;
             const double elMat_2_5 = q_acc_2_5;
             const double elMat_2_6 = q_acc_2_6;
             const double elMat_2_7 = q_acc_2_7;
             const double elMat_2_8 = q_acc_2_8;
             const double elMat_2_9 = q_acc_2_9;
             const double elMat_3_0 = q_acc_3_0;
             const double elMat_3_1 = q_acc_3_1;
             const double elMat_3_2 = q_acc_3_2;
             const double elMat_3_3 = q_acc_3_3;
             const double elMat_3_4 = q_acc_3_4;
             const double elMat_3_5 = q_acc_3_5;
             const double elMat_3_6 = q_acc_3_6;
             const double elMat_3_7 = q_acc_3_7;
             const double elMat_3_8 = q_acc_3_8;
             const double elMat_3_9 = q_acc_3_9;
             const double elMat_4_0 = q_acc_4_0;
             const double elMat_4_1 = q_acc_4_1;
             const double elMat_4_2 = q_acc_4_2;
             const double elMat_4_3 = q_acc_4_3;
             const double elMat_4_4 = q_acc_4_4;
             const double elMat_4_5 = q_acc_4_5;
             const double elMat_4_6 = q_acc_4_6;
             const double elMat_4_7 = q_acc_4_7;
             const double elMat_4_8 = q_acc_4_8;
             const double elMat_4_9 = q_acc_4_9;
             const double elMat_5_0 = q_acc_5_0;
             const double elMat_5_1 = q_acc_5_1;
             const double elMat_5_2 = q_acc_5_2;
             const double elMat_5_3 = q_acc_5_3;
             const double elMat_5_4 = q_acc_5_4;
             const double elMat_5_5 = q_acc_5_5;
             const double elMat_5_6 = q_acc_5_6;
             const double elMat_5_7 = q_acc_5_7;
             const double elMat_5_8 = q_acc_5_8;
             const double elMat_5_9 = q_acc_5_9;
             const double elMat_6_0 = q_acc_6_0;
             const double elMat_6_1 = q_acc_6_1;
             const double elMat_6_2 = q_acc_6_2;
             const double elMat_6_3 = q_acc_6_3;
             const double elMat_6_4 = q_acc_6_4;
             const double elMat_6_5 = q_acc_6_5;
             const double elMat_6_6 = q_acc_6_6;
             const double elMat_6_7 = q_acc_6_7;
             const double elMat_6_8 = q_acc_6_8;
             const double elMat_6_9 = q_acc_6_9;
             const double elMat_7_0 = q_acc_7_0;
             const double elMat_7_1 = q_acc_7_1;
             const double elMat_7_2 = q_acc_7_2;
             const double elMat_7_3 = q_acc_7_3;
             const double elMat_7_4 = q_acc_7_4;
             const double elMat_7_5 = q_acc_7_5;
             const double elMat_7_6 = q_acc_7_6;
             const double elMat_7_7 = q_acc_7_7;
             const double elMat_7_8 = q_acc_7_8;
             const double elMat_7_9 = q_acc_7_9;
             const double elMat_8_0 = q_acc_8_0;
             const double elMat_8_1 = q_acc_8_1;
             const double elMat_8_2 = q_acc_8_2;
             const double elMat_8_3 = q_acc_8_3;
             const double elMat_8_4 = q_acc_8_4;
             const double elMat_8_5 = q_acc_8_5;
             const double elMat_8_6 = q_acc_8_6;
             const double elMat_8_7 = q_acc_8_7;
             const double elMat_8_8 = q_acc_8_8;
             const double elMat_8_9 = q_acc_8_9;
             const double elMat_9_0 = q_acc_9_0;
             const double elMat_9_1 = q_acc_9_1;
             const double elMat_9_2 = q_acc_9_2;
             const double elMat_9_3 = q_acc_9_3;
             const double elMat_9_4 = q_acc_9_4;
             const double elMat_9_5 = q_acc_9_5;
             const double elMat_9_6 = q_acc_9_6;
             const double elMat_9_7 = q_acc_9_7;
             const double elMat_9_8 = q_acc_9_8;
             const double elMat_9_9 = q_acc_9_9;
         
             std::vector< uint_t > _data_rowIdx( 10 );
             std::vector< uint_t > _data_colIdx( 10 );
             std::vector< real_t > _data_mat( 100 );
         
             _data_rowIdx[0] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[1] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[2] = ((uint64_t)(_data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_rowIdx[3] = ((uint64_t)(_data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_rowIdx[4] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[5] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[6] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_rowIdx[7] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_rowIdx[8] = ((uint64_t)(_data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_rowIdx[9] = ((uint64_t)(_data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[0] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[1] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[2] = ((uint64_t)(_data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1]));
             _data_colIdx[3] = ((uint64_t)(_data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))]));
             _data_colIdx[4] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[5] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[6] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1]));
             _data_colIdx[7] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
             _data_colIdx[8] = ((uint64_t)(_data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))]));
             _data_colIdx[9] = ((uint64_t)(_data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))]));
         
             /* Apply basis transformation */
         
         
         
             _data_mat[0] = ((real_t)(elMat_0_0));
             _data_mat[1] = ((real_t)(elMat_0_1));
             _data_mat[2] = ((real_t)(elMat_0_2));
             _data_mat[3] = ((real_t)(elMat_0_3));
             _data_mat[4] = ((real_t)(elMat_0_4));
             _data_mat[5] = ((real_t)(elMat_0_5));
             _data_mat[6] = ((real_t)(elMat_0_6));
             _data_mat[7] = ((real_t)(elMat_0_7));
             _data_mat[8] = ((real_t)(elMat_0_8));
             _data_mat[9] = ((real_t)(elMat_0_9));
             _data_mat[10] = ((real_t)(elMat_1_0));
             _data_mat[11] = ((real_t)(elMat_1_1));
             _data_mat[12] = ((real_t)(elMat_1_2));
             _data_mat[13] = ((real_t)(elMat_1_3));
             _data_mat[14] = ((real_t)(elMat_1_4));
             _data_mat[15] = ((real_t)(elMat_1_5));
             _data_mat[16] = ((real_t)(elMat_1_6));
             _data_mat[17] = ((real_t)(elMat_1_7));
             _data_mat[18] = ((real_t)(elMat_1_8));
             _data_mat[19] = ((real_t)(elMat_1_9));
             _data_mat[20] = ((real_t)(elMat_2_0));
             _data_mat[21] = ((real_t)(elMat_2_1));
             _data_mat[22] = ((real_t)(elMat_2_2));
             _data_mat[23] = ((real_t)(elMat_2_3));
             _data_mat[24] = ((real_t)(elMat_2_4));
             _data_mat[25] = ((real_t)(elMat_2_5));
             _data_mat[26] = ((real_t)(elMat_2_6));
             _data_mat[27] = ((real_t)(elMat_2_7));
             _data_mat[28] = ((real_t)(elMat_2_8));
             _data_mat[29] = ((real_t)(elMat_2_9));
             _data_mat[30] = ((real_t)(elMat_3_0));
             _data_mat[31] = ((real_t)(elMat_3_1));
             _data_mat[32] = ((real_t)(elMat_3_2));
             _data_mat[33] = ((real_t)(elMat_3_3));
             _data_mat[34] = ((real_t)(elMat_3_4));
             _data_mat[35] = ((real_t)(elMat_3_5));
             _data_mat[36] = ((real_t)(elMat_3_6));
             _data_mat[37] = ((real_t)(elMat_3_7));
             _data_mat[38] = ((real_t)(elMat_3_8));
             _data_mat[39] = ((real_t)(elMat_3_9));
             _data_mat[40] = ((real_t)(elMat_4_0));
             _data_mat[41] = ((real_t)(elMat_4_1));
             _data_mat[42] = ((real_t)(elMat_4_2));
             _data_mat[43] = ((real_t)(elMat_4_3));
             _data_mat[44] = ((real_t)(elMat_4_4));
             _data_mat[45] = ((real_t)(elMat_4_5));
             _data_mat[46] = ((real_t)(elMat_4_6));
             _data_mat[47] = ((real_t)(elMat_4_7));
             _data_mat[48] = ((real_t)(elMat_4_8));
             _data_mat[49] = ((real_t)(elMat_4_9));
             _data_mat[50] = ((real_t)(elMat_5_0));
             _data_mat[51] = ((real_t)(elMat_5_1));
             _data_mat[52] = ((real_t)(elMat_5_2));
             _data_mat[53] = ((real_t)(elMat_5_3));
             _data_mat[54] = ((real_t)(elMat_5_4));
             _data_mat[55] = ((real_t)(elMat_5_5));
             _data_mat[56] = ((real_t)(elMat_5_6));
             _data_mat[57] = ((real_t)(elMat_5_7));
             _data_mat[58] = ((real_t)(elMat_5_8));
             _data_mat[59] = ((real_t)(elMat_5_9));
             _data_mat[60] = ((real_t)(elMat_6_0));
             _data_mat[61] = ((real_t)(elMat_6_1));
             _data_mat[62] = ((real_t)(elMat_6_2));
             _data_mat[63] = ((real_t)(elMat_6_3));
             _data_mat[64] = ((real_t)(elMat_6_4));
             _data_mat[65] = ((real_t)(elMat_6_5));
             _data_mat[66] = ((real_t)(elMat_6_6));
             _data_mat[67] = ((real_t)(elMat_6_7));
             _data_mat[68] = ((real_t)(elMat_6_8));
             _data_mat[69] = ((real_t)(elMat_6_9));
             _data_mat[70] = ((real_t)(elMat_7_0));
             _data_mat[71] = ((real_t)(elMat_7_1));
             _data_mat[72] = ((real_t)(elMat_7_2));
             _data_mat[73] = ((real_t)(elMat_7_3));
             _data_mat[74] = ((real_t)(elMat_7_4));
             _data_mat[75] = ((real_t)(elMat_7_5));
             _data_mat[76] = ((real_t)(elMat_7_6));
             _data_mat[77] = ((real_t)(elMat_7_7));
             _data_mat[78] = ((real_t)(elMat_7_8));
             _data_mat[79] = ((real_t)(elMat_7_9));
             _data_mat[80] = ((real_t)(elMat_8_0));
             _data_mat[81] = ((real_t)(elMat_8_1));
             _data_mat[82] = ((real_t)(elMat_8_2));
             _data_mat[83] = ((real_t)(elMat_8_3));
             _data_mat[84] = ((real_t)(elMat_8_4));
             _data_mat[85] = ((real_t)(elMat_8_5));
             _data_mat[86] = ((real_t)(elMat_8_6));
             _data_mat[87] = ((real_t)(elMat_8_7));
             _data_mat[88] = ((real_t)(elMat_8_8));
             _data_mat[89] = ((real_t)(elMat_8_9));
             _data_mat[90] = ((real_t)(elMat_9_0));
             _data_mat[91] = ((real_t)(elMat_9_1));
             _data_mat[92] = ((real_t)(elMat_9_2));
             _data_mat[93] = ((real_t)(elMat_9_3));
             _data_mat[94] = ((real_t)(elMat_9_4));
             _data_mat[95] = ((real_t)(elMat_9_5));
             _data_mat[96] = ((real_t)(elMat_9_6));
             _data_mat[97] = ((real_t)(elMat_9_7));
             _data_mat[98] = ((real_t)(elMat_9_8));
             _data_mat[99] = ((real_t)(elMat_9_9));
         
         
             mat->addValues( _data_rowIdx, _data_colIdx, _data_mat );
          }
       }
    }
}
} // namespace operatorgeneration

} // namespace hyteg
