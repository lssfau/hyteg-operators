/*
* Copyright (c) 2017-2023 Nils Kohl, Daniel Bauer, Fabian BÃ¶hm.
*
* This file is part of HyTeG
* (see https://i10git.cs.fau.de/hyteg/hyteg).
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/

/*
* The entire file was generated with the HyTeG form generator.
*
* Avoid modifying this file. If buggy, consider fixing the generator itself.
*/























#include "../P2ElementwiseDivKGrad.hpp"

#define FUNC_PREFIX  

namespace hyteg {

namespace operatorgeneration {

void P2ElementwiseDivKGrad::apply_macro_3D( double * RESTRICT  _data_dstEdge, double * RESTRICT  _data_dstVertex, double * RESTRICT  _data_kEdge, double * RESTRICT  _data_kVertex, double * RESTRICT  _data_srcEdge, double * RESTRICT  _data_srcVertex, double macro_vertex_coord_id_0comp0, double macro_vertex_coord_id_0comp1, double macro_vertex_coord_id_0comp2, double macro_vertex_coord_id_1comp0, double macro_vertex_coord_id_1comp1, double macro_vertex_coord_id_1comp2, double macro_vertex_coord_id_2comp0, double macro_vertex_coord_id_2comp1, double macro_vertex_coord_id_2comp2, double macro_vertex_coord_id_3comp0, double macro_vertex_coord_id_3comp1, double macro_vertex_coord_id_3comp2, int64_t micro_edges_per_macro_edge, double micro_edges_per_macro_edge_float ) const
{
    {
       const double _data_q_w [] = {0.050086823222829389, 0.046462929447761279, 0.05318232258357912, 0.016934591412496786};
   
       const double _data_q_p_0 [] = {0.18002969351036546, 0.15593312049918584, 0.21607642918484793, 0.82157254096761967};
   
       const double _data_q_p_1 [] = {0.36531451881463461, 0.45746158708559559, 0.00037551502872928966, 0.12366680032845823};
   
       const double _data_q_p_2 [] = {0.0069232355736274509, 0.3817653560693467, 0.43070170707783589, 0.039933048641498381};
   
       const double p_affine_0_0 = macro_vertex_coord_id_0comp0;
       const double p_affine_0_1 = macro_vertex_coord_id_0comp1;
       const double p_affine_0_2 = macro_vertex_coord_id_0comp2;
       const double p_affine_1_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double p_affine_1_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double p_affine_1_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double p_affine_2_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double p_affine_2_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double p_affine_2_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double p_affine_3_0 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double p_affine_3_1 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double p_affine_3_2 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double jac_affine_0_0 = -p_affine_0_0 + p_affine_1_0;
       const double jac_affine_0_1 = -p_affine_0_0 + p_affine_2_0;
       const double jac_affine_0_2 = -p_affine_0_0 + p_affine_3_0;
       const double jac_affine_1_0 = -p_affine_0_1 + p_affine_1_1;
       const double jac_affine_1_1 = -p_affine_0_1 + p_affine_2_1;
       const double jac_affine_1_2 = -p_affine_0_1 + p_affine_3_1;
       const double jac_affine_2_0 = -p_affine_0_2 + p_affine_1_2;
       const double jac_affine_2_1 = -p_affine_0_2 + p_affine_2_2;
       const double jac_affine_2_2 = -p_affine_0_2 + p_affine_3_2;
       const double jac_affine_inv_0_0 = (jac_affine_1_1*jac_affine_2_2 - jac_affine_1_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_1 = (-jac_affine_0_1*jac_affine_2_2 + jac_affine_0_2*jac_affine_2_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_0_2 = (jac_affine_0_1*jac_affine_1_2 - jac_affine_0_2*jac_affine_1_1)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_0 = (-jac_affine_1_0*jac_affine_2_2 + jac_affine_1_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_1 = (jac_affine_0_0*jac_affine_2_2 - jac_affine_0_2*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_1_2 = (-jac_affine_0_0*jac_affine_1_2 + jac_affine_0_2*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_0 = (jac_affine_1_0*jac_affine_2_1 - jac_affine_1_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_1 = (-jac_affine_0_0*jac_affine_2_1 + jac_affine_0_1*jac_affine_2_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double jac_affine_inv_2_2 = (jac_affine_0_0*jac_affine_1_1 - jac_affine_0_1*jac_affine_1_0)*1.0 / (jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double abs_det_jac_affine = fabs(jac_affine_0_0*jac_affine_1_1*jac_affine_2_2 - jac_affine_0_0*jac_affine_1_2*jac_affine_2_1 - jac_affine_0_1*jac_affine_1_0*jac_affine_2_2 + jac_affine_0_1*jac_affine_1_2*jac_affine_2_0 + jac_affine_0_2*jac_affine_1_0*jac_affine_2_1 - jac_affine_0_2*jac_affine_1_1*jac_affine_2_0);
       const double Dummy_4141 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4142 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4143 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4144 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4145 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4146 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4147 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4148 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4149 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4150 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4151 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4152 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4153 = -Dummy_4141 + Dummy_4144;
       const double Dummy_4154 = -Dummy_4141 + Dummy_4147;
       const double Dummy_4155 = -Dummy_4141 + Dummy_4150;
       const double Dummy_4156 = -Dummy_4142 + Dummy_4145;
       const double Dummy_4157 = -Dummy_4142 + Dummy_4148;
       const double Dummy_4158 = -Dummy_4142 + Dummy_4151;
       const double Dummy_4159 = -Dummy_4143 + Dummy_4146;
       const double Dummy_4160 = -Dummy_4143 + Dummy_4149;
       const double Dummy_4161 = -Dummy_4143 + Dummy_4152;
       const double Dummy_4162 = (Dummy_4157*Dummy_4161 - Dummy_4158*Dummy_4160)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4163 = (-Dummy_4154*Dummy_4161 + Dummy_4155*Dummy_4160)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4164 = (Dummy_4154*Dummy_4158 - Dummy_4155*Dummy_4157)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4165 = (-Dummy_4156*Dummy_4161 + Dummy_4158*Dummy_4159)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4166 = (Dummy_4153*Dummy_4161 - Dummy_4155*Dummy_4159)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4167 = (-Dummy_4153*Dummy_4158 + Dummy_4155*Dummy_4156)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4168 = (Dummy_4156*Dummy_4160 - Dummy_4157*Dummy_4159)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4169 = (-Dummy_4153*Dummy_4160 + Dummy_4154*Dummy_4159)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4170 = (Dummy_4153*Dummy_4157 - Dummy_4154*Dummy_4156)*1.0 / (Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4171 = fabs(Dummy_4153*Dummy_4157*Dummy_4161 - Dummy_4153*Dummy_4158*Dummy_4160 - Dummy_4154*Dummy_4156*Dummy_4161 + Dummy_4154*Dummy_4158*Dummy_4159 + Dummy_4155*Dummy_4156*Dummy_4160 - Dummy_4155*Dummy_4157*Dummy_4159);
       const double Dummy_4172 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4173 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4174 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4175 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4176 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4177 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4178 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4179 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4180 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4181 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4182 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4183 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4184 = -Dummy_4172 + Dummy_4175;
       const double Dummy_4185 = -Dummy_4172 + Dummy_4178;
       const double Dummy_4186 = -Dummy_4172 + Dummy_4181;
       const double Dummy_4187 = -Dummy_4173 + Dummy_4176;
       const double Dummy_4188 = -Dummy_4173 + Dummy_4179;
       const double Dummy_4189 = -Dummy_4173 + Dummy_4182;
       const double Dummy_4190 = -Dummy_4174 + Dummy_4177;
       const double Dummy_4191 = -Dummy_4174 + Dummy_4180;
       const double Dummy_4192 = -Dummy_4174 + Dummy_4183;
       const double Dummy_4193 = (Dummy_4188*Dummy_4192 - Dummy_4189*Dummy_4191)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4194 = (-Dummy_4185*Dummy_4192 + Dummy_4186*Dummy_4191)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4195 = (Dummy_4185*Dummy_4189 - Dummy_4186*Dummy_4188)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4196 = (-Dummy_4187*Dummy_4192 + Dummy_4189*Dummy_4190)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4197 = (Dummy_4184*Dummy_4192 - Dummy_4186*Dummy_4190)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4198 = (-Dummy_4184*Dummy_4189 + Dummy_4186*Dummy_4187)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4199 = (Dummy_4187*Dummy_4191 - Dummy_4188*Dummy_4190)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4200 = (-Dummy_4184*Dummy_4191 + Dummy_4185*Dummy_4190)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4201 = (Dummy_4184*Dummy_4188 - Dummy_4185*Dummy_4187)*1.0 / (Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4202 = fabs(Dummy_4184*Dummy_4188*Dummy_4192 - Dummy_4184*Dummy_4189*Dummy_4191 - Dummy_4185*Dummy_4187*Dummy_4192 + Dummy_4185*Dummy_4189*Dummy_4190 + Dummy_4186*Dummy_4187*Dummy_4191 - Dummy_4186*Dummy_4188*Dummy_4190);
       const double Dummy_4203 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4204 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4205 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4206 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4207 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4208 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4209 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4210 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4211 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4212 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4213 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4214 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4215 = -Dummy_4203 + Dummy_4206;
       const double Dummy_4216 = -Dummy_4203 + Dummy_4209;
       const double Dummy_4217 = -Dummy_4203 + Dummy_4212;
       const double Dummy_4218 = -Dummy_4204 + Dummy_4207;
       const double Dummy_4219 = -Dummy_4204 + Dummy_4210;
       const double Dummy_4220 = -Dummy_4204 + Dummy_4213;
       const double Dummy_4221 = -Dummy_4205 + Dummy_4208;
       const double Dummy_4222 = -Dummy_4205 + Dummy_4211;
       const double Dummy_4223 = -Dummy_4205 + Dummy_4214;
       const double Dummy_4224 = (Dummy_4219*Dummy_4223 - Dummy_4220*Dummy_4222)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4225 = (-Dummy_4216*Dummy_4223 + Dummy_4217*Dummy_4222)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4226 = (Dummy_4216*Dummy_4220 - Dummy_4217*Dummy_4219)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4227 = (-Dummy_4218*Dummy_4223 + Dummy_4220*Dummy_4221)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4228 = (Dummy_4215*Dummy_4223 - Dummy_4217*Dummy_4221)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4229 = (-Dummy_4215*Dummy_4220 + Dummy_4217*Dummy_4218)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4230 = (Dummy_4218*Dummy_4222 - Dummy_4219*Dummy_4221)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4231 = (-Dummy_4215*Dummy_4222 + Dummy_4216*Dummy_4221)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4232 = (Dummy_4215*Dummy_4219 - Dummy_4216*Dummy_4218)*1.0 / (Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4233 = fabs(Dummy_4215*Dummy_4219*Dummy_4223 - Dummy_4215*Dummy_4220*Dummy_4222 - Dummy_4216*Dummy_4218*Dummy_4223 + Dummy_4216*Dummy_4220*Dummy_4221 + Dummy_4217*Dummy_4218*Dummy_4222 - Dummy_4217*Dummy_4219*Dummy_4221);
       const double Dummy_4234 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0;
       const double Dummy_4235 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0;
       const double Dummy_4236 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0;
       const double Dummy_4237 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4238 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4239 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4240 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4241 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4242 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4243 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4244 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4245 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4246 = -Dummy_4234 + Dummy_4237;
       const double Dummy_4247 = -Dummy_4234 + Dummy_4240;
       const double Dummy_4248 = -Dummy_4234 + Dummy_4243;
       const double Dummy_4249 = -Dummy_4235 + Dummy_4238;
       const double Dummy_4250 = -Dummy_4235 + Dummy_4241;
       const double Dummy_4251 = -Dummy_4235 + Dummy_4244;
       const double Dummy_4252 = -Dummy_4236 + Dummy_4239;
       const double Dummy_4253 = -Dummy_4236 + Dummy_4242;
       const double Dummy_4254 = -Dummy_4236 + Dummy_4245;
       const double Dummy_4255 = (Dummy_4250*Dummy_4254 - Dummy_4251*Dummy_4253)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4256 = (-Dummy_4247*Dummy_4254 + Dummy_4248*Dummy_4253)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4257 = (Dummy_4247*Dummy_4251 - Dummy_4248*Dummy_4250)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4258 = (-Dummy_4249*Dummy_4254 + Dummy_4251*Dummy_4252)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4259 = (Dummy_4246*Dummy_4254 - Dummy_4248*Dummy_4252)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4260 = (-Dummy_4246*Dummy_4251 + Dummy_4248*Dummy_4249)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4261 = (Dummy_4249*Dummy_4253 - Dummy_4250*Dummy_4252)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4262 = (-Dummy_4246*Dummy_4253 + Dummy_4247*Dummy_4252)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4263 = (Dummy_4246*Dummy_4250 - Dummy_4247*Dummy_4249)*1.0 / (Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4264 = fabs(Dummy_4246*Dummy_4250*Dummy_4254 - Dummy_4246*Dummy_4251*Dummy_4253 - Dummy_4247*Dummy_4249*Dummy_4254 + Dummy_4247*Dummy_4251*Dummy_4252 + Dummy_4248*Dummy_4249*Dummy_4253 - Dummy_4248*Dummy_4250*Dummy_4252);
       const double Dummy_4265 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4266 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4267 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4268 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0;
       const double Dummy_4269 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0;
       const double Dummy_4270 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0;
       const double Dummy_4271 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_1comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4272 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_1comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4273 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_1comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4274 = macro_vertex_coord_id_0comp0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_2comp0)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp0 + macro_vertex_coord_id_3comp0)*1.0;
       const double Dummy_4275 = macro_vertex_coord_id_0comp1 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_2comp1)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp1 + macro_vertex_coord_id_3comp1)*1.0;
       const double Dummy_4276 = macro_vertex_coord_id_0comp2 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_2comp2)*1.0 + 1.0 / (micro_edges_per_macro_edge_float)*(-macro_vertex_coord_id_0comp2 + macro_vertex_coord_id_3comp2)*1.0;
       const double Dummy_4277 = -Dummy_4265 + Dummy_4268;
       const double Dummy_4278 = -Dummy_4265 + Dummy_4271;
       const double Dummy_4279 = -Dummy_4265 + Dummy_4274;
       const double Dummy_4280 = -Dummy_4266 + Dummy_4269;
       const double Dummy_4281 = -Dummy_4266 + Dummy_4272;
       const double Dummy_4282 = -Dummy_4266 + Dummy_4275;
       const double Dummy_4283 = -Dummy_4267 + Dummy_4270;
       const double Dummy_4284 = -Dummy_4267 + Dummy_4273;
       const double Dummy_4285 = -Dummy_4267 + Dummy_4276;
       const double Dummy_4286 = (Dummy_4281*Dummy_4285 - Dummy_4282*Dummy_4284)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4287 = (-Dummy_4278*Dummy_4285 + Dummy_4279*Dummy_4284)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4288 = (Dummy_4278*Dummy_4282 - Dummy_4279*Dummy_4281)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4289 = (-Dummy_4280*Dummy_4285 + Dummy_4282*Dummy_4283)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4290 = (Dummy_4277*Dummy_4285 - Dummy_4279*Dummy_4283)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4291 = (-Dummy_4277*Dummy_4282 + Dummy_4279*Dummy_4280)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4292 = (Dummy_4280*Dummy_4284 - Dummy_4281*Dummy_4283)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4293 = (-Dummy_4277*Dummy_4284 + Dummy_4278*Dummy_4283)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4294 = (Dummy_4277*Dummy_4281 - Dummy_4278*Dummy_4280)*1.0 / (Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       const double Dummy_4295 = fabs(Dummy_4277*Dummy_4281*Dummy_4285 - Dummy_4277*Dummy_4282*Dummy_4284 - Dummy_4278*Dummy_4280*Dummy_4285 + Dummy_4278*Dummy_4282*Dummy_4283 + Dummy_4279*Dummy_4280*Dummy_4284 - Dummy_4279*Dummy_4281*Dummy_4283);
       {
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge; ctr_0 += 1)
          {
             const double src_dof_0 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_1 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_2 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_3 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_7 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = jac_affine_inv_0_0*tmp_q_4;
                const double tmp_q_6 = jac_affine_inv_1_0*tmp_q_4;
                const double tmp_q_7 = jac_affine_inv_2_0*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = jac_affine_inv_0_1*tmp_q_4;
                const double tmp_q_21 = jac_affine_inv_1_1*tmp_q_4;
                const double tmp_q_22 = jac_affine_inv_2_1*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = jac_affine_inv_0_2*tmp_q_4;
                const double tmp_q_25 = jac_affine_inv_1_2*tmp_q_4;
                const double tmp_q_26 = jac_affine_inv_2_2*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = abs_det_jac_affine*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = jac_affine_inv_0_0*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = jac_affine_inv_0_1*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = jac_affine_inv_0_2*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = jac_affine_inv_1_0*tmp_q_36;
                const double tmp_q_38 = jac_affine_inv_1_1*tmp_q_36;
                const double tmp_q_39 = jac_affine_inv_1_2*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = jac_affine_inv_2_0*tmp_q_40;
                const double tmp_q_42 = jac_affine_inv_2_1*tmp_q_40;
                const double tmp_q_43 = jac_affine_inv_2_2*tmp_q_40;
                const double tmp_q_44 = jac_affine_inv_1_0*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = jac_affine_inv_2_0*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = jac_affine_inv_1_1*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = jac_affine_inv_2_1*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = jac_affine_inv_1_2*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = jac_affine_inv_2_2*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = jac_affine_inv_0_0*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = jac_affine_inv_2_0*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = jac_affine_inv_0_1*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = jac_affine_inv_2_1*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = jac_affine_inv_0_2*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = jac_affine_inv_2_2*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = jac_affine_inv_0_0*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = jac_affine_inv_1_0*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = jac_affine_inv_0_1*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = jac_affine_inv_1_1*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = jac_affine_inv_0_2*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = jac_affine_inv_1_2*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = jac_affine_inv_2_0*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = jac_affine_inv_2_1*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = jac_affine_inv_2_2*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = jac_affine_inv_1_0*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = jac_affine_inv_1_1*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = jac_affine_inv_1_2*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = jac_affine_inv_0_0*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = jac_affine_inv_0_1*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = jac_affine_inv_0_2*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = jac_affine_inv_2_0*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = jac_affine_inv_2_1*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = jac_affine_inv_2_2*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = jac_affine_inv_1_0*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = jac_affine_inv_1_1*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = jac_affine_inv_1_2*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((jac_affine_inv_0_0*jac_affine_inv_0_0)*tmp_q_103 + (jac_affine_inv_0_1*jac_affine_inv_0_1)*tmp_q_103 + (jac_affine_inv_0_2*jac_affine_inv_0_2)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((jac_affine_inv_1_0*jac_affine_inv_1_0)*tmp_q_107 + (jac_affine_inv_1_1*jac_affine_inv_1_1)*tmp_q_107 + (jac_affine_inv_1_2*jac_affine_inv_1_2)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((jac_affine_inv_2_0*jac_affine_inv_2_0)*tmp_q_108 + (jac_affine_inv_2_1*jac_affine_inv_2_1)*tmp_q_108 + (jac_affine_inv_2_2*jac_affine_inv_2_2)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(jac_affine_inv_0_1*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(jac_affine_inv_0_2*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(jac_affine_inv_0_0*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
             const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
             const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
             const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
             const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
             const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
             const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
             const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
             const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
             const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_7 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 2; ctr_0 += 1)
          {
             const double src_dof_0 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_1 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_2 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_3 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_4 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
             const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_7 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double src_dof_8 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_4 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4162*tmp_q_4;
                const double tmp_q_6 = Dummy_4165*tmp_q_4;
                const double tmp_q_7 = Dummy_4168*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4163*tmp_q_4;
                const double tmp_q_21 = Dummy_4166*tmp_q_4;
                const double tmp_q_22 = Dummy_4169*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4164*tmp_q_4;
                const double tmp_q_25 = Dummy_4167*tmp_q_4;
                const double tmp_q_26 = Dummy_4170*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4171*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4162*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4163*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4164*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4165*tmp_q_36;
                const double tmp_q_38 = Dummy_4166*tmp_q_36;
                const double tmp_q_39 = Dummy_4167*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4168*tmp_q_40;
                const double tmp_q_42 = Dummy_4169*tmp_q_40;
                const double tmp_q_43 = Dummy_4170*tmp_q_40;
                const double tmp_q_44 = Dummy_4165*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4168*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4166*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4169*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4167*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4170*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4162*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4168*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4163*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4169*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4164*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4170*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4162*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4165*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4163*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4166*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4164*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4167*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4168*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4169*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4170*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4165*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4166*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4167*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4162*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4163*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4164*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4168*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4169*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4170*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4165*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4166*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4167*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4162*Dummy_4162)*tmp_q_103 + (Dummy_4163*Dummy_4163)*tmp_q_103 + (Dummy_4164*Dummy_4164)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4165*Dummy_4165)*tmp_q_107 + (Dummy_4166*Dummy_4166)*tmp_q_107 + (Dummy_4167*Dummy_4167)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4168*Dummy_4168)*tmp_q_108 + (Dummy_4169*Dummy_4169)*tmp_q_108 + (Dummy_4170*Dummy_4170)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4163*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4164*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4162*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
             const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
             const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
             const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
             const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
             const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
             const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
             const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
             const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
             const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_7 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double src_dof_0 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_1 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_2 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_3 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_6 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_7 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_2 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_6 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4193*tmp_q_4;
                const double tmp_q_6 = Dummy_4196*tmp_q_4;
                const double tmp_q_7 = Dummy_4199*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4194*tmp_q_4;
                const double tmp_q_21 = Dummy_4197*tmp_q_4;
                const double tmp_q_22 = Dummy_4200*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4195*tmp_q_4;
                const double tmp_q_25 = Dummy_4198*tmp_q_4;
                const double tmp_q_26 = Dummy_4201*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4202*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4193*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4194*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4195*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4196*tmp_q_36;
                const double tmp_q_38 = Dummy_4197*tmp_q_36;
                const double tmp_q_39 = Dummy_4198*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4199*tmp_q_40;
                const double tmp_q_42 = Dummy_4200*tmp_q_40;
                const double tmp_q_43 = Dummy_4201*tmp_q_40;
                const double tmp_q_44 = Dummy_4196*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4199*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4197*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4200*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4198*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4201*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4193*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4199*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4194*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4200*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4195*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4201*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4193*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4196*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4194*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4197*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4195*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4198*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4199*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4200*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4201*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4196*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4197*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4198*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4193*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4194*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4195*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4199*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4200*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4201*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4196*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4197*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4198*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4193*Dummy_4193)*tmp_q_103 + (Dummy_4194*Dummy_4194)*tmp_q_103 + (Dummy_4195*Dummy_4195)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4196*Dummy_4196)*tmp_q_107 + (Dummy_4197*Dummy_4197)*tmp_q_107 + (Dummy_4198*Dummy_4198)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4199*Dummy_4199)*tmp_q_108 + (Dummy_4200*Dummy_4200)*tmp_q_108 + (Dummy_4201*Dummy_4201)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4194*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4195*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4193*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
             const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
             const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
             const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
             const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
             const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
             const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
             const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
             const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
             const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_7 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double src_dof_0 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_1 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_2 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_3 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_7 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_1 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4224*tmp_q_4;
                const double tmp_q_6 = Dummy_4227*tmp_q_4;
                const double tmp_q_7 = Dummy_4230*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4225*tmp_q_4;
                const double tmp_q_21 = Dummy_4228*tmp_q_4;
                const double tmp_q_22 = Dummy_4231*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4226*tmp_q_4;
                const double tmp_q_25 = Dummy_4229*tmp_q_4;
                const double tmp_q_26 = Dummy_4232*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4233*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4224*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4225*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4226*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4227*tmp_q_36;
                const double tmp_q_38 = Dummy_4228*tmp_q_36;
                const double tmp_q_39 = Dummy_4229*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4230*tmp_q_40;
                const double tmp_q_42 = Dummy_4231*tmp_q_40;
                const double tmp_q_43 = Dummy_4232*tmp_q_40;
                const double tmp_q_44 = Dummy_4227*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4230*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4228*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4231*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4229*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4232*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4224*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4230*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4225*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4231*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4226*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4232*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4224*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4227*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4225*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4228*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4226*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4229*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4230*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4231*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4232*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4227*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4228*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4229*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4224*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4225*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4226*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4230*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4231*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4232*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4227*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4228*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4229*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4224*Dummy_4224)*tmp_q_103 + (Dummy_4225*Dummy_4225)*tmp_q_103 + (Dummy_4226*Dummy_4226)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4227*Dummy_4227)*tmp_q_107 + (Dummy_4228*Dummy_4228)*tmp_q_107 + (Dummy_4229*Dummy_4229)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4230*Dummy_4230)*tmp_q_108 + (Dummy_4231*Dummy_4231)*tmp_q_108 + (Dummy_4232*Dummy_4232)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4225*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4226*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4224*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
             const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
             const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
             const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
             const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
             const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
             const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
             const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
             const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
             const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 2*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_7 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double src_dof_0 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_1 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_2 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_3 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_5 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_7 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_9 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_9 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_5 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4255*tmp_q_4;
                const double tmp_q_6 = Dummy_4258*tmp_q_4;
                const double tmp_q_7 = Dummy_4261*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4256*tmp_q_4;
                const double tmp_q_21 = Dummy_4259*tmp_q_4;
                const double tmp_q_22 = Dummy_4262*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4257*tmp_q_4;
                const double tmp_q_25 = Dummy_4260*tmp_q_4;
                const double tmp_q_26 = Dummy_4263*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4264*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4255*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4256*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4257*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4258*tmp_q_36;
                const double tmp_q_38 = Dummy_4259*tmp_q_36;
                const double tmp_q_39 = Dummy_4260*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4261*tmp_q_40;
                const double tmp_q_42 = Dummy_4262*tmp_q_40;
                const double tmp_q_43 = Dummy_4263*tmp_q_40;
                const double tmp_q_44 = Dummy_4258*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4261*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4259*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4262*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4260*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4263*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4255*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4261*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4256*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4262*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4257*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4263*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4255*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4258*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4256*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4259*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4257*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4260*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4261*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4262*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4263*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4258*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4259*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4260*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4255*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4256*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4257*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4261*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4262*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4263*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4258*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4259*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4260*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4255*Dummy_4255)*tmp_q_103 + (Dummy_4256*Dummy_4256)*tmp_q_103 + (Dummy_4257*Dummy_4257)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4258*Dummy_4258)*tmp_q_107 + (Dummy_4259*Dummy_4259)*tmp_q_107 + (Dummy_4260*Dummy_4260)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4261*Dummy_4261)*tmp_q_108 + (Dummy_4262*Dummy_4262)*tmp_q_108 + (Dummy_4263*Dummy_4263)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4256*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4257*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4255*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
             const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
             const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
             const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
             const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
             const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
             const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
             const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
             const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
             const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_0 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 2) - ((ctr_1*(ctr_1 + 1)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_3 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_7 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
          }
          for (int64_t ctr_2 = 0; ctr_2 < micro_edges_per_macro_edge; ctr_2 += 1)
          for (int64_t ctr_1 = 0; ctr_1 < -ctr_2 + micro_edges_per_macro_edge; ctr_1 += 1)
          for (int64_t ctr_0 = 0; ctr_0 < -ctr_1 - ctr_2 + micro_edges_per_macro_edge - 1; ctr_0 += 1)
          {
             const double src_dof_0 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_1 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_2 = _data_srcVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double src_dof_3 = _data_srcVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double src_dof_4 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_5 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_6 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double src_dof_7 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double src_dof_8 = _data_srcEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double src_dof_9 = _data_srcEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_4 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_3 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_2 = _data_kVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_1 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             const double k_dof_9 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_7 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             const double k_dof_6 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             const double k_dof_8 = _data_kEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             const double k_dof_0 = _data_kVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             const double k_dof_5 = _data_kEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             double q_acc_0_0 = 0.0;
             double q_acc_0_1 = 0.0;
             double q_acc_0_2 = 0.0;
             double q_acc_0_3 = 0.0;
             double q_acc_0_4 = 0.0;
             double q_acc_0_5 = 0.0;
             double q_acc_0_6 = 0.0;
             double q_acc_0_7 = 0.0;
             double q_acc_0_8 = 0.0;
             double q_acc_0_9 = 0.0;
             double q_acc_1_1 = 0.0;
             double q_acc_1_2 = 0.0;
             double q_acc_1_3 = 0.0;
             double q_acc_1_4 = 0.0;
             double q_acc_1_5 = 0.0;
             double q_acc_1_6 = 0.0;
             double q_acc_1_7 = 0.0;
             double q_acc_1_8 = 0.0;
             double q_acc_1_9 = 0.0;
             double q_acc_2_2 = 0.0;
             double q_acc_2_3 = 0.0;
             double q_acc_2_4 = 0.0;
             double q_acc_2_5 = 0.0;
             double q_acc_2_6 = 0.0;
             double q_acc_2_7 = 0.0;
             double q_acc_2_8 = 0.0;
             double q_acc_2_9 = 0.0;
             double q_acc_3_3 = 0.0;
             double q_acc_3_4 = 0.0;
             double q_acc_3_5 = 0.0;
             double q_acc_3_6 = 0.0;
             double q_acc_3_7 = 0.0;
             double q_acc_3_8 = 0.0;
             double q_acc_3_9 = 0.0;
             double q_acc_4_4 = 0.0;
             double q_acc_4_5 = 0.0;
             double q_acc_4_6 = 0.0;
             double q_acc_4_7 = 0.0;
             double q_acc_4_8 = 0.0;
             double q_acc_4_9 = 0.0;
             double q_acc_5_5 = 0.0;
             double q_acc_5_6 = 0.0;
             double q_acc_5_7 = 0.0;
             double q_acc_5_8 = 0.0;
             double q_acc_5_9 = 0.0;
             double q_acc_6_6 = 0.0;
             double q_acc_6_7 = 0.0;
             double q_acc_6_8 = 0.0;
             double q_acc_6_9 = 0.0;
             double q_acc_7_7 = 0.0;
             double q_acc_7_8 = 0.0;
             double q_acc_7_9 = 0.0;
             double q_acc_8_8 = 0.0;
             double q_acc_8_9 = 0.0;
             double q_acc_9_9 = 0.0;
             for (int64_t q = 0; q < 4; q += 1)
             {
                const double tmp_q_0 = 4.0*_data_q_p_2[q];
                const double tmp_q_1 = 4.0*_data_q_p_0[q];
                const double tmp_q_2 = 4.0*_data_q_p_1[q];
                const double tmp_q_3 = tmp_q_1 + tmp_q_2;
                const double tmp_q_4 = tmp_q_0 + tmp_q_3 - 3.0;
                const double tmp_q_5 = Dummy_4286*tmp_q_4;
                const double tmp_q_6 = Dummy_4289*tmp_q_4;
                const double tmp_q_7 = Dummy_4292*tmp_q_4;
                const double tmp_q_8 = tmp_q_5 + tmp_q_6 + tmp_q_7;
                const double tmp_q_9 = tmp_q_2*_data_q_p_2[q];
                const double tmp_q_10 = tmp_q_1*_data_q_p_2[q];
                const double tmp_q_11 = tmp_q_1*_data_q_p_1[q];
                const double tmp_q_12 = (_data_q_p_0[q]*_data_q_p_0[q]);
                const double tmp_q_13 = tmp_q_12*2.0;
                const double tmp_q_14 = (_data_q_p_1[q]*_data_q_p_1[q]);
                const double tmp_q_15 = tmp_q_14*2.0;
                const double tmp_q_16 = (_data_q_p_2[q]*_data_q_p_2[q]);
                const double tmp_q_17 = tmp_q_16*2.0;
                const double tmp_q_18 = tmp_q_10 + tmp_q_11;
                const double tmp_q_19 = k_dof_0*(tmp_q_13 + tmp_q_15 + tmp_q_17 + tmp_q_18 + tmp_q_9 - 3.0*_data_q_p_0[q] - 3.0*_data_q_p_1[q] - 3.0*_data_q_p_2[q] + 1.0) + k_dof_1*(tmp_q_13 - _data_q_p_0[q]) + k_dof_2*(tmp_q_15 - _data_q_p_1[q]) + k_dof_3*(tmp_q_17 - _data_q_p_2[q]) + k_dof_4*tmp_q_9 + k_dof_5*tmp_q_10 + k_dof_6*tmp_q_11 + k_dof_7*(tmp_q_0 - tmp_q_10 + tmp_q_16*-4.0 - tmp_q_9) + k_dof_8*(-tmp_q_11 + tmp_q_14*-4.0 + tmp_q_2 - tmp_q_9) + k_dof_9*(tmp_q_1 + tmp_q_12*-4.0 - tmp_q_18);
                const double tmp_q_20 = Dummy_4287*tmp_q_4;
                const double tmp_q_21 = Dummy_4290*tmp_q_4;
                const double tmp_q_22 = Dummy_4293*tmp_q_4;
                const double tmp_q_23 = tmp_q_20 + tmp_q_21 + tmp_q_22;
                const double tmp_q_24 = Dummy_4288*tmp_q_4;
                const double tmp_q_25 = Dummy_4291*tmp_q_4;
                const double tmp_q_26 = Dummy_4294*tmp_q_4;
                const double tmp_q_27 = tmp_q_24 + tmp_q_25 + tmp_q_26;
                const double tmp_q_28 = Dummy_4295*_data_q_w[q];
                const double tmp_q_29 = tmp_q_1 - 1.0;
                const double tmp_q_30 = Dummy_4286*tmp_q_29;
                const double tmp_q_31 = tmp_q_19*tmp_q_8;
                const double tmp_q_32 = Dummy_4287*tmp_q_29;
                const double tmp_q_33 = tmp_q_19*tmp_q_23;
                const double tmp_q_34 = Dummy_4288*tmp_q_29;
                const double tmp_q_35 = tmp_q_19*tmp_q_27;
                const double tmp_q_36 = tmp_q_2 - 1.0;
                const double tmp_q_37 = Dummy_4289*tmp_q_36;
                const double tmp_q_38 = Dummy_4290*tmp_q_36;
                const double tmp_q_39 = Dummy_4291*tmp_q_36;
                const double tmp_q_40 = tmp_q_0 - 1.0;
                const double tmp_q_41 = Dummy_4292*tmp_q_40;
                const double tmp_q_42 = Dummy_4293*tmp_q_40;
                const double tmp_q_43 = Dummy_4294*tmp_q_40;
                const double tmp_q_44 = Dummy_4289*tmp_q_0;
                const double tmp_q_45 = tmp_q_19*tmp_q_44;
                const double tmp_q_46 = Dummy_4292*tmp_q_2;
                const double tmp_q_47 = tmp_q_19*tmp_q_46;
                const double tmp_q_48 = tmp_q_45 + tmp_q_47;
                const double tmp_q_49 = Dummy_4290*tmp_q_0;
                const double tmp_q_50 = tmp_q_19*tmp_q_49;
                const double tmp_q_51 = Dummy_4293*tmp_q_2;
                const double tmp_q_52 = tmp_q_19*tmp_q_51;
                const double tmp_q_53 = tmp_q_50 + tmp_q_52;
                const double tmp_q_54 = Dummy_4291*tmp_q_0;
                const double tmp_q_55 = tmp_q_19*tmp_q_54;
                const double tmp_q_56 = Dummy_4294*tmp_q_2;
                const double tmp_q_57 = tmp_q_19*tmp_q_56;
                const double tmp_q_58 = tmp_q_55 + tmp_q_57;
                const double tmp_q_59 = Dummy_4286*tmp_q_0;
                const double tmp_q_60 = tmp_q_19*tmp_q_59;
                const double tmp_q_61 = Dummy_4292*tmp_q_1;
                const double tmp_q_62 = tmp_q_19*tmp_q_61;
                const double tmp_q_63 = tmp_q_60 + tmp_q_62;
                const double tmp_q_64 = Dummy_4287*tmp_q_0;
                const double tmp_q_65 = tmp_q_19*tmp_q_64;
                const double tmp_q_66 = Dummy_4293*tmp_q_1;
                const double tmp_q_67 = tmp_q_19*tmp_q_66;
                const double tmp_q_68 = tmp_q_65 + tmp_q_67;
                const double tmp_q_69 = Dummy_4288*tmp_q_0;
                const double tmp_q_70 = tmp_q_19*tmp_q_69;
                const double tmp_q_71 = Dummy_4294*tmp_q_1;
                const double tmp_q_72 = tmp_q_19*tmp_q_71;
                const double tmp_q_73 = tmp_q_70 + tmp_q_72;
                const double tmp_q_74 = Dummy_4286*tmp_q_2;
                const double tmp_q_75 = tmp_q_19*tmp_q_74;
                const double tmp_q_76 = Dummy_4289*tmp_q_1;
                const double tmp_q_77 = tmp_q_19*tmp_q_76;
                const double tmp_q_78 = tmp_q_75 + tmp_q_77;
                const double tmp_q_79 = Dummy_4287*tmp_q_2;
                const double tmp_q_80 = tmp_q_19*tmp_q_79;
                const double tmp_q_81 = Dummy_4290*tmp_q_1;
                const double tmp_q_82 = tmp_q_19*tmp_q_81;
                const double tmp_q_83 = tmp_q_80 + tmp_q_82;
                const double tmp_q_84 = Dummy_4288*tmp_q_2;
                const double tmp_q_85 = tmp_q_19*tmp_q_84;
                const double tmp_q_86 = Dummy_4291*tmp_q_1;
                const double tmp_q_87 = tmp_q_19*tmp_q_86;
                const double tmp_q_88 = tmp_q_85 + tmp_q_87;
                const double tmp_q_89 = -tmp_q_3 - 8.0*_data_q_p_2[q] + 4.0;
                const double tmp_q_90 = Dummy_4292*tmp_q_19*tmp_q_89 - tmp_q_45 - tmp_q_60;
                const double tmp_q_91 = Dummy_4293*tmp_q_19*tmp_q_89 - tmp_q_50 - tmp_q_65;
                const double tmp_q_92 = Dummy_4294*tmp_q_19*tmp_q_89 - tmp_q_55 - tmp_q_70;
                const double tmp_q_93 = tmp_q_0 - 4.0;
                const double tmp_q_94 = -tmp_q_1 - tmp_q_93 - 8.0*_data_q_p_1[q];
                const double tmp_q_95 = Dummy_4289*tmp_q_19*tmp_q_94 - tmp_q_47 - tmp_q_75;
                const double tmp_q_96 = Dummy_4290*tmp_q_19*tmp_q_94 - tmp_q_52 - tmp_q_80;
                const double tmp_q_97 = Dummy_4291*tmp_q_19*tmp_q_94 - tmp_q_57 - tmp_q_85;
                const double tmp_q_98 = -tmp_q_2 - tmp_q_93 - 8.0*_data_q_p_0[q];
                const double tmp_q_99 = Dummy_4286*tmp_q_19*tmp_q_98 - tmp_q_62 - tmp_q_77;
                const double tmp_q_100 = Dummy_4287*tmp_q_19*tmp_q_98 - tmp_q_67 - tmp_q_82;
                const double tmp_q_101 = Dummy_4288*tmp_q_19*tmp_q_98 - tmp_q_72 - tmp_q_87;
                const double tmp_q_102 = tmp_q_19*16.0;
                const double tmp_q_103 = tmp_q_102*((-0.25 + _data_q_p_0[q])*(-0.25 + _data_q_p_0[q]));
                const double tmp_q_104 = tmp_q_19*tmp_q_30;
                const double tmp_q_105 = tmp_q_19*tmp_q_32;
                const double tmp_q_106 = tmp_q_19*tmp_q_34;
                const double tmp_q_107 = tmp_q_102*((-0.25 + _data_q_p_1[q])*(-0.25 + _data_q_p_1[q]));
                const double tmp_q_108 = tmp_q_102*((-0.25 + _data_q_p_2[q])*(-0.25 + _data_q_p_2[q]));
                const double tmp_q_109 = tmp_q_44 + tmp_q_46;
                const double tmp_q_110 = tmp_q_49 + tmp_q_51;
                const double tmp_q_111 = tmp_q_54 + tmp_q_56;
                const double tmp_q_112 = tmp_q_59 + tmp_q_61;
                const double tmp_q_113 = tmp_q_64 + tmp_q_66;
                const double tmp_q_114 = tmp_q_69 + tmp_q_71;
                const double tmp_q_115 = tmp_q_74 + tmp_q_76;
                const double tmp_q_116 = tmp_q_79 + tmp_q_81;
                const double tmp_q_117 = tmp_q_84 + tmp_q_86;
                const double tmp_q_118 = Dummy_4292*tmp_q_89 - tmp_q_44 - tmp_q_59;
                const double tmp_q_119 = Dummy_4293*tmp_q_89 - tmp_q_49 - tmp_q_64;
                const double tmp_q_120 = Dummy_4294*tmp_q_89 - tmp_q_54 - tmp_q_69;
                const double tmp_q_121 = Dummy_4289*tmp_q_94 - tmp_q_46 - tmp_q_74;
                const double tmp_q_122 = Dummy_4290*tmp_q_94 - tmp_q_51 - tmp_q_79;
                const double tmp_q_123 = Dummy_4291*tmp_q_94 - tmp_q_56 - tmp_q_84;
                const double res_tmp_0_0 = tmp_q_28*(tmp_q_23*(tmp_q_19*tmp_q_20 + tmp_q_19*tmp_q_21 + tmp_q_19*tmp_q_22) + tmp_q_27*(tmp_q_19*tmp_q_24 + tmp_q_19*tmp_q_25 + tmp_q_19*tmp_q_26) + tmp_q_8*(tmp_q_19*tmp_q_5 + tmp_q_19*tmp_q_6 + tmp_q_19*tmp_q_7));
                const double res_tmp_0_1 = tmp_q_28*(tmp_q_30*tmp_q_31 + tmp_q_32*tmp_q_33 + tmp_q_34*tmp_q_35);
                const double res_tmp_0_2 = tmp_q_28*(tmp_q_31*tmp_q_37 + tmp_q_33*tmp_q_38 + tmp_q_35*tmp_q_39);
                const double res_tmp_0_3 = tmp_q_28*(tmp_q_31*tmp_q_41 + tmp_q_33*tmp_q_42 + tmp_q_35*tmp_q_43);
                const double res_tmp_0_4 = tmp_q_28*(tmp_q_23*tmp_q_53 + tmp_q_27*tmp_q_58 + tmp_q_48*tmp_q_8);
                const double res_tmp_0_5 = tmp_q_28*(tmp_q_23*tmp_q_68 + tmp_q_27*tmp_q_73 + tmp_q_63*tmp_q_8);
                const double res_tmp_0_6 = tmp_q_28*(tmp_q_23*tmp_q_83 + tmp_q_27*tmp_q_88 + tmp_q_78*tmp_q_8);
                const double res_tmp_0_7 = tmp_q_28*(tmp_q_23*tmp_q_91 + tmp_q_27*tmp_q_92 + tmp_q_8*tmp_q_90);
                const double res_tmp_0_8 = tmp_q_28*(tmp_q_23*tmp_q_96 + tmp_q_27*tmp_q_97 + tmp_q_8*tmp_q_95);
                const double res_tmp_0_9 = tmp_q_28*(tmp_q_100*tmp_q_23 + tmp_q_101*tmp_q_27 + tmp_q_8*tmp_q_99);
                const double res_tmp_1_1 = tmp_q_28*((Dummy_4286*Dummy_4286)*tmp_q_103 + (Dummy_4287*Dummy_4287)*tmp_q_103 + (Dummy_4288*Dummy_4288)*tmp_q_103);
                const double res_tmp_1_2 = tmp_q_28*(tmp_q_104*tmp_q_37 + tmp_q_105*tmp_q_38 + tmp_q_106*tmp_q_39);
                const double res_tmp_1_3 = tmp_q_28*(tmp_q_104*tmp_q_41 + tmp_q_105*tmp_q_42 + tmp_q_106*tmp_q_43);
                const double res_tmp_1_4 = tmp_q_28*(tmp_q_30*tmp_q_48 + tmp_q_32*tmp_q_53 + tmp_q_34*tmp_q_58);
                const double res_tmp_1_5 = tmp_q_28*(tmp_q_30*tmp_q_63 + tmp_q_32*tmp_q_68 + tmp_q_34*tmp_q_73);
                const double res_tmp_1_6 = tmp_q_28*(tmp_q_30*tmp_q_78 + tmp_q_32*tmp_q_83 + tmp_q_34*tmp_q_88);
                const double res_tmp_1_7 = tmp_q_28*(tmp_q_30*tmp_q_90 + tmp_q_32*tmp_q_91 + tmp_q_34*tmp_q_92);
                const double res_tmp_1_8 = tmp_q_28*(tmp_q_30*tmp_q_95 + tmp_q_32*tmp_q_96 + tmp_q_34*tmp_q_97);
                const double res_tmp_1_9 = tmp_q_28*(tmp_q_100*tmp_q_32 + tmp_q_101*tmp_q_34 + tmp_q_30*tmp_q_99);
                const double res_tmp_2_2 = tmp_q_28*((Dummy_4289*Dummy_4289)*tmp_q_107 + (Dummy_4290*Dummy_4290)*tmp_q_107 + (Dummy_4291*Dummy_4291)*tmp_q_107);
                const double res_tmp_2_3 = tmp_q_28*(tmp_q_19*tmp_q_37*tmp_q_41 + tmp_q_19*tmp_q_38*tmp_q_42 + tmp_q_19*tmp_q_39*tmp_q_43);
                const double res_tmp_2_4 = tmp_q_28*(tmp_q_37*tmp_q_48 + tmp_q_38*tmp_q_53 + tmp_q_39*tmp_q_58);
                const double res_tmp_2_5 = tmp_q_28*(tmp_q_37*tmp_q_63 + tmp_q_38*tmp_q_68 + tmp_q_39*tmp_q_73);
                const double res_tmp_2_6 = tmp_q_28*(tmp_q_37*tmp_q_78 + tmp_q_38*tmp_q_83 + tmp_q_39*tmp_q_88);
                const double res_tmp_2_7 = tmp_q_28*(tmp_q_37*tmp_q_90 + tmp_q_38*tmp_q_91 + tmp_q_39*tmp_q_92);
                const double res_tmp_2_8 = tmp_q_28*(tmp_q_37*tmp_q_95 + tmp_q_38*tmp_q_96 + tmp_q_39*tmp_q_97);
                const double res_tmp_2_9 = tmp_q_28*(tmp_q_100*tmp_q_38 + tmp_q_101*tmp_q_39 + tmp_q_37*tmp_q_99);
                const double res_tmp_3_3 = tmp_q_28*((Dummy_4292*Dummy_4292)*tmp_q_108 + (Dummy_4293*Dummy_4293)*tmp_q_108 + (Dummy_4294*Dummy_4294)*tmp_q_108);
                const double res_tmp_3_4 = tmp_q_28*(tmp_q_41*tmp_q_48 + tmp_q_42*tmp_q_53 + tmp_q_43*tmp_q_58);
                const double res_tmp_3_5 = tmp_q_28*(tmp_q_41*tmp_q_63 + tmp_q_42*tmp_q_68 + tmp_q_43*tmp_q_73);
                const double res_tmp_3_6 = tmp_q_28*(tmp_q_41*tmp_q_78 + tmp_q_42*tmp_q_83 + tmp_q_43*tmp_q_88);
                const double res_tmp_3_7 = tmp_q_28*(tmp_q_41*tmp_q_90 + tmp_q_42*tmp_q_91 + tmp_q_43*tmp_q_92);
                const double res_tmp_3_8 = tmp_q_28*(tmp_q_41*tmp_q_95 + tmp_q_42*tmp_q_96 + tmp_q_43*tmp_q_97);
                const double res_tmp_3_9 = tmp_q_28*(tmp_q_100*tmp_q_42 + tmp_q_101*tmp_q_43 + tmp_q_41*tmp_q_99);
                const double res_tmp_4_4 = tmp_q_28*(tmp_q_109*tmp_q_48 + tmp_q_110*tmp_q_53 + tmp_q_111*tmp_q_58);
                const double res_tmp_4_5 = tmp_q_28*(tmp_q_109*tmp_q_63 + tmp_q_110*tmp_q_68 + tmp_q_111*tmp_q_73);
                const double res_tmp_4_6 = tmp_q_28*(tmp_q_109*tmp_q_78 + tmp_q_110*tmp_q_83 + tmp_q_111*tmp_q_88);
                const double res_tmp_4_7 = tmp_q_28*(tmp_q_109*tmp_q_90 + tmp_q_110*tmp_q_91 + tmp_q_111*tmp_q_92);
                const double res_tmp_4_8 = tmp_q_28*(tmp_q_109*tmp_q_95 + tmp_q_110*tmp_q_96 + tmp_q_111*tmp_q_97);
                const double res_tmp_4_9 = tmp_q_28*(tmp_q_100*tmp_q_110 + tmp_q_101*tmp_q_111 + tmp_q_109*tmp_q_99);
                const double res_tmp_5_5 = tmp_q_28*(tmp_q_112*tmp_q_63 + tmp_q_113*tmp_q_68 + tmp_q_114*tmp_q_73);
                const double res_tmp_5_6 = tmp_q_28*(tmp_q_112*tmp_q_78 + tmp_q_113*tmp_q_83 + tmp_q_114*tmp_q_88);
                const double res_tmp_5_7 = tmp_q_28*(tmp_q_112*tmp_q_90 + tmp_q_113*tmp_q_91 + tmp_q_114*tmp_q_92);
                const double res_tmp_5_8 = tmp_q_28*(tmp_q_112*tmp_q_95 + tmp_q_113*tmp_q_96 + tmp_q_114*tmp_q_97);
                const double res_tmp_5_9 = tmp_q_28*(tmp_q_100*tmp_q_113 + tmp_q_101*tmp_q_114 + tmp_q_112*tmp_q_99);
                const double res_tmp_6_6 = tmp_q_28*(tmp_q_115*tmp_q_78 + tmp_q_116*tmp_q_83 + tmp_q_117*tmp_q_88);
                const double res_tmp_6_7 = tmp_q_28*(tmp_q_115*tmp_q_90 + tmp_q_116*tmp_q_91 + tmp_q_117*tmp_q_92);
                const double res_tmp_6_8 = tmp_q_28*(tmp_q_115*tmp_q_95 + tmp_q_116*tmp_q_96 + tmp_q_117*tmp_q_97);
                const double res_tmp_6_9 = tmp_q_28*(tmp_q_100*tmp_q_116 + tmp_q_101*tmp_q_117 + tmp_q_115*tmp_q_99);
                const double res_tmp_7_7 = tmp_q_28*(tmp_q_118*tmp_q_90 + tmp_q_119*tmp_q_91 + tmp_q_120*tmp_q_92);
                const double res_tmp_7_8 = tmp_q_28*(tmp_q_118*tmp_q_95 + tmp_q_119*tmp_q_96 + tmp_q_120*tmp_q_97);
                const double res_tmp_7_9 = tmp_q_28*(tmp_q_100*tmp_q_119 + tmp_q_101*tmp_q_120 + tmp_q_118*tmp_q_99);
                const double res_tmp_8_8 = tmp_q_28*(tmp_q_121*tmp_q_95 + tmp_q_122*tmp_q_96 + tmp_q_123*tmp_q_97);
                const double res_tmp_8_9 = tmp_q_28*(tmp_q_100*tmp_q_122 + tmp_q_101*tmp_q_123 + tmp_q_121*tmp_q_99);
                const double res_tmp_9_9 = tmp_q_28*(tmp_q_100*(Dummy_4287*tmp_q_98 - tmp_q_66 - tmp_q_81) + tmp_q_101*(Dummy_4288*tmp_q_98 - tmp_q_71 - tmp_q_86) + tmp_q_99*(Dummy_4286*tmp_q_98 - tmp_q_61 - tmp_q_76));
                q_acc_0_0 = q_acc_0_0 + res_tmp_0_0;
                q_acc_0_1 = q_acc_0_1 + res_tmp_0_1;
                q_acc_0_2 = q_acc_0_2 + res_tmp_0_2;
                q_acc_0_3 = q_acc_0_3 + res_tmp_0_3;
                q_acc_0_4 = q_acc_0_4 + res_tmp_0_4;
                q_acc_0_5 = q_acc_0_5 + res_tmp_0_5;
                q_acc_0_6 = q_acc_0_6 + res_tmp_0_6;
                q_acc_0_7 = q_acc_0_7 + res_tmp_0_7;
                q_acc_0_8 = q_acc_0_8 + res_tmp_0_8;
                q_acc_0_9 = q_acc_0_9 + res_tmp_0_9;
                q_acc_1_1 = q_acc_1_1 + res_tmp_1_1;
                q_acc_1_2 = q_acc_1_2 + res_tmp_1_2;
                q_acc_1_3 = q_acc_1_3 + res_tmp_1_3;
                q_acc_1_4 = q_acc_1_4 + res_tmp_1_4;
                q_acc_1_5 = q_acc_1_5 + res_tmp_1_5;
                q_acc_1_6 = q_acc_1_6 + res_tmp_1_6;
                q_acc_1_7 = q_acc_1_7 + res_tmp_1_7;
                q_acc_1_8 = q_acc_1_8 + res_tmp_1_8;
                q_acc_1_9 = q_acc_1_9 + res_tmp_1_9;
                q_acc_2_2 = q_acc_2_2 + res_tmp_2_2;
                q_acc_2_3 = q_acc_2_3 + res_tmp_2_3;
                q_acc_2_4 = q_acc_2_4 + res_tmp_2_4;
                q_acc_2_5 = q_acc_2_5 + res_tmp_2_5;
                q_acc_2_6 = q_acc_2_6 + res_tmp_2_6;
                q_acc_2_7 = q_acc_2_7 + res_tmp_2_7;
                q_acc_2_8 = q_acc_2_8 + res_tmp_2_8;
                q_acc_2_9 = q_acc_2_9 + res_tmp_2_9;
                q_acc_3_3 = q_acc_3_3 + res_tmp_3_3;
                q_acc_3_4 = q_acc_3_4 + res_tmp_3_4;
                q_acc_3_5 = q_acc_3_5 + res_tmp_3_5;
                q_acc_3_6 = q_acc_3_6 + res_tmp_3_6;
                q_acc_3_7 = q_acc_3_7 + res_tmp_3_7;
                q_acc_3_8 = q_acc_3_8 + res_tmp_3_8;
                q_acc_3_9 = q_acc_3_9 + res_tmp_3_9;
                q_acc_4_4 = q_acc_4_4 + res_tmp_4_4;
                q_acc_4_5 = q_acc_4_5 + res_tmp_4_5;
                q_acc_4_6 = q_acc_4_6 + res_tmp_4_6;
                q_acc_4_7 = q_acc_4_7 + res_tmp_4_7;
                q_acc_4_8 = q_acc_4_8 + res_tmp_4_8;
                q_acc_4_9 = q_acc_4_9 + res_tmp_4_9;
                q_acc_5_5 = q_acc_5_5 + res_tmp_5_5;
                q_acc_5_6 = q_acc_5_6 + res_tmp_5_6;
                q_acc_5_7 = q_acc_5_7 + res_tmp_5_7;
                q_acc_5_8 = q_acc_5_8 + res_tmp_5_8;
                q_acc_5_9 = q_acc_5_9 + res_tmp_5_9;
                q_acc_6_6 = q_acc_6_6 + res_tmp_6_6;
                q_acc_6_7 = q_acc_6_7 + res_tmp_6_7;
                q_acc_6_8 = q_acc_6_8 + res_tmp_6_8;
                q_acc_6_9 = q_acc_6_9 + res_tmp_6_9;
                q_acc_7_7 = q_acc_7_7 + res_tmp_7_7;
                q_acc_7_8 = q_acc_7_8 + res_tmp_7_8;
                q_acc_7_9 = q_acc_7_9 + res_tmp_7_9;
                q_acc_8_8 = q_acc_8_8 + res_tmp_8_8;
                q_acc_8_9 = q_acc_8_9 + res_tmp_8_9;
                q_acc_9_9 = q_acc_9_9 + res_tmp_9_9;
             }
             double q_acc_1_0 = q_acc_0_1;
             double q_acc_2_0 = q_acc_0_2;
             double q_acc_2_1 = q_acc_1_2;
             double q_acc_3_0 = q_acc_0_3;
             double q_acc_3_1 = q_acc_1_3;
             double q_acc_3_2 = q_acc_2_3;
             double q_acc_4_0 = q_acc_0_4;
             double q_acc_4_1 = q_acc_1_4;
             double q_acc_4_2 = q_acc_2_4;
             double q_acc_4_3 = q_acc_3_4;
             double q_acc_5_0 = q_acc_0_5;
             double q_acc_5_1 = q_acc_1_5;
             double q_acc_5_2 = q_acc_2_5;
             double q_acc_5_3 = q_acc_3_5;
             double q_acc_5_4 = q_acc_4_5;
             double q_acc_6_0 = q_acc_0_6;
             double q_acc_6_1 = q_acc_1_6;
             double q_acc_6_2 = q_acc_2_6;
             double q_acc_6_3 = q_acc_3_6;
             double q_acc_6_4 = q_acc_4_6;
             double q_acc_6_5 = q_acc_5_6;
             double q_acc_7_0 = q_acc_0_7;
             double q_acc_7_1 = q_acc_1_7;
             double q_acc_7_2 = q_acc_2_7;
             double q_acc_7_3 = q_acc_3_7;
             double q_acc_7_4 = q_acc_4_7;
             double q_acc_7_5 = q_acc_5_7;
             double q_acc_7_6 = q_acc_6_7;
             double q_acc_8_0 = q_acc_0_8;
             double q_acc_8_1 = q_acc_1_8;
             double q_acc_8_2 = q_acc_2_8;
             double q_acc_8_3 = q_acc_3_8;
             double q_acc_8_4 = q_acc_4_8;
             double q_acc_8_5 = q_acc_5_8;
             double q_acc_8_6 = q_acc_6_8;
             double q_acc_8_7 = q_acc_7_8;
             double q_acc_9_0 = q_acc_0_9;
             double q_acc_9_1 = q_acc_1_9;
             double q_acc_9_2 = q_acc_2_9;
             double q_acc_9_3 = q_acc_3_9;
             double q_acc_9_4 = q_acc_4_9;
             double q_acc_9_5 = q_acc_5_9;
             double q_acc_9_6 = q_acc_6_9;
             double q_acc_9_7 = q_acc_7_9;
             double q_acc_9_8 = q_acc_8_9;
             const double elMatVec_0 = q_acc_0_0*src_dof_0 + q_acc_0_1*src_dof_1 + q_acc_0_2*src_dof_2 + q_acc_0_3*src_dof_3 + q_acc_0_4*src_dof_4 + q_acc_0_5*src_dof_5 + q_acc_0_6*src_dof_6 + q_acc_0_7*src_dof_7 + q_acc_0_8*src_dof_8 + q_acc_0_9*src_dof_9;
             const double elMatVec_1 = q_acc_1_0*src_dof_0 + q_acc_1_1*src_dof_1 + q_acc_1_2*src_dof_2 + q_acc_1_3*src_dof_3 + q_acc_1_4*src_dof_4 + q_acc_1_5*src_dof_5 + q_acc_1_6*src_dof_6 + q_acc_1_7*src_dof_7 + q_acc_1_8*src_dof_8 + q_acc_1_9*src_dof_9;
             const double elMatVec_2 = q_acc_2_0*src_dof_0 + q_acc_2_1*src_dof_1 + q_acc_2_2*src_dof_2 + q_acc_2_3*src_dof_3 + q_acc_2_4*src_dof_4 + q_acc_2_5*src_dof_5 + q_acc_2_6*src_dof_6 + q_acc_2_7*src_dof_7 + q_acc_2_8*src_dof_8 + q_acc_2_9*src_dof_9;
             const double elMatVec_3 = q_acc_3_0*src_dof_0 + q_acc_3_1*src_dof_1 + q_acc_3_2*src_dof_2 + q_acc_3_3*src_dof_3 + q_acc_3_4*src_dof_4 + q_acc_3_5*src_dof_5 + q_acc_3_6*src_dof_6 + q_acc_3_7*src_dof_7 + q_acc_3_8*src_dof_8 + q_acc_3_9*src_dof_9;
             const double elMatVec_4 = q_acc_4_0*src_dof_0 + q_acc_4_1*src_dof_1 + q_acc_4_2*src_dof_2 + q_acc_4_3*src_dof_3 + q_acc_4_4*src_dof_4 + q_acc_4_5*src_dof_5 + q_acc_4_6*src_dof_6 + q_acc_4_7*src_dof_7 + q_acc_4_8*src_dof_8 + q_acc_4_9*src_dof_9;
             const double elMatVec_5 = q_acc_5_0*src_dof_0 + q_acc_5_1*src_dof_1 + q_acc_5_2*src_dof_2 + q_acc_5_3*src_dof_3 + q_acc_5_4*src_dof_4 + q_acc_5_5*src_dof_5 + q_acc_5_6*src_dof_6 + q_acc_5_7*src_dof_7 + q_acc_5_8*src_dof_8 + q_acc_5_9*src_dof_9;
             const double elMatVec_6 = q_acc_6_0*src_dof_0 + q_acc_6_1*src_dof_1 + q_acc_6_2*src_dof_2 + q_acc_6_3*src_dof_3 + q_acc_6_4*src_dof_4 + q_acc_6_5*src_dof_5 + q_acc_6_6*src_dof_6 + q_acc_6_7*src_dof_7 + q_acc_6_8*src_dof_8 + q_acc_6_9*src_dof_9;
             const double elMatVec_7 = q_acc_7_0*src_dof_0 + q_acc_7_1*src_dof_1 + q_acc_7_2*src_dof_2 + q_acc_7_3*src_dof_3 + q_acc_7_4*src_dof_4 + q_acc_7_5*src_dof_5 + q_acc_7_6*src_dof_6 + q_acc_7_7*src_dof_7 + q_acc_7_8*src_dof_8 + q_acc_7_9*src_dof_9;
             const double elMatVec_8 = q_acc_8_0*src_dof_0 + q_acc_8_1*src_dof_1 + q_acc_8_2*src_dof_2 + q_acc_8_3*src_dof_3 + q_acc_8_4*src_dof_4 + q_acc_8_5*src_dof_5 + q_acc_8_6*src_dof_6 + q_acc_8_7*src_dof_7 + q_acc_8_8*src_dof_8 + q_acc_8_9*src_dof_9;
             const double elMatVec_9 = q_acc_9_0*src_dof_0 + q_acc_9_1*src_dof_1 + q_acc_9_2*src_dof_2 + q_acc_9_3*src_dof_3 + q_acc_9_4*src_dof_4 + q_acc_9_5*src_dof_5 + q_acc_9_6*src_dof_6 + q_acc_9_7*src_dof_7 + q_acc_9_8*src_dof_8 + q_acc_9_9*src_dof_9;
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_0 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_1 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)*(-ctr_2 + micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1] = elMatVec_2 + _data_dstVertex[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6)) + 1];
             _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))] = elMatVec_3 + _data_dstVertex[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + (((micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)*(micro_edges_per_macro_edge + 3)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_4 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + 4*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_5 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 5*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1] = elMatVec_6 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge + 1) - ((ctr_1*(ctr_1 + 1)) / (2)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6)) + 1];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_7 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + 3*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
             _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))] = elMatVec_8 + _data_dstEdge[ctr_0 + ctr_1*(-ctr_2 + micro_edges_per_macro_edge) - ((ctr_1*(ctr_1 + 1)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge - 1)*(micro_edges_per_macro_edge + 1)) / (6)) + 6*((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge - 1)*(-ctr_2 + micro_edges_per_macro_edge + 1)) / (6))];
             _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))] = elMatVec_9 + _data_dstEdge[ctr_0 + (ctr_1 + 1)*(-ctr_2 + micro_edges_per_macro_edge + 1) - (((ctr_1 + 1)*(ctr_1 + 2)) / (2)) + ((micro_edges_per_macro_edge*(micro_edges_per_macro_edge + 1)*(micro_edges_per_macro_edge + 2)) / (6)) - (((-ctr_2 + micro_edges_per_macro_edge)*(-ctr_2 + micro_edges_per_macro_edge + 1)*(-ctr_2 + micro_edges_per_macro_edge + 2)) / (6))];
          }
       }
    }
}
} // namespace operatorgeneration

} // namespace hyteg
